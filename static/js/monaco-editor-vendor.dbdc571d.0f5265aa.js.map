{"version":3,"file":"static/js/monaco-editor-vendor.dbdc571d.0f5265aa.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commandIds.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionContextKeys.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/singleTextEdit.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/provideInlineCompletions.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsSource.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commands.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hoverParticipant.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/inlineProgress/browser/inlineProgress.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nconst $ = dom.$;\nexport let ContentHoverController = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        this._currentResult = null;\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            if (!this._computer.anchor) {\n                // invalid state, ignore result\n                return;\n            }\n            const messages = (result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value);\n            this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._currentResult) {\n                this._widget.clear();\n                this._setCurrentResult(this._currentResult); // render again\n            }\n        }));\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    maybeShowAt(mouseEvent) {\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(48 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    startShowingAtRange(range, mode, source, focus) {\n        this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n        if (!this._widget.position || !this._currentResult) {\n            // The hover is not visible\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n                return true;\n            }\n            return false;\n        }\n        // The hover is currently visible\n        const hoverIsSticky = this._editor.getOption(58 /* EditorOption.hover */).sticky;\n        const isGettingCloser = (hoverIsSticky && mouseEvent && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy));\n        if (isGettingCloser) {\n            // The mouse is getting closer to the hover, so we will keep the hover untouched\n            // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n            }\n            return true;\n        }\n        if (!anchor) {\n            this._setCurrentResult(null);\n            return false;\n        }\n        if (anchor && this._currentResult.anchor.equals(anchor)) {\n            // The widget is currently showing results for the exact same anchor, so no update is needed\n            return true;\n        }\n        if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n            // The new anchor is not compatible with the previous anchor\n            this._setCurrentResult(null);\n            this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n            return true;\n        }\n        // We aren't getting any closer to the hover, so we will filter existing results\n        // and keep those which also apply to the new anchor.\n        this._setCurrentResult(this._currentResult.filter(anchor));\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n    }\n    _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to start a hover operation at the exact same anchor as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._computer.source = source;\n        this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n        this._hoverOperation.start(mode);\n    }\n    _setCurrentResult(hoverResult) {\n        if (this._currentResult === hoverResult) {\n            // avoid updating the DOM to avoid resetting the user selection\n            return;\n        }\n        if (hoverResult && hoverResult.messages.length === 0) {\n            hoverResult = null;\n        }\n        this._currentResult = hoverResult;\n        if (this._currentResult) {\n            this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n        }\n        else {\n            this._widget.hide();\n        }\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._setCurrentResult(null);\n    }\n    isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    isVisibleFromKeyboard() {\n        return this._widget.isVisibleFromKeyboard;\n    }\n    isVisible() {\n        return this._widget.isVisible;\n    }\n    containsNode(node) {\n        return (node ? this._widget.getDomNode().contains(node) : false);\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(hoverResult) {\n        if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n            // The hover is visible with a previous complete result.\n            if (!hoverResult.isComplete) {\n                // Instead of rendering the new partial result, we wait for the result to be complete.\n                return;\n            }\n            if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n                // The hover would now hide normally, so we'll keep the previous messages\n                return;\n            }\n        }\n        this._setCurrentResult(hoverResult);\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtSecondaryPosition, highlightRange } = ContentHoverController.computeHoverRanges(this._editor, anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        const isBeforeContent = messages.some(m => m.isBeforeContent);\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                highlightDecoration.set([{\n                        range: highlightRange,\n                        options: ContentHoverController._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    highlightDecoration.clear();\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(58 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, anchor.initialMousePosX, anchor.initialMousePosY, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(editor, anchorRange, messages) {\n        let startColumnBoundary = 1;\n        if (editor.hasModel()) {\n            // Ensure the range is on the current view line\n            const viewModel = editor._getViewModel();\n            const coordinatesConverter = viewModel.coordinatesConverter;\n            const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n            const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n            startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n        }\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        return {\n            showAtPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn),\n            showAtSecondaryPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn),\n            highlightRange\n        };\n    }\n    focus() {\n        this._widget.focus();\n    }\n    scrollUp() {\n        this._widget.scrollUp();\n    }\n    scrollDown() {\n        this._widget.scrollDown();\n    }\n    scrollLeft() {\n        this._widget.scrollLeft();\n    }\n    scrollRight() {\n        this._widget.scrollRight();\n    }\n    pageUp() {\n        this._widget.pageUp();\n    }\n    pageDown() {\n        this._widget.pageDown();\n    }\n    goToTop() {\n        this._widget.goToTop();\n    }\n    goToBottom() {\n        this._widget.goToBottom();\n    }\n    escape() {\n        this._widget.escape();\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nclass HoverResult {\n    constructor(anchor, messages, isComplete) {\n        this.anchor = anchor;\n        this.messages = messages;\n        this.isComplete = isComplete;\n    }\n    filter(anchor) {\n        const filteredMessages = this.messages.filter((m) => m.isValidForHoverAnchor(anchor));\n        if (filteredMessages.length === this.messages.length) {\n            return this;\n        }\n        return new FilteredHoverResult(this, this.anchor, filteredMessages, this.isComplete);\n    }\n}\nclass FilteredHoverResult extends HoverResult {\n    constructor(original, anchor, messages, isComplete) {\n        super(anchor, messages, isComplete);\n        this.original = original;\n    }\n    filter(anchor) {\n        return this.original.filter(anchor);\n    }\n}\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtSecondaryPosition, preferAbove, stoleFocus, source, isBeforeContent, initialMousePosX, initialMousePosY, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtSecondaryPosition = showAtSecondaryPosition;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.source = source;\n        this.isBeforeContent = isBeforeContent;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.disposables = disposables;\n        this.closestMouseDistance = undefined;\n    }\n}\nexport let ContentHoverWidget = class ContentHoverWidget extends Disposable {\n    /**\n     * Returns `null` if the hover is not visible.\n     */\n    get position() {\n        var _a, _b;\n        return (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) !== null && _b !== void 0 ? _b : null;\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    get isVisibleFromKeyboard() {\n        var _a;\n        return (((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */);\n    }\n    get isVisible() {\n        var _a;\n        return (_a = this._hoverVisibleKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(_editor, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this.allowEditorOverflow = true;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(this._contextKeyService);\n        this._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(this._contextKeyService);\n        this._hover = this._register(new HoverWidget());\n        this._focusTracker = this._register(dom.trackFocus(this.getDomNode()));\n        this._horizontalScrollingBy = 30;\n        this._visibleData = null;\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(48 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._setVisibleData(null);\n        this._layout();\n        this._editor.addContentWidget(this);\n        this._register(this._focusTracker.onDidFocus(() => {\n            this._hoverFocusedKey.set(true);\n        }));\n        this._register(this._focusTracker.onDidBlur(() => {\n            this._hoverFocusedKey.set(false);\n        }));\n    }\n    dispose() {\n        this._editor.removeContentWidget(this);\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        super.dispose();\n    }\n    getId() {\n        return ContentHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        if (!this._visibleData) {\n            return null;\n        }\n        let preferAbove = this._visibleData.preferAbove;\n        if (!preferAbove && this._contextKeyService.getContextKeyValue(SuggestContext.Visible.key)) {\n            // Prefer rendering above if the suggest widget is visible\n            preferAbove = true;\n        }\n        // :before content can align left of the text content\n        const affinity = this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined;\n        return {\n            position: this._visibleData.showAtPosition,\n            secondaryPosition: this._visibleData.showAtSecondaryPosition,\n            preference: (preferAbove\n                ? [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */]\n                : [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */]),\n            positionAffinity: affinity\n        };\n    }\n    isMouseGettingCloser(posx, posy) {\n        if (!this._visibleData) {\n            return false;\n        }\n        if (typeof this._visibleData.initialMousePosX === 'undefined' || typeof this._visibleData.initialMousePosY === 'undefined') {\n            this._visibleData.initialMousePosX = posx;\n            this._visibleData.initialMousePosY = posy;\n            return false;\n        }\n        const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n        if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n            this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        }\n        const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n            // The mouse is getting farther away\n            return false;\n        }\n        this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n        return true;\n    }\n    _setVisibleData(visibleData) {\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        this._visibleData = visibleData;\n        this._hoverVisibleKey.set(!!this._visibleData);\n        this._hover.containerDomNode.classList.toggle('hidden', !this._visibleData);\n    }\n    _layout() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n        const { fontSize, lineHeight } = this._editor.getOption(48 /* EditorOption.fontInfo */);\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    showAt(node, visibleData) {\n        var _a;\n        this._setVisibleData(visibleData);\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._hover.contentsDomNode.style.paddingBottom = '';\n        this._updateFont();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (visibleData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        (_a = visibleData.colorPicker) === null || _a === void 0 ? void 0 : _a.layout();\n    }\n    hide() {\n        if (this._visibleData) {\n            const stoleFocus = this._visibleData.stoleFocus;\n            this._setVisibleData(null);\n            this._hoverFocusedKey.set(false);\n            this._editor.layoutContentWidget(this);\n            if (stoleFocus) {\n                this._editor.focus();\n            }\n        }\n    }\n    onContentsChanged() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = (scrollDimensions.scrollWidth > scrollDimensions.width);\n        if (hasHorizontalScrollbar) {\n            // There is just a horizontal scrollbar\n            const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n            if (this._hover.contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n                this._hover.contentsDomNode.style.paddingBottom = extraBottomPadding;\n                this._editor.layoutContentWidget(this);\n                this._hover.onContentsChanged();\n            }\n        }\n    }\n    clear() {\n        this._hover.contentsDomNode.textContent = '';\n    }\n    focus() {\n        this._hover.containerDomNode.focus();\n    }\n    scrollUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(48 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - fontInfo.lineHeight });\n    }\n    scrollDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(48 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + fontInfo.lineHeight });\n    }\n    scrollLeft() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft - this._horizontalScrollingBy });\n    }\n    scrollRight() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft + this._horizontalScrollingBy });\n    }\n    pageUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - scrollHeight });\n    }\n    pageDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + scrollHeight });\n    }\n    goToTop() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n    }\n    goToBottom() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight });\n    }\n    escape() {\n        this._editor.focus();\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.contentHoverWidget';\nContentHoverWidget = __decorate([\n    __param(1, IContextKeyService)\n], ContentHoverWidget);\nexport let EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    get hasContent() {\n        return this._hasContent;\n    }\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nclass ContentHoverComputer {\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    get source() { return this._source; }\n    set source(value) { this._source = value; }\n    get insistOnKeepingHoverVisible() { return this._insistOnKeepingHoverVisible; }\n    set insistOnKeepingHoverVisible(value) { this._insistOnKeepingHoverVisible = value; }\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n        this._source = 0 /* HoverStartSource.Mouse */;\n        this._insistOnKeepingHoverVisible = false;\n    }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n    const x = (left + width / 2); // x center of rectangle\n    const y = (top + height / 2); // y center of rectangle\n    const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n    const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n    return Math.sqrt(dx * dx + dy * dy);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(48 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(64 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions, quickFixCommandId } from '../../codeAction/browser/codeAction.js';\nimport { CodeActionController } from '../../codeAction/browser/codeActionController.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../../codeAction/common/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* CodeActionTriggerType.Invoke */,\n    filter: { include: CodeActionKind.QuickFix },\n    triggerAction: CodeActionTriggerSource.QuickFixHover\n};\nexport let MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 1;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(88 /* EditorOption.readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: quickFixCommandId,\n                    run: (target) => {\n                        showing = true;\n                        const controller = CodeActionController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left,\n                            y: elementPosition.top,\n                            width: elementPosition.width,\n                            height: elementPosition.height\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport { InlineSuggestionHintsContentWidget } from '../../inlineCompletions/browser/inlineCompletionsHintsWidget.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport './hover.css';\nexport let ModesHoverController = class ModesHoverController {\n    static get(editor) {\n        return editor.getContribution(ModesHoverController.ID);\n    }\n    constructor(_editor, _instantiationService, _openerService, _languageService, _keybindingService) {\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._keybindingService = _keybindingService;\n        this._toUnhook = new DisposableStore();\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._hookEvents();\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(58 /* EditorOption.hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        });\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(58 /* EditorOption.hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        var _a;\n        const targetEm = (mouseEvent.event.browserEvent.relatedTarget);\n        if ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode(targetEm)) {\n            // when the mouse is inside hover widget\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const target = mouseEvent.target;\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return;\n        }\n        if (this._isHoverSticky && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode((_b = mouseEvent.event.browserEvent.view) === null || _b === void 0 ? void 0 : _b.document.activeElement)) && !((_d = (_c = mouseEvent.event.browserEvent.view) === null || _c === void 0 ? void 0 : _c.getSelection()) === null || _d === void 0 ? void 0 : _d.isCollapsed)) {\n            // selected text within content hover widget\n            return;\n        }\n        if (!this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID\n            && ((_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.isColorPickerVisible())) {\n            // though the hover is not sticky, the color picker needs to.\n            return;\n        }\n        if (this._isHoverSticky && target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return;\n        }\n        if (this._isHoverSticky && ((_f = this._contentWidget) === null || _f === void 0 ? void 0 : _f.isVisibleFromKeyboard())) {\n            // Sticky mode is on and the hover has been shown via keyboard\n            // so moving the mouse has no effect\n            return;\n        }\n        if (!this._isHoverEnabled) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_g = this._glyphWidget) === null || _g === void 0 ? void 0 : _g.hide();\n            return;\n        }\n        if (target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_h = this._contentWidget) === null || _h === void 0 ? void 0 : _h.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const resolvedKeyboardEvent = this._keybindingService.softDispatch(e, this._editor.getDomNode());\n        // If the beginning of a multi-chord keybinding is pressed, or the command aims to focus the hover, set the variable to true, otherwise false\n        const mightTriggerFocus = (resolvedKeyboardEvent.kind === 1 /* ResultKind.MoreChordsNeeded */ || (resolvedKeyboardEvent.kind === 2 /* ResultKind.KbFound */ && resolvedKeyboardEvent.commandId === 'editor.action.showHover' && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible())));\n        if (e.keyCode !== 5 /* KeyCode.Ctrl */ && e.keyCode !== 6 /* KeyCode.Alt */ && e.keyCode !== 57 /* KeyCode.Meta */ && e.keyCode !== 4 /* KeyCode.Shift */\n            && !mightTriggerFocus) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible())) || InlineSuggestionHintsContentWidget.dropDownVisible) {\n            return;\n        }\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    isColorPickerVisible() {\n        var _a;\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\n    }\n    showContentHover(range, mode, source, focus) {\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, source, focus);\n    }\n    focus() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    scrollUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollUp();\n    }\n    scrollDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollDown();\n    }\n    scrollLeft() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollLeft();\n    }\n    scrollRight() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollRight();\n    }\n    pageUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageUp();\n    }\n    pageDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageDown();\n    }\n    goToTop() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToTop();\n    }\n    goToBottom() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToBottom();\n    }\n    escape() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.escape();\n    }\n    isHoverVisible() {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible();\n    }\n    dispose() {\n        var _a, _b;\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        this._didChangeConfigurationHandler.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IKeybindingService)\n], ModesHoverController);\nclass ShowOrFocusHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showOrFocusHover',\n                comment: [\n                    'Label for action that will trigger the showing/focusing of a hover in the editor.',\n                    'If the hover is not visible, it will show the hover.',\n                    'This allows for users to show the hover without using the mouse.',\n                    'If the hover is already visible, it will take focus.'\n                ]\n            }, \"Show or Focus Hover\"),\n            description: {\n                description: `Show or Focus Hover`,\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'focus': {\n                                    description: 'Controls if when triggered with the keyboard, the hover should take focus immediately.',\n                                    type: 'boolean',\n                                    default: false\n                                }\n                            },\n                        }\n                    }]\n            },\n            alias: 'Show or Focus Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */ || !!(args === null || args === void 0 ? void 0 : args.focus);\n        if (controller.isHoverVisible()) {\n            controller.focus();\n        }\n        else {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, focus);\n        }\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, true);\n        });\n    }\n}\nclass ScrollUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollUpHover',\n            label: nls.localize({\n                key: 'scrollUpHover',\n                comment: [\n                    'Action that allows to scroll up in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Up Hover\"),\n            alias: 'Scroll Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 16 /* KeyCode.UpArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollUp();\n    }\n}\nclass ScrollDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollDownHover',\n            label: nls.localize({\n                key: 'scrollDownHover',\n                comment: [\n                    'Action that allows to scroll down in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Down Hover\"),\n            alias: 'Scroll Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 18 /* KeyCode.DownArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollDown();\n    }\n}\nclass ScrollLeftHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollLeftHover',\n            label: nls.localize({\n                key: 'scrollLeftHover',\n                comment: [\n                    'Action that allows to scroll left in the hover widget with the left arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Left Hover\"),\n            alias: 'Scroll Left Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 15 /* KeyCode.LeftArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollLeft();\n    }\n}\nclass ScrollRightHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollRightHover',\n            label: nls.localize({\n                key: 'scrollRightHover',\n                comment: [\n                    'Action that allows to scroll right in the hover widget with the right arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Right Hover\"),\n            alias: 'Scroll Right Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 17 /* KeyCode.RightArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollRight();\n    }\n}\nclass PageUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageUpHover',\n            label: nls.localize({\n                key: 'pageUpHover',\n                comment: [\n                    'Action that allows to page up in the hover widget with the page up command when the hover widget is focused.'\n                ]\n            }, \"Page Up Hover\"),\n            alias: 'Page Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 11 /* KeyCode.PageUp */,\n                secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageUp();\n    }\n}\nclass PageDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageDownHover',\n            label: nls.localize({\n                key: 'pageDownHover',\n                comment: [\n                    'Action that allows to page down in the hover widget with the page down command when the hover widget is focused.'\n                ]\n            }, \"Page Down Hover\"),\n            alias: 'Page Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 12 /* KeyCode.PageDown */,\n                secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageDown();\n    }\n}\nclass GoToTopHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToTopHover',\n            label: nls.localize({\n                key: 'goToTopHover',\n                comment: [\n                    'Action that allows to go to the top of the hover widget with the home command when the hover widget is focused.'\n                ]\n            }, \"Go To Top Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 14 /* KeyCode.Home */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToTop();\n    }\n}\nclass GoToBottomHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToBottomHover',\n            label: nls.localize({\n                key: 'goToBottomHover',\n                comment: [\n                    'Action that allows to go to the bottom in the hover widget with the end command when the hover widget is focused.'\n                ]\n            }, \"Go To Bottom Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 13 /* KeyCode.End */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToBottom();\n    }\n}\nclass EscapeFocusHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.escapeFocusHover',\n            label: nls.localize({\n                key: 'escapeFocusHover',\n                comment: [\n                    'Action that allows to escape from the hover widget with the escape command when the hover widget is focused.'\n                ]\n            }, \"Escape Focus Hover\"),\n            alias: 'Escape Focus Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 9 /* KeyCode.Escape */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.escape();\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(ShowOrFocusHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nregisterEditorAction(ScrollUpHoverAction);\nregisterEditorAction(ScrollDownHoverAction);\nregisterEditorAction(ScrollLeftHoverAction);\nregisterEditorAction(ScrollRightHoverAction);\nregisterEditorAction(PageUpHoverAction);\nregisterEditorAction(PageDownHoverAction);\nregisterEditorAction(GoToTopHoverAction);\nregisterEditorAction(GoToBottomHoverAction);\nregisterEditorAction(EscapeFocusHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* HoverOperationState.Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(58 /* EditorOption.hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* HoverOperationState.SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var _a, e_1, _b, _c;\n                try {\n                    try {\n                        for (var _d = true, _e = __asyncValues(this._asyncIterable), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true) {\n                            _c = _f.value;\n                            _d = false;\n                            const item = _c;\n                            if (item) {\n                                this._result.push(item);\n                                this._fireResult();\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* HoverOperationState.WaitingForAsync */ || this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* HoverOperationState.Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* HoverOperationState.Idle */ : 3 /* HoverOperationState.WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* HoverOperationState.WaitingForAsync */) {\n            this._setState(4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* HoverOperationState.FirstWait */ || this._state === 2 /* HoverOperationState.SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* HoverOperationState.Idle */);\n        const hasLoadingMessage = (this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* HoverStartMode.Delayed */) {\n            if (this._state === 0 /* HoverOperationState.Idle */) {\n                this._setState(1 /* HoverOperationState.FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* HoverOperationState.Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* HoverOperationState.SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* HoverOperationState.Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range, initialMousePosX, initialMousePosY) {\n        this.priority = priority;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.type = 1 /* HoverAnchorType.Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* HoverAnchorType.Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* HoverAnchorType.Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range, initialMousePosX, initialMousePosY, supportsMarkerHover) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.supportsMarkerHover = supportsMarkerHover;\n        this.type = 2 /* HoverAnchorType.ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, isBeforeContent, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.isBeforeContent = isBeforeContent;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nexport let MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 3;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const stopRenderingLineAfter = this._editor.getOption(113 /* EditorOption.stopRenderingLineAfter */);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        let stopRenderingMessage = false;\n        if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n            stopRenderingMessage = true;\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n                }], false, index++));\n        }\n        if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], false, index++));\n        }\n        let isBeforeContent = false;\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            if (d.options.beforeContentClassName) {\n                isBeforeContent = true;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, false, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController.ID);\n    }\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    dispose() {\n    }\n    run(source, up) {\n        var _a;\n        // cancel any pending request\n        (_a = this.currentRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            var _a;\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController.DECORATION\n                }]);\n            // remove decoration after delay\n            (_a = this.decorationRemover) === null || _a === void 0 ? void 0 : _a.cancel();\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 87 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 89 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nexport class IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport class IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, displaySizeOnly, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n        this.displaySizeOnly = displaySizeOnly;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const modelOpts = model.getOptions();\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: (n === creationOpts.tabSize && n === modelOpts.tabSize\n                ? nls.localize('configuredTabSize', \"Configured Tab Size\")\n                : n === creationOpts.tabSize\n                    ? nls.localize('defaultTabSize', \"Default Tab Size\")\n                    : n === modelOpts.tabSize\n                        ? nls.localize('currentTabSize', \"Current Tab Size\")\n                        : undefined)\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        const pickedVal = parseInt(pick.label, 10);\n                        if (this.displaySizeOnly) {\n                            model.updateOptions({\n                                tabSize: pickedVal\n                            });\n                        }\n                        else {\n                            model.updateOptions({\n                                tabSize: pickedVal,\n                                indentSize: pickedVal,\n                                insertSpaces: this.insertSpaces\n                            });\n                        }\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, false, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport class ChangeTabDisplaySize extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, true, {\n            id: ChangeTabDisplaySize.ID,\n            label: nls.localize('changeTabDisplaySize', \"Change Tab Display Size\"),\n            alias: 'Change Tab Display Size',\n            precondition: undefined\n        });\n    }\n}\nChangeTabDisplaySize.ID = 'editor.action.changeTabDisplaySize';\nexport class DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nexport let AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(10 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(53 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(10 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(ChangeTabDisplaySize);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nexport let InlayHintsController = class InlayHintsController {\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(136 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(136 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(),\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                    unicodeBidi: 'isolate'\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n        scrollState.restore(this._editor);\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(136 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(50 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(47 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner, initialMousePosX, initialMousePosY) {\n        super(10, owner, part.item.anchor.range, initialMousePosX, initialMousePosY, true);\n        this.part = part;\n    }\n}\nexport let InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService, languageFeaturesService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this, mouseEvent.event.posx, mouseEvent.event.posy);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var _a, e_1, _b, _c;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], false, 0));\n            }\n            // (1.2) Inlay dbl-click gesture\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double-click to insert\"))], false, 10001));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], false, 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(75 /* EditorOption.multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], false, 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                    _c = iterable_1_1.value;\n                    _d = false;\n                    const item = _c;\n                    executor.emitOne(item);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_1.return)) yield _b.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, false, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService),\n    __param(5, ILanguageFeaturesService)\n], InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nHoverParticipantRegistry.register(InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation actions\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : generateUuid()));\n        for (const delegate of SymbolNavigationAction.all()) {\n            if (filter.has(delegate.desc.id)) {\n                menuActions.push(new Action(delegate.desc.id, MenuItemAction.label(delegate.desc, { renderShortTitle: true }), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        const symbolAnchor = new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range));\n                        const range = part.item.anchor.range;\n                        yield instaService.invokeFunction(delegate.runEditorCommand.bind(delegate), editor, symbolAnchor, range);\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(123 /* EditorOption.useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(85 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { title: { value: '', original: '' }, id: '', precondition: undefined });\n            return action.run(accessor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)), Range.lift(location.range));\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { autorun } from '../../../../base/common/observable.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nexport class InlineCompletionContextKeys extends Disposable {\n    constructor(contextKeyService, model) {\n        super();\n        this.contextKeyService = contextKeyService;\n        this.model = model;\n        this.inlineCompletionVisible = InlineCompletionContextKeys.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = InlineCompletionContextKeys.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n        this.suppressSuggestions = InlineCompletionContextKeys.suppressSuggestions.bindTo(this.contextKeyService);\n        this._register(autorun('update context key: inlineCompletionVisible, suppressSuggestions', (reader) => {\n            const model = this.model.read(reader);\n            const suggestion = model === null || model === void 0 ? void 0 : model.selectedInlineCompletion.read(reader);\n            const ghostText = model === null || model === void 0 ? void 0 : model.ghostText.read(reader);\n            const selectedSuggestItem = model === null || model === void 0 ? void 0 : model.selectedSuggestItem.read(reader);\n            this.inlineCompletionVisible.set(selectedSuggestItem === undefined && ghostText !== undefined && !ghostText.isEmpty());\n            if (ghostText && suggestion) {\n                this.suppressSuggestions.set(suggestion.inlineCompletion.source.inlineCompletions.suppressSuggestions);\n            }\n        }));\n        this._register(autorun('update context key: inlineCompletionSuggestsIndentation, inlineCompletionSuggestsIndentationLessThanTabSize', (reader) => {\n            const model = this.model.read(reader);\n            let startsWithIndentation = false;\n            let startsWithIndentationLessThanTabSize = true;\n            const ghostText = model === null || model === void 0 ? void 0 : model.ghostText.read(reader);\n            if (!!(model === null || model === void 0 ? void 0 : model.selectedSuggestItem) && ghostText && ghostText.parts.length > 0) {\n                const { column, lines } = ghostText.parts[0];\n                const firstLine = lines[0];\n                const indentationEndColumn = model.textModel.getLineIndentColumn(ghostText.lineNumber);\n                const inIndentation = column <= indentationEndColumn;\n                if (inIndentation) {\n                    let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                    if (firstNonWsIdx === -1) {\n                        firstNonWsIdx = firstLine.length - 1;\n                    }\n                    startsWithIndentation = firstNonWsIdx > 0;\n                    const tabSize = model.textModel.getOptions().tabSize;\n                    const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                    startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n                }\n            }\n            this.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n            this.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n        }));\n    }\n}\nInlineCompletionContextKeys.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nInlineCompletionContextKeys.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nInlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\nInlineCompletionContextKeys.suppressSuggestions = new RawContextKey('inlineSuggestionSuppressSuggestions', undefined, localize('suppressSuggestions', \"Whether suggestions should be suppressed for the current suggestion\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorun } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nexport function applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\nexport class ColumnRange {\n    constructor(startColumn, endColumnExclusive) {\n        this.startColumn = startColumn;\n        this.endColumnExclusive = endColumnExclusive;\n        if (startColumn > endColumnExclusive) {\n            throw new BugIndicatingError(`startColumn ${startColumn} cannot be after endColumnExclusive ${endColumnExclusive}`);\n        }\n    }\n    toRange(lineNumber) {\n        return new Range(lineNumber, this.startColumn, lineNumber, this.endColumnExclusive);\n    }\n}\nexport function applyObservableDecorations(editor, decorations) {\n    const d = new DisposableStore();\n    const decorationsCollection = editor.createDecorationsCollection();\n    d.add(autorun(`Apply decorations from ${decorations.debugName}`, reader => {\n        const d = decorations.read(reader);\n        decorationsCollection.set(d);\n    }));\n    d.add({\n        dispose: () => {\n            decorationsCollection.clear();\n        }\n    });\n    return d;\n}\nexport function addPositions(pos1, pos2) {\n    return new Position(pos1.lineNumber + pos2.lineNumber - 1, pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column);\n}\nexport function lengthOfText(text) {\n    let line = 1;\n    let column = 1;\n    for (const c of text) {\n        if (c === '\\n') {\n            line++;\n            column = 1;\n        }\n        else {\n            column++;\n        }\n    }\n    return new Position(line, column);\n}\n","import { applyEdits } from './utils.js';\nexport class GhostText {\n    constructor(lineNumber, parts) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    get lineCount() {\n        return 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnRange, newLines, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnRange = columnRange;\n        this.newLines = newLines;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnRange.endColumnExclusive, this.newLines, false),\n        ];\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n    get lineCount() {\n        return this.newLines.length;\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent, observableSignalFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { ColumnRange, applyObservableDecorations } from './utils.js';\nexport let GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.languageService = languageService;\n        this.isDisposed = observableValue('isDisposed', false);\n        this.currentTextModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\n        this.uiState = derived('uiState', reader => {\n            if (this.isDisposed.read(reader)) {\n                return undefined;\n            }\n            const textModel = this.currentTextModel.read(reader);\n            if (textModel !== this.model.targetTextModel.read(reader)) {\n                return undefined;\n            }\n            const ghostText = this.model.ghostText.read(reader);\n            if (!ghostText) {\n                return undefined;\n            }\n            const replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n            const inlineTexts = [];\n            const additionalLines = [];\n            function addToAdditionalLines(lines, className) {\n                if (additionalLines.length > 0) {\n                    const lastLine = additionalLines[additionalLines.length - 1];\n                    if (className) {\n                        lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                    }\n                    lastLine.content += lines[0];\n                    lines = lines.slice(1);\n                }\n                for (const line of lines) {\n                    additionalLines.push({\n                        content: line,\n                        decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                    });\n                }\n            }\n            const textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n            let hiddenTextStartColumn = undefined;\n            let lastIdx = 0;\n            for (const part of ghostText.parts) {\n                let lines = part.lines;\n                if (hiddenTextStartColumn === undefined) {\n                    inlineTexts.push({\n                        column: part.column,\n                        text: lines[0],\n                        preview: part.preview,\n                    });\n                    lines = lines.slice(1);\n                }\n                else {\n                    addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n                }\n                if (lines.length > 0) {\n                    addToAdditionalLines(lines, 'ghost-text');\n                    if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                        hiddenTextStartColumn = part.column;\n                    }\n                }\n                lastIdx = part.column - 1;\n            }\n            if (hiddenTextStartColumn !== undefined) {\n                addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n            }\n            const hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n            return {\n                replacedRange,\n                inlineTexts,\n                additionalLines,\n                hiddenRange,\n                lineNumber: ghostText.lineNumber,\n                additionalReservedLineCount: this.model.minReservedLineCount.read(reader),\n                targetTextModel: textModel,\n            };\n        });\n        this.decorations = derived('decorations', reader => {\n            const uiState = this.uiState.read(reader);\n            if (!uiState) {\n                return [];\n            }\n            const decorations = [];\n            if (uiState.replacedRange) {\n                decorations.push({\n                    range: uiState.replacedRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'inline-completion-text-to-replace', description: 'GhostTextReplacement' }\n                });\n            }\n            if (uiState.hiddenRange) {\n                decorations.push({\n                    range: uiState.hiddenRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\n                });\n            }\n            for (const p of uiState.inlineTexts) {\n                decorations.push({\n                    range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n                    options: {\n                        description: 'ghost-text',\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }\n            return decorations;\n        });\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec, derived('lines', (reader) => {\n            const uiState = this.uiState.read(reader);\n            return uiState ? {\n                lineNumber: uiState.lineNumber,\n                additionalLines: uiState.additionalLines,\n                minReservedLineCount: uiState.additionalReservedLineCount,\n                targetTextModel: uiState.targetTextModel,\n            } : undefined;\n        })));\n        this._register(toDisposable(() => { this.isDisposed.set(true, undefined); }));\n        this._register(applyObservableDecorations(this.editor, this.decorations));\n    }\n    ownsViewZone(viewZoneId) {\n        return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, ILanguageService)\n], GhostTextWidget);\nclass AdditionalLinesWidget extends Disposable {\n    get viewZoneId() { return this._viewZoneId; }\n    constructor(editor, languageIdCodec, lines) {\n        super();\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this.lines = lines;\n        this._viewZoneId = undefined;\n        this.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(this.editor.onDidChangeConfiguration, e => e.hasChanged(31 /* EditorOption.disableMonospaceOptimizations */)\n            || e.hasChanged(113 /* EditorOption.stopRenderingLineAfter */)\n            || e.hasChanged(95 /* EditorOption.renderWhitespace */)\n            || e.hasChanged(90 /* EditorOption.renderControlCharacters */)\n            || e.hasChanged(49 /* EditorOption.fontLigatures */)\n            || e.hasChanged(48 /* EditorOption.fontInfo */)\n            || e.hasChanged(64 /* EditorOption.lineHeight */)));\n        this._register(autorun('update view zone', reader => {\n            const lines = this.lines.read(reader);\n            this.editorOptionsChanged.read(reader);\n            if (lines) {\n                this.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n            }\n            else {\n                this.clear();\n            }\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(31 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(113 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(90 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(49 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(48 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(64 /* EditorOption.lineHeight */);\n    const sb = new StringBuilder(10000);\n    sb.appendString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendString('<div class=\"view-line');\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(i * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendString('</div>');\n    }\n    sb.appendString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nconst ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport { commonPrefixLength, getLeadingWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nimport { addPositions, lengthOfText } from './utils.js';\nexport class SingleTextEdit {\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    removeCommonPrefix(model, validModelRange) {\n        const modelRange = validModelRange ? this.range.intersectRanges(validModelRange) : this.range;\n        if (!modelRange) {\n            return this;\n        }\n        const valueToReplace = model.getValueInRange(modelRange, 1 /* EndOfLinePreference.LF */);\n        const commonPrefixLen = commonPrefixLength(valueToReplace, this.text);\n        const start = addPositions(this.range.getStartPosition(), lengthOfText(valueToReplace.substring(0, commonPrefixLen)));\n        const text = this.text.substring(commonPrefixLen);\n        const range = Range.fromPositions(start, this.range.getEndPosition());\n        return new SingleTextEdit(range, text);\n    }\n    augments(base) {\n        // The augmented completion must replace the base range, but can replace even more\n        return this.text.startsWith(base.text) && rangeExtends(this.range, base.range);\n    }\n    /**\n     * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n     * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n    */\n    computeGhostText(model, mode, cursorPosition, previewSuffixLength = 0) {\n        let edit = this.removeCommonPrefix(model);\n        if (edit.range.endLineNumber !== edit.range.startLineNumber) {\n            // This edit might span multiple lines, but the first lines must be a common prefix.\n            return undefined;\n        }\n        const sourceLine = model.getLineContent(edit.range.startLineNumber);\n        const sourceIndentationLength = getLeadingWhitespace(sourceLine).length;\n        const suggestionTouchesIndentation = edit.range.startColumn - 1 <= sourceIndentationLength;\n        if (suggestionTouchesIndentation) {\n            // source:      ··········[······abc]\n            //                         ^^^^^^^^^ inlineCompletion.range\n            //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n            //                         ^^^^^^ replacedIndentation.length\n            //                               ^^^ rangeThatDoesNotReplaceIndentation\n            // inlineCompletion.text: '··foo'\n            //                         ^^ suggestionAddedIndentationLength\n            const suggestionAddedIndentationLength = getLeadingWhitespace(edit.text).length;\n            const replacedIndentation = sourceLine.substring(edit.range.startColumn - 1, sourceIndentationLength);\n            const rangeThatDoesNotReplaceIndentation = Range.fromPositions(edit.range.getStartPosition().delta(0, replacedIndentation.length), edit.range.getEndPosition());\n            const suggestionWithoutIndentationChange = edit.text.startsWith(replacedIndentation)\n                // Adds more indentation without changing existing indentation: We can add ghost text for this\n                ? edit.text.substring(replacedIndentation.length)\n                // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n                : edit.text.substring(suggestionAddedIndentationLength);\n            edit = new SingleTextEdit(rangeThatDoesNotReplaceIndentation, suggestionWithoutIndentationChange);\n        }\n        // This is a single line string\n        const valueToBeReplaced = model.getValueInRange(edit.range);\n        const changes = cachingDiff(valueToBeReplaced, edit.text);\n        if (!changes) {\n            // No ghost text in case the diff would be too slow to compute\n            return undefined;\n        }\n        const lineNumber = edit.range.startLineNumber;\n        const parts = new Array();\n        if (mode === 'prefix') {\n            const filteredChanges = changes.filter(c => c.originalLength === 0);\n            if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n                // Prefixes only have a single change.\n                return undefined;\n            }\n        }\n        const previewStartInCompletionText = edit.text.length - previewSuffixLength;\n        for (const c of changes) {\n            const insertColumn = edit.range.startColumn + c.originalStart + c.originalLength;\n            if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === edit.range.startLineNumber && insertColumn < cursorPosition.column) {\n                // No ghost text before cursor\n                return undefined;\n            }\n            if (c.originalLength > 0) {\n                return undefined;\n            }\n            if (c.modifiedLength === 0) {\n                continue;\n            }\n            const modifiedEnd = c.modifiedStart + c.modifiedLength;\n            const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n            const nonPreviewText = edit.text.substring(c.modifiedStart, nonPreviewTextEnd);\n            const italicText = edit.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n            if (nonPreviewText.length > 0) {\n                const lines = splitLines(nonPreviewText);\n                parts.push(new GhostTextPart(insertColumn, lines, false));\n            }\n            if (italicText.length > 0) {\n                const lines = splitLines(italicText);\n                parts.push(new GhostTextPart(insertColumn, lines, true));\n            }\n        }\n        return new GhostText(lineNumber, parts);\n    }\n}\nfunction rangeExtends(extendingRange, rangeToExtend) {\n    return rangeToExtend.getStartPosition().equals(extendingRange.getStartPosition())\n        && rangeToExtend.getEndPosition().isBeforeOrEqual(extendingRange.getEndPosition());\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += c.originalLength;\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { assertNever } from '../../../../base/common/assert.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Range } from '../../../common/core/range.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Important: Don't use position after the await calls, as the model could have been changed in the meantime!\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const providerResults = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const completions = yield provider.provideInlineCompletions(model, position, context, token);\n                return ({ provider, completions });\n            }\n            catch (e) {\n                onUnexpectedExternalError(e);\n            }\n            return ({ provider, completions: undefined });\n        })));\n        const itemsByHash = new Map();\n        const lists = [];\n        for (const result of providerResults) {\n            const completions = result.completions;\n            if (!completions) {\n                continue;\n            }\n            const list = new InlineCompletionList(completions, result.provider);\n            lists.push(list);\n            for (const item of completions.items) {\n                const inlineCompletionItem = InlineCompletionItem.from(item, list, defaultReplaceRange, model, languageConfigurationService);\n                itemsByHash.set(inlineCompletionItem.hash(), inlineCompletionItem);\n            }\n        }\n        return new InlineCompletionProviderResult(Array.from(itemsByHash.values()), new Set(itemsByHash.keys()), lists);\n    });\n}\nexport class InlineCompletionProviderResult {\n    constructor(\n    /**\n     * Free of duplicates.\n     */\n    completions, hashs, providerResults) {\n        this.completions = completions;\n        this.hashs = hashs;\n        this.providerResults = providerResults;\n    }\n    has(item) {\n        return this.hashs.has(item.hash());\n    }\n    dispose() {\n        for (const result of this.providerResults) {\n            result.removeRef();\n        }\n    }\n}\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport class InlineCompletionList {\n    constructor(inlineCompletions, provider) {\n        this.inlineCompletions = inlineCompletions;\n        this.provider = provider;\n        this.refCount = 1;\n    }\n    addRef() {\n        this.refCount++;\n    }\n    removeRef() {\n        this.refCount--;\n        if (this.refCount === 0) {\n            this.provider.freeInlineCompletions(this.inlineCompletions);\n        }\n    }\n}\nexport class InlineCompletionItem {\n    static from(inlineCompletion, source, defaultReplaceRange, textModel, languageConfigurationService) {\n        let insertText;\n        let snippetInfo;\n        let range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n        if (typeof inlineCompletion.insertText === 'string') {\n            insertText = inlineCompletion.insertText;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                insertText = closeBrackets(insertText, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = insertText.length - inlineCompletion.insertText.length;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            snippetInfo = undefined;\n        }\n        else if ('snippet' in inlineCompletion.insertText) {\n            const preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                inlineCompletion.insertText.snippet = closeBrackets(inlineCompletion.insertText.snippet, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            const snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n            if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n                insertText = snippet.children[0].value;\n                snippetInfo = undefined;\n            }\n            else {\n                insertText = snippet.toString();\n                snippetInfo = {\n                    snippet: inlineCompletion.insertText.snippet,\n                    range: range\n                };\n            }\n        }\n        else {\n            assertNever(inlineCompletion.insertText);\n        }\n        return new InlineCompletionItem(insertText, inlineCompletion.command, range, insertText, snippetInfo, inlineCompletion.additionalTextEdits || getReadonlyEmptyArray(), inlineCompletion, source);\n    }\n    constructor(filterText, command, range, insertText, snippetInfo, additionalTextEdits, \n    /**\n     * A reference to the original inline completion this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    sourceInlineCompletion, \n    /**\n     * A reference to the original inline completion list this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    source) {\n        this.filterText = filterText;\n        this.command = command;\n        this.range = range;\n        this.insertText = insertText;\n        this.snippetInfo = snippetInfo;\n        this.additionalTextEdits = additionalTextEdits;\n        this.sourceInlineCompletion = sourceInlineCompletion;\n        this.source = source;\n        filterText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n        insertText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n    }\n    withRange(updatedRange) {\n        return new InlineCompletionItem(this.filterText, this.command, updatedRange, this.insertText, this.snippetInfo, this.additionalTextEdits, this.sourceInlineCompletion, this.source);\n    }\n    hash() {\n        return JSON.stringify({ insertText: this.insertText, range: this.range.toString() });\n    }\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { derived } from '../../../../base/common/observable.js';\nimport { disposableObservableValue, transaction } from '../../../../base/common/observableImpl/base.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { provideInlineCompletions } from './provideInlineCompletions.js';\nexport let InlineCompletionsSource = class InlineCompletionsSource extends Disposable {\n    constructor(textModel, versionId, _debounceValue, languageFeaturesService, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._debounceValue = _debounceValue;\n        this.languageFeaturesService = languageFeaturesService;\n        this.languageConfigurationService = languageConfigurationService;\n        this._updateOperation = this._register(new MutableDisposable());\n        this.inlineCompletions = disposableObservableValue('inlineCompletions', undefined);\n        this.suggestWidgetInlineCompletions = disposableObservableValue('suggestWidgetInlineCompletions', undefined);\n        this._register(this.textModel.onDidChangeContent(() => {\n            this._updateOperation.clear();\n        }));\n    }\n    fetch(position, context, activeInlineCompletion) {\n        var _a, _b;\n        const request = new UpdateRequest(position, context, this.textModel.getVersionId());\n        const target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions : this.inlineCompletions;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.satisfies(request)) {\n            return this._updateOperation.value.promise;\n        }\n        else if ((_b = target.get()) === null || _b === void 0 ? void 0 : _b.request.satisfies(request)) {\n            return Promise.resolve(true);\n        }\n        const updateOngoing = !!this._updateOperation.value;\n        this._updateOperation.clear();\n        const source = new CancellationTokenSource();\n        const promise = (() => __awaiter(this, void 0, void 0, function* () {\n            const shouldDebounce = updateOngoing || context.triggerKind === InlineCompletionTriggerKind.Automatic;\n            if (shouldDebounce) {\n                // This debounces the operation\n                yield wait(this._debounceValue.get(this.textModel));\n            }\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const startTime = new Date();\n            const updatedCompletions = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.textModel, context, source.token, this.languageConfigurationService);\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const endTime = new Date();\n            this._debounceValue.update(this.textModel, endTime.getTime() - startTime.getTime());\n            const completions = new UpToDateInlineCompletions(updatedCompletions, request, this.textModel, this.versionId);\n            if (activeInlineCompletion) {\n                const asInlineCompletion = activeInlineCompletion.toInlineCompletion(undefined);\n                if (activeInlineCompletion.canBeReused(this.textModel, position) && !updatedCompletions.has(asInlineCompletion)) {\n                    completions.prepend(activeInlineCompletion.inlineCompletion, asInlineCompletion.range, true);\n                }\n            }\n            this._updateOperation.clear();\n            transaction(tx => {\n                target.set(completions, tx);\n            });\n            return true;\n        }))();\n        const updateOperation = new UpdateOperation(request, source, promise);\n        this._updateOperation.value = updateOperation;\n        return promise;\n    }\n    clear(tx) {\n        this._updateOperation.clear();\n        this.inlineCompletions.set(undefined, tx);\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    clearSuggestWidgetInlineCompletions(tx) {\n        var _a;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.context.selectedSuggestionInfo) {\n            this._updateOperation.clear();\n        }\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    cancelUpdate() {\n        this._updateOperation.clear();\n    }\n};\nInlineCompletionsSource = __decorate([\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageConfigurationService)\n], InlineCompletionsSource);\nfunction wait(ms, cancellationToken) {\n    return new Promise(resolve => {\n        let d = undefined;\n        const handle = setTimeout(() => {\n            if (d) {\n                d.dispose();\n            }\n            resolve();\n        }, ms);\n        if (cancellationToken) {\n            d = cancellationToken.onCancellationRequested(() => {\n                clearTimeout(handle);\n                if (d) {\n                    d.dispose();\n                }\n                resolve();\n            });\n        }\n    });\n}\nclass UpdateRequest {\n    constructor(position, context, versionId) {\n        this.position = position;\n        this.context = context;\n        this.versionId = versionId;\n    }\n    satisfies(other) {\n        return this.position.equals(other.position)\n            && equals(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, (v1, v2) => v1.equals(v2))\n            && (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\n                || this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\n            && this.versionId === other.versionId;\n    }\n}\nfunction equals(v1, v2, equals) {\n    if (!v1 || !v2) {\n        return v1 === v2;\n    }\n    return equals(v1, v2);\n}\nclass UpdateOperation {\n    constructor(request, cancellationTokenSource, promise) {\n        this.request = request;\n        this.cancellationTokenSource = cancellationTokenSource;\n        this.promise = promise;\n    }\n    dispose() {\n        this.cancellationTokenSource.cancel();\n    }\n}\nexport class UpToDateInlineCompletions {\n    get inlineCompletions() { return this._inlineCompletions; }\n    constructor(inlineCompletionProviderResult, request, textModel, versionId) {\n        this.inlineCompletionProviderResult = inlineCompletionProviderResult;\n        this.request = request;\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._refCount = 1;\n        this._prependedInlineCompletionItems = [];\n        this._rangeVersionIdValue = 0;\n        this._rangeVersionId = derived('ranges', reader => {\n            this.versionId.read(reader);\n            let changed = false;\n            for (const i of this._inlineCompletions) {\n                changed = changed || i._updateRange(this.textModel);\n            }\n            if (changed) {\n                this._rangeVersionIdValue++;\n            }\n            return this._rangeVersionIdValue;\n        });\n        const ids = textModel.deltaDecorations([], inlineCompletionProviderResult.completions.map(i => ({\n            range: i.range,\n            options: {\n                description: 'inline-completion-tracking-range'\n            },\n        })));\n        this._inlineCompletions = inlineCompletionProviderResult.completions.map((i, index) => new InlineCompletionWithUpdatedRange(i, ids[index], this._rangeVersionId));\n    }\n    clone() {\n        this._refCount++;\n        return this;\n    }\n    dispose() {\n        this._refCount--;\n        if (this._refCount === 0) {\n            this.textModel.deltaDecorations(this._inlineCompletions.map(i => i.decorationId), []);\n            this.inlineCompletionProviderResult.dispose();\n            for (const i of this._prependedInlineCompletionItems) {\n                i.source.removeRef();\n            }\n        }\n    }\n    prepend(inlineCompletion, range, addRefToSource) {\n        if (addRefToSource) {\n            inlineCompletion.source.addRef();\n        }\n        const id = this.textModel.deltaDecorations([], [{\n                range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            }])[0];\n        this._inlineCompletions.unshift(new InlineCompletionWithUpdatedRange(inlineCompletion, id, this._rangeVersionId, range));\n        this._prependedInlineCompletionItems.push(inlineCompletion);\n    }\n}\nexport class InlineCompletionWithUpdatedRange {\n    get forwardStable() {\n        var _a;\n        return (_a = this.inlineCompletion.source.inlineCompletions.enableForwardStability) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(inlineCompletion, decorationId, rangeVersion, initialRange) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.rangeVersion = rangeVersion;\n        this.semanticId = JSON.stringify([\n            this.inlineCompletion.filterText,\n            this.inlineCompletion.insertText,\n            this.inlineCompletion.range.getStartPosition().toString()\n        ]);\n        this._isValid = true;\n        this._updatedRange = initialRange !== null && initialRange !== void 0 ? initialRange : inlineCompletion.range;\n    }\n    toInlineCompletion(reader) {\n        return this.inlineCompletion.withRange(this._getUpdatedRange(reader));\n    }\n    toSingleTextEdit(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.insertText);\n    }\n    isVisible(model, cursorPosition, reader) {\n        const minimizedReplacement = this._toFilterTextReplacement(reader).removeCommonPrefix(model);\n        if (!this._isValid\n            || !this.inlineCompletion.range.getStartPosition().equals(this._getUpdatedRange(reader).getStartPosition())\n            || cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber) {\n            return false;\n        }\n        const originalValue = model.getValueInRange(minimizedReplacement.range, 1 /* EndOfLinePreference.LF */).toLowerCase();\n        const filterText = minimizedReplacement.text.toLowerCase();\n        const cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n        let filterTextBefore = filterText.substring(0, cursorPosIndex);\n        let filterTextAfter = filterText.substring(cursorPosIndex);\n        let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n        let originalValueAfter = originalValue.substring(cursorPosIndex);\n        const originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n        if (minimizedReplacement.range.startColumn <= originalValueIndent) {\n            // Remove indentation\n            originalValueBefore = originalValueBefore.trimStart();\n            if (originalValueBefore.length === 0) {\n                originalValueAfter = originalValueAfter.trimStart();\n            }\n            filterTextBefore = filterTextBefore.trimStart();\n            if (filterTextBefore.length === 0) {\n                filterTextAfter = filterTextAfter.trimStart();\n            }\n        }\n        return filterTextBefore.startsWith(originalValueBefore)\n            && !!matchesSubString(originalValueAfter, filterTextAfter);\n    }\n    canBeReused(model, position) {\n        const result = this._isValid\n            && this._getUpdatedRange(undefined).containsPosition(position)\n            && this.isVisible(model, position, undefined)\n            && !this._isSmallerThanOriginal(undefined);\n        return result;\n    }\n    _toFilterTextReplacement(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.filterText);\n    }\n    _isSmallerThanOriginal(reader) {\n        return length(this._getUpdatedRange(reader)).isBefore(length(this.inlineCompletion.range));\n    }\n    _getUpdatedRange(reader) {\n        this.rangeVersion.read(reader); // This makes sure all the ranges are updated.\n        return this._updatedRange;\n    }\n    _updateRange(textModel) {\n        const range = textModel.getDecorationRange(this.decorationId);\n        if (!range) {\n            // A setValue call might flush all decorations.\n            this._isValid = false;\n            return true;\n        }\n        if (!this._updatedRange.equalsRange(range)) {\n            this._updatedRange = range;\n            return true;\n        }\n        return false;\n    }\n}\nfunction length(range) {\n    if (range.startLineNumber === range.endLineNumber) {\n        return new Position(1, 1 + range.endColumn - range.startColumn);\n    }\n    else {\n        return new Position(1 + range.endLineNumber - range.startLineNumber, range.endColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { mapFind } from '../../../../base/common/arrays.js';\nimport { BugIndicatingError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, keepAlive, observableSignal, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { subtransaction } from '../../../../base/common/observableImpl/base.js';\nimport { derivedHandleChanges } from '../../../../base/common/observableImpl/derived.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { GhostText } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { addPositions, lengthOfText } from './utils.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport var VersionIdChangeReason;\n(function (VersionIdChangeReason) {\n    VersionIdChangeReason[VersionIdChangeReason[\"Undo\"] = 0] = \"Undo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Redo\"] = 1] = \"Redo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"AcceptWord\"] = 2] = \"AcceptWord\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Other\"] = 3] = \"Other\";\n})(VersionIdChangeReason || (VersionIdChangeReason = {}));\nexport let InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    get isAcceptingPartially() { return this._isAcceptingPartially; }\n    get isNavigatingCurrentInlineCompletion() { return this._isNavigatingCurrentInlineCompletion; }\n    constructor(textModel, selectedSuggestItem, cursorPosition, textModelVersionId, _debounceValue, _suggestPreviewEnabled, _suggestPreviewMode, _inlineSuggestMode, _enabled, _instantiationService, _commandService, _languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.selectedSuggestItem = selectedSuggestItem;\n        this.cursorPosition = cursorPosition;\n        this.textModelVersionId = textModelVersionId;\n        this._debounceValue = _debounceValue;\n        this._suggestPreviewEnabled = _suggestPreviewEnabled;\n        this._suggestPreviewMode = _suggestPreviewMode;\n        this._inlineSuggestMode = _inlineSuggestMode;\n        this._enabled = _enabled;\n        this._instantiationService = _instantiationService;\n        this._commandService = _commandService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this.textModelVersionId, this._debounceValue));\n        this._isActive = observableValue('isActive', false);\n        this._forceUpdate = observableSignal('forceUpdate');\n        // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n        this._selectedInlineCompletionId = observableValue('selectedInlineCompletionId', undefined);\n        this._isAcceptingPartially = false;\n        this._isNavigatingCurrentInlineCompletion = false;\n        this._preserveCurrentCompletionReasons = new Set([\n            VersionIdChangeReason.Redo,\n            VersionIdChangeReason.Undo,\n            VersionIdChangeReason.AcceptWord,\n        ]);\n        this._fetchInlineCompletions = derivedHandleChanges('fetch inline completions', {\n            createEmptyChangeSummary: () => ({\n                preserveCurrentCompletion: false,\n                inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n            }),\n            handleChange: (ctx, changeSummary) => {\n                if (ctx.didChange(this.textModelVersionId) && this._preserveCurrentCompletionReasons.has(ctx.change)) {\n                    changeSummary.preserveCurrentCompletion = true;\n                }\n                else if (ctx.didChange(this._forceUpdate)) {\n                    changeSummary.inlineCompletionTriggerKind = ctx.change;\n                }\n                return true;\n            },\n        }, (reader, changeSummary) => {\n            this._forceUpdate.read(reader);\n            const shouldUpdate = (this._enabled.read(reader) && this.selectedSuggestItem.read(reader)) || this._isActive.read(reader);\n            if (!shouldUpdate) {\n                this._source.cancelUpdate();\n                return undefined;\n            }\n            this.textModelVersionId.read(reader); // Refetch on text change\n            const itemToPreserveCandidate = this.selectedInlineCompletion.get();\n            const itemToPreserve = changeSummary.preserveCurrentCompletion || (itemToPreserveCandidate === null || itemToPreserveCandidate === void 0 ? void 0 : itemToPreserveCandidate.forwardStable)\n                ? itemToPreserveCandidate : undefined;\n            const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestWidgetInlineCompletions && !suggestItem) {\n                const inlineCompletions = this._source.inlineCompletions.get();\n                transaction(tx => {\n                    /** @description Seed inline completions with (newer) suggest widget inline completions */\n                    if (inlineCompletions && suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\n                        this._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\n                    }\n                    this._source.clearSuggestWidgetInlineCompletions(tx);\n                });\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const context = {\n                triggerKind: changeSummary.inlineCompletionTriggerKind,\n                selectedSuggestionInfo: suggestItem === null || suggestItem === void 0 ? void 0 : suggestItem.toSelectedSuggestionInfo(),\n            };\n            return this._source.fetch(cursorPosition, context, itemToPreserve);\n        });\n        this._filteredInlineCompletionItems = derived('filteredInlineCompletionItems', (reader) => {\n            const c = this._source.inlineCompletions.read(reader);\n            if (!c) {\n                return [];\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const filteredCompletions = c.inlineCompletions.filter(c => c.isVisible(this.textModel, cursorPosition, reader));\n            return filteredCompletions;\n        });\n        this.selectedInlineCompletionIndex = derived('selectedCachedCompletionIndex', (reader) => {\n            const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this._selectedInlineCompletionId === undefined ? -1\n                : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n            if (idx === -1) {\n                // Reset the selection so that the selection does not jump back when it appears again\n                this._selectedInlineCompletionId.set(undefined, undefined);\n                return 0;\n            }\n            return idx;\n        });\n        this.selectedInlineCompletion = derived('selectedCachedCompletion', (reader) => {\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this.selectedInlineCompletionIndex.read(reader);\n            return filteredCompletions[idx];\n        });\n        this.lastTriggerKind = this._source.inlineCompletions.map(v => /** @description lastTriggerKind */ v === null || v === void 0 ? void 0 : v.request.context.triggerKind);\n        this.inlineCompletionsCount = derived('selectedInlineCompletionsCount', reader => {\n            if (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n                return this._filteredInlineCompletionItems.read(reader).length;\n            }\n            else {\n                return undefined;\n            }\n        });\n        this.state = derived('ghostTextAndCompletion', (reader) => {\n            var _a;\n            const model = this.textModel;\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestItem) {\n                const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n                const candidateInlineCompletions = suggestWidgetInlineCompletions\n                    ? suggestWidgetInlineCompletions.inlineCompletions\n                    : [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n                const suggestCompletion = suggestItem.toSingleTextEdit().removeCommonPrefix(model);\n                const augmentedCompletion = mapFind(candidateInlineCompletions, completion => {\n                    let r = completion.toSingleTextEdit(reader);\n                    r = r.removeCommonPrefix(model, Range.fromPositions(r.range.getStartPosition(), suggestItem.range.getEndPosition()));\n                    return r.augments(suggestCompletion) ? { edit: r, completion } : undefined;\n                });\n                const isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n                if (!isSuggestionPreviewEnabled && !augmentedCompletion) {\n                    return undefined;\n                }\n                const edit = (_a = augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.edit) !== null && _a !== void 0 ? _a : suggestCompletion;\n                const editPreviewLength = augmentedCompletion ? augmentedCompletion.edit.text.length - suggestCompletion.text.length : 0;\n                const mode = this._suggestPreviewMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const newGhostText = edit.computeGhostText(model, mode, cursor, editPreviewLength);\n                // Show an invisible ghost text to reserve space\n                const ghostText = newGhostText !== null && newGhostText !== void 0 ? newGhostText : new GhostText(edit.range.endLineNumber, []);\n                return { ghostText, completion: augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.completion, suggestItem };\n            }\n            else {\n                if (!this._isActive.read(reader)) {\n                    return undefined;\n                }\n                const item = this.selectedInlineCompletion.read(reader);\n                if (!item) {\n                    return undefined;\n                }\n                const replacement = item.toSingleTextEdit(reader);\n                const mode = this._inlineSuggestMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const ghostText = replacement.computeGhostText(model, mode, cursor);\n                return ghostText ? { ghostText, completion: item, suggestItem: undefined } : undefined;\n            }\n        });\n        this.ghostText = derived('ghostText', (reader) => {\n            const v = this.state.read(reader);\n            if (!v) {\n                return undefined;\n            }\n            return v.ghostText;\n        });\n        this._register(keepAlive(this._fetchInlineCompletions, true));\n        let lastItem = undefined;\n        this._register(autorun('call handleItemDidShow', reader => {\n            var _a, _b;\n            const item = this.state.read(reader);\n            const completion = item === null || item === void 0 ? void 0 : item.completion;\n            if ((completion === null || completion === void 0 ? void 0 : completion.semanticId) !== (lastItem === null || lastItem === void 0 ? void 0 : lastItem.semanticId)) {\n                lastItem = completion;\n                if (completion) {\n                    const i = completion.inlineCompletion;\n                    const src = i.source;\n                    (_b = (_a = src.provider).handleItemDidShow) === null || _b === void 0 ? void 0 : _b.call(_a, src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\n                }\n            }\n        }));\n    }\n    trigger(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._isActive.set(true, tx);\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    triggerExplicitly(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            subtransaction(tx, tx => {\n                this._isActive.set(true, tx);\n                this._forceUpdate.trigger(tx, InlineCompletionTriggerKind.Explicit);\n            });\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    stop(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(false, tx);\n            this._source.clear(tx);\n        });\n    }\n    _deltaSelectedInlineCompletionIndex(delta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.triggerExplicitly();\n            this._isNavigatingCurrentInlineCompletion = true;\n            try {\n                const completions = this._filteredInlineCompletionItems.get() || [];\n                if (completions.length > 0) {\n                    const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n                    this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n                }\n                else {\n                    this._selectedInlineCompletionId.set(undefined, undefined);\n                }\n            }\n            finally {\n                this._isNavigatingCurrentInlineCompletion = false;\n            }\n        });\n    }\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(1);\n        });\n    }\n    previous() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(-1);\n        });\n    }\n    accept(editor) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (editor.getModel() !== this.textModel) {\n                throw new BugIndicatingError();\n            }\n            const ghostText = this.ghostText.get();\n            const completion = (_a = this.selectedInlineCompletion.get()) === null || _a === void 0 ? void 0 : _a.toInlineCompletion(undefined);\n            if (!ghostText || !completion) {\n                return;\n            }\n            editor.pushUndoStop();\n            if (completion.snippetInfo) {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, ''),\n                    ...completion.additionalTextEdits\n                ]);\n                editor.setPosition(completion.snippetInfo.range.getStartPosition());\n                (_b = SnippetController2.get(editor)) === null || _b === void 0 ? void 0 : _b.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n            }\n            else {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, completion.insertText),\n                    ...completion.additionalTextEdits\n                ]);\n            }\n            if (completion.command) {\n                yield this._commandService\n                    .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                    .then(undefined, onUnexpectedExternalError);\n            }\n            transaction(tx => {\n                this._source.clear(tx);\n                // Potentially, isActive will get set back to true by the typing or accept inline suggest event\n                // if automatic inline suggestions are enabled.\n                this._isActive.set(false, tx);\n            });\n        });\n    }\n    acceptNextWord(editor) {\n        this._acceptNext(editor, (pos, text) => {\n            const langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n            const config = this._languageConfigurationService.getLanguageConfiguration(langId);\n            const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n            const m1 = text.match(wordRegExp);\n            let acceptUntilIndexExclusive = 0;\n            if (m1 && m1.index !== undefined) {\n                if (m1.index === 0) {\n                    acceptUntilIndexExclusive = m1[0].length;\n                }\n                else {\n                    acceptUntilIndexExclusive = m1.index;\n                }\n            }\n            else {\n                acceptUntilIndexExclusive = text.length;\n            }\n            const wsRegExp = /\\s+/g;\n            const m2 = wsRegExp.exec(text);\n            if (m2 && m2.index !== undefined) {\n                if (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n                    acceptUntilIndexExclusive = m2.index + m2[0].length;\n                }\n            }\n            return acceptUntilIndexExclusive;\n        });\n    }\n    acceptNextLine(editor) {\n        this._acceptNext(editor, (pos, text) => {\n            const m = text.match(/\\n/);\n            if (m && m.index !== undefined) {\n                return m.index + 1;\n            }\n            return text.length;\n        });\n    }\n    _acceptNext(editor, getAcceptUntilIndex) {\n        var _a;\n        if (editor.getModel() !== this.textModel) {\n            throw new BugIndicatingError();\n        }\n        const ghostText = this.ghostText.get();\n        const completion = (_a = this.selectedInlineCompletion.get()) === null || _a === void 0 ? void 0 : _a.toInlineCompletion(undefined);\n        if (!ghostText || !completion) {\n            return;\n        }\n        if (completion.snippetInfo || completion.filterText !== completion.insertText) {\n            // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n            this.accept(editor);\n            return;\n        }\n        if (ghostText.parts.length === 0) {\n            return;\n        }\n        const firstPart = ghostText.parts[0];\n        const position = new Position(ghostText.lineNumber, firstPart.column);\n        const line = firstPart.lines.join('\\n');\n        const acceptUntilIndexExclusive = getAcceptUntilIndex(position, line);\n        if (acceptUntilIndexExclusive === line.length && ghostText.parts.length === 1) {\n            this.accept(editor);\n            return;\n        }\n        const partialText = line.substring(0, acceptUntilIndexExclusive);\n        this._isAcceptingPartially = true;\n        try {\n            editor.pushUndoStop();\n            editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replace(Range.fromPositions(position), partialText),\n            ]);\n            const length = lengthOfText(partialText);\n            editor.setPosition(addPositions(position, length));\n        }\n        finally {\n            this._isAcceptingPartially = false;\n        }\n        if (completion.source.provider.handlePartialAccept) {\n            const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), addPositions(position, lengthOfText(partialText)));\n            // This assumes that the inline completion and the model use the same EOL style.\n            const text = editor.getModel().getValueInRange(acceptedRange, 1 /* EndOfLinePreference.LF */);\n            completion.source.provider.handlePartialAccept(completion.source.inlineCompletions, completion.sourceInlineCompletion, text.length);\n        }\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(9, IInstantiationService),\n    __param(10, ICommandService),\n    __param(11, ILanguageConfigurationService)\n], InlineCompletionsModel);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nexport class SuggestWidgetAdaptor extends Disposable {\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    constructor(editor, suggestControllerPreselector, checkModelVersion) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.checkModelVersion = checkModelVersion;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this._selectedItem = observableValue('suggestWidgetInlineCompletionProvider.selectedItem', undefined);\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    var _a;\n                    transaction(tx => this.checkModelVersion(tx));\n                    const textModel = this.editor.getModel();\n                    if (!textModel) {\n                        // Should not happen\n                        return -1;\n                    }\n                    const itemToPreselect = (_a = this.suggestControllerPreselector()) === null || _a === void 0 ? void 0 : _a.removeCommonPrefix(textModel);\n                    if (!itemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n                        const suggestItemTextEdit = suggestItemInfo.toSingleTextEdit().removeCommonPrefix(textModel);\n                        const valid = itemToPreselect.augments(suggestItemTextEdit);\n                        return { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid && item.prefixLength > 0);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._isActive = newActive;\n            this._currentSuggestItemInfo = newInlineCompletion;\n            transaction(tx => {\n                this.checkModelVersion(tx);\n                this._selectedItem.set(this._isActive ? this._currentSuggestItemInfo : undefined, tx);\n            });\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController || !this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        const position = this.editor.getPosition();\n        const model = this.editor.getModel();\n        if (!focusedItem || !position || !model) {\n            return undefined;\n        }\n        return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n}\nexport class SuggestItemInfo {\n    static fromSuggestion(suggestController, model, position, item, toggleMode) {\n        let { insertText } = item.completion;\n        let isSnippetText = false;\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n            const snippet = new SnippetParser().parse(insertText);\n            if (snippet.children.length < 100) {\n                // Adjust whitespace is expensive.\n                SnippetSession.adjustWhitespace(model, position, true, snippet);\n            }\n            insertText = snippet.toString();\n            isSnippetText = true;\n        }\n        const info = suggestController.getOverwriteInfo(item, toggleMode);\n        return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n    }\n    constructor(range, insertText, completionItemKind, isSnippetText) {\n        this.range = range;\n        this.insertText = insertText;\n        this.completionItemKind = completionItemKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return this.range.equalsRange(other.range)\n            && this.insertText === other.insertText\n            && this.completionItemKind === other.completionItemKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n    toSelectedSuggestionInfo() {\n        return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.equals(b);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport { disposableObservableValue, transaction } from '../../../../base/common/observableImpl/base.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport let InlineCompletionsController = class InlineCompletionsController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController.ID);\n    }\n    constructor(editor, instantiationService, contextKeyService, configurationService, commandService, debounceService, languageFeaturesService, audioCueService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.configurationService = configurationService;\n        this.commandService = commandService;\n        this.debounceService = debounceService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.audioCueService = audioCueService;\n        this.model = disposableObservableValue('inlineCompletionModel', undefined);\n        this.textModelVersionId = observableValue('textModelVersionId', -1);\n        this.cursorPosition = observableValue('cursorPosition', new Position(1, 1));\n        this.suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => { var _a, _b; return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined); }, (tx) => this.updateObservables(tx, VersionIdChangeReason.Other)));\n        this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(60 /* EditorOption.inlineSuggest */).enabled);\n        this.ghostTextWidget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, {\n            ghostText: this.model.map((v, reader) => v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel),\n        }));\n        this._debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(new InlineCompletionContextKeys(this.contextKeyService, this.model));\n        this._register(Event.runAndSubscribe(editor.onDidChangeModel, () => transaction(tx => {\n            /** @description onDidChangeModel */\n            this.model.set(undefined, tx);\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            const textModel = editor.getModel();\n            if (textModel) {\n                const model = instantiationService.createInstance(InlineCompletionsModel, textModel, this.suggestWidgetAdaptor.selectedItem, this.cursorPosition, this.textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(114 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(114 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(60 /* EditorOption.inlineSuggest */).mode), this._enabled);\n                this.model.set(model, tx);\n            }\n        })));\n        const getReason = (e) => {\n            var _a;\n            if (e.isUndoing) {\n                return VersionIdChangeReason.Undo;\n            }\n            if (e.isRedoing) {\n                return VersionIdChangeReason.Redo;\n            }\n            if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n                return VersionIdChangeReason.AcceptWord;\n            }\n            return VersionIdChangeReason.Other;\n        };\n        this._register(editor.onDidChangeModelContent((e) => transaction(tx => \n        /** @description onDidChangeModelContent */\n        this.updateObservables(tx, getReason(e)))));\n        this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n            var _a;\n            /** @description onDidChangeCursorPosition */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            }\n        })));\n        this._register(editor.onDidType(() => transaction(tx => {\n            var _a;\n            /** @description onDidType */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (this._enabled.get()) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n            }\n        })));\n        this._register(this.commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                transaction(tx => {\n                    var _a;\n                    /** @description onDidExecuteCommand */\n                    (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n                });\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this.configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\n                editor.getOption(60 /* EditorOption.inlineSuggest */).keepOnBlur) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                var _a;\n                /** @description onDidBlurEditorWidget */\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        }));\n        this._register(autorun('forceRenderingAbove', reader => {\n            var _a;\n            const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n            if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n                if (state.ghostText.lineCount >= 2) {\n                    this.suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this.suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        let lastInlineCompletionId = undefined;\n        this._register(autorun('play audio cue & read suggestion', reader => {\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            if (!model || !state || !state.completion) {\n                lastInlineCompletionId = undefined;\n                return;\n            }\n            if (state.completion.semanticId !== lastInlineCompletionId) {\n                lastInlineCompletionId = state.completion.semanticId;\n                if (model.isNavigatingCurrentInlineCompletion) {\n                    return;\n                }\n                this.audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n                    if (this.editor.getOption(6 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                        const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n                        alert(state.ghostText.renderForScreenReader(lineText));\n                    }\n                });\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this.instantiationService));\n    }\n    /**\n     * Copies over the relevant state from the text model to observables.\n     * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n     * regardless of who calls into us.\n     */\n    updateObservables(tx, changeReason) {\n        var _a, _b;\n        const newModel = this.editor.getModel();\n        this.textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n        this.cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\n    }\n    shouldShowHoverAt(range) {\n        var _a;\n        const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this.ghostTextWidget.ownsViewZone(viewZoneId);\n    }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAudioCueService)\n], InlineCompletionsController);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { transaction } from '../../../../base/common/observable.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 94 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.next();\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = showNextInlineSuggestionActionId;\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 92 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.previous();\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = showPreviousInlineSuggestionActionId;\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.triggerExplicitly();\n        });\n    }\n}\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextWord',\n            label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n            alias: 'Accept Next Word Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptWord', 'Accept Word'),\n                    group: 'primary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextWord(controller.editor);\n        });\n    }\n}\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextLine',\n            label: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n            alias: 'Accept Next Line Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptLine', 'Accept Line'),\n                    group: 'secondary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextLine(controller.editor);\n        });\n    }\n}\nexport class AcceptInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: inlineSuggestCommitId,\n            label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n            alias: 'Accept Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('accept', \"Accept\"),\n                    group: 'primary',\n                    order: 1,\n                }],\n            kbOpts: {\n                primary: 2 /* KeyCode.Tab */,\n                weight: 200,\n                kbExpr: ContextKeyExpr.and(InlineCompletionContextKeys.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize),\n            }\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            if (controller) {\n                (_a = controller.model.get()) === null || _a === void 0 ? void 0 : _a.accept(controller.editor);\n                controller.editor.focus();\n            }\n        });\n    }\n}\nexport class HideInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: HideInlineCompletion.ID,\n            label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n            alias: 'Hide Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            kbOpts: {\n                weight: 100,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            transaction(tx => {\n                var _a;\n                (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        });\n    }\n}\nHideInlineCompletion.ID = 'editor.action.inlineSuggest.hide';\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n    constructor() {\n        super({\n            id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n            title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n            f1: false,\n            precondition: undefined,\n            menu: [{\n                    id: MenuId.InlineSuggestionToolbar,\n                    group: 'secondary',\n                    order: 10,\n                }],\n            toggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const configService = accessor.get(IConfigurationService);\n            const currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\n            const newValue = currentValue === 'always' ? 'onHover' : 'always';\n            configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n        });\n    }\n}\nToggleAlwaysShowInlineSuggestionToolbar.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable } from '../../../../base/common/observable.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nexport let InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _languageService, _openerService, accessibilityService, _instantiationService, _telemetryService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this.hoverOrdinal = 4;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = InlineCompletionsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel().validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (this._editor.getOption(60 /* EditorOption.inlineSuggest */).showToolbar === 'always') {\n            return [];\n        }\n        const controller = InlineCompletionsController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        this._telemetryService.publicLog2('inlineCompletionHover.shown');\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        const model = part.controller.model.get();\n        const w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false, constObservable(null), model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; }));\n        context.fragment.appendChild(w.getDomNode());\n        model.triggerExplicitly();\n        disposableStore.add(w);\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        disposableStore.add(autorun('update hover', (reader) => {\n            var _a;\n            const ghostText = (_a = part.controller.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (ghostText) {\n                const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n                render(ghostText.renderForScreenReader(lineText));\n            }\n            else {\n                dom.reset(hoverContentsElement);\n            }\n        }));\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IAccessibilityService),\n    __param(4, IInstantiationService),\n    __param(5, ITelemetryService)\n], InlineCompletionsHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { TriggerInlineSuggestionAction, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, AcceptNextWordOfInlineCompletion, AcceptInlineCompletion, HideInlineCompletion, ToggleAlwaysShowInlineSuggestionToolbar, AcceptNextLineOfInlineCompletion } from './commands.js';\nimport { InlineCompletionsHoverParticipant } from './hoverParticipant.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nregisterEditorContribution(InlineCompletionsController.ID, InlineCompletionsController, 3 /* EditorContributionInstantiation.Eventually */);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\nregisterEditorAction(AcceptNextLineOfInlineCompletion);\nregisterEditorAction(AcceptInlineCompletion);\nregisterEditorAction(HideInlineCompletion);\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { h } from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent } from '../../../../base/common/observable.js';\nimport { autorunWithStore2 } from '../../../../base/common/observableImpl/autorun.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineCompletionsHintsWidget.css';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { showPreviousInlineSuggestionActionId, showNextInlineSuggestionActionId } from './commandIds.js';\nimport { localize } from '../../../../nls.js';\nimport { createAndFillInActionBarActions, MenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nexport let InlineCompletionsHintsWidget = class InlineCompletionsHintsWidget extends Disposable {\n    constructor(editor, model, instantiationService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.alwaysShowToolbar = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(60 /* EditorOption.inlineSuggest */).showToolbar === 'always');\n        this.sessionPosition = undefined;\n        this.position = derived('position', reader => {\n            var _a, _b, _c;\n            const ghostText = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n                this.sessionPosition = undefined;\n                return null;\n            }\n            const firstColumn = ghostText.parts[0].column;\n            if (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n                this.sessionPosition = undefined;\n            }\n            const position = new Position(ghostText.lineNumber, Math.min(firstColumn, (_c = (_b = this.sessionPosition) === null || _b === void 0 ? void 0 : _b.column) !== null && _c !== void 0 ? _c : Number.MAX_SAFE_INTEGER));\n            this.sessionPosition = position;\n            return position;\n        });\n        this._register(autorunWithStore2('setup content widget', (reader, store) => {\n            const model = this.model.read(reader);\n            if (!model || !this.alwaysShowToolbar.read(reader)) {\n                return;\n            }\n            const contentWidget = store.add(this.instantiationService.createInstance(InlineSuggestionHintsContentWidget, this.editor, true, this.position, model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; })));\n            editor.addContentWidget(contentWidget);\n            store.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n            store.add(autorun('request explicit', reader => {\n                const position = this.position.read(reader);\n                if (!position) {\n                    return;\n                }\n                if (model.lastTriggerKind.read(reader) !== InlineCompletionTriggerKind.Explicit) {\n                    model.triggerExplicitly();\n                }\n            }));\n        }));\n    }\n};\nInlineCompletionsHintsWidget = __decorate([\n    __param(2, IInstantiationService)\n], InlineCompletionsHintsWidget);\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nexport let InlineSuggestionHintsContentWidget = class InlineSuggestionHintsContentWidget extends Disposable {\n    static get dropDownVisible() { return this._dropDownVisible; }\n    createCommandAction(commandId, label, iconClassName) {\n        const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n        const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n        let tooltip = label;\n        if (kb) {\n            tooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n        }\n        action.tooltip = tooltip;\n        return action;\n    }\n    constructor(editor, withBorder, _position, _currentSuggestionIdx, _suggestionCount, _extraCommands, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n        super();\n        this.editor = editor;\n        this.withBorder = withBorder;\n        this._position = _position;\n        this._currentSuggestionIdx = _currentSuggestionIdx;\n        this._suggestionCount = _suggestionCount;\n        this._extraCommands = _extraCommands;\n        this._commandService = _commandService;\n        this.keybindingService = keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget.id++}`;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? '.withBorder' : '' }, [\n            h('div', { style: { display: 'flex' } }, [\n                h('div@actionBar', { className: 'custom-actions' }),\n                h('div@toolBar'),\n            ])\n        ]);\n        this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n        this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n        this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n            this.availableSuggestionCountAction.label = '';\n        }, 100));\n        this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n            this.previousAction.enabled = this.nextAction.enabled = false;\n        }, 100));\n        this.lastCommands = [];\n        const actionBar = this._register(new ActionBar(this.nodes.actionBar));\n        actionBar.push(this.previousAction, { icon: true, label: false });\n        actionBar.push(this.availableSuggestionCountAction);\n        actionBar.push(this.nextAction, { icon: true, label: false });\n        this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n            menuOptions: { renderShortTitle: true },\n            toolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n            actionViewItemProvider: (action, options) => {\n                return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\n            },\n            telemetrySource: 'InlineSuggestionToolbar',\n        }));\n        this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n            InlineSuggestionHintsContentWidget._dropDownVisible = e;\n        }));\n        this._register(autorun('update position', (reader) => {\n            this._position.read(reader);\n            this.editor.layoutContentWidget(this);\n        }));\n        this._register(autorun('counts', (reader) => {\n            const suggestionCount = this._suggestionCount.read(reader);\n            const currentSuggestionIdx = this._currentSuggestionIdx.read(reader);\n            if (suggestionCount !== undefined) {\n                this.clearAvailableSuggestionCountLabelDebounced.cancel();\n                this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n            }\n            else {\n                this.clearAvailableSuggestionCountLabelDebounced.schedule();\n            }\n            if (suggestionCount !== undefined && suggestionCount > 1) {\n                this.disableButtonsDebounced.cancel();\n                this.previousAction.enabled = this.nextAction.enabled = true;\n            }\n            else {\n                this.disableButtonsDebounced.schedule();\n            }\n        }));\n        this._register(autorun('extra commands', (reader) => {\n            const extraCommands = this._extraCommands.read(reader);\n            if (equals(this.lastCommands, extraCommands)) {\n                // nothing to update\n                return;\n            }\n            this.lastCommands = extraCommands;\n            const extraActions = extraCommands.map(c => ({\n                class: undefined,\n                id: c.id,\n                enabled: true,\n                tooltip: c.tooltip || '',\n                label: c.title,\n                run: (event) => {\n                    return this._commandService.executeCommand(c.id);\n                },\n            }));\n            for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n                for (const action of group) {\n                    if (action instanceof MenuItemAction) {\n                        extraActions.push(action);\n                    }\n                }\n            }\n            if (extraActions.length > 0) {\n                extraActions.unshift(new Separator());\n            }\n            this.toolBar.setAdditionalSecondaryActions(extraActions);\n        }));\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this.nodes.root;\n    }\n    getPosition() {\n        return {\n            position: this._position.get(),\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n            positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */,\n        };\n    }\n};\nInlineSuggestionHintsContentWidget._dropDownVisible = false;\nInlineSuggestionHintsContentWidget.id = 0;\nInlineSuggestionHintsContentWidget = __decorate([\n    __param(6, ICommandService),\n    __param(7, IInstantiationService),\n    __param(8, IKeybindingService),\n    __param(9, IContextKeyService),\n    __param(10, IMenuService)\n], InlineSuggestionHintsContentWidget);\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const div = h('div.keybinding').root;\n            const k = new KeybindingLabel(div, OS, Object.assign({ disableTitle: true }, unthemedKeybindingLabelOptions));\n            k.set(kb);\n            this.label.textContent = this._action.label;\n            this.label.appendChild(div);\n            this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n        }\n    }\n}\nexport let CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService) {\n        super(container, Object.assign({ resetMenu: menuId }, options2), menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n        this.menuId = menuId;\n        this.options2 = options2;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n        this.additionalActions = [];\n        this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n        this.updateToolbar();\n    }\n    updateToolbar() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const primary = [];\n        const secondary = [];\n        createAndFillInActionBarActions(this.menu, (_a = this.options2) === null || _a === void 0 ? void 0 : _a.menuOptions, { primary, secondary }, (_c = (_b = this.options2) === null || _b === void 0 ? void 0 : _b.toolbarOptions) === null || _c === void 0 ? void 0 : _c.primaryGroup, (_e = (_d = this.options2) === null || _d === void 0 ? void 0 : _d.toolbarOptions) === null || _e === void 0 ? void 0 : _e.shouldInlineSubmenu, (_g = (_f = this.options2) === null || _f === void 0 ? void 0 : _f.toolbarOptions) === null || _g === void 0 ? void 0 : _g.useSeparatorsInPrimaryActions);\n        secondary.push(...this.additionalActions);\n        this.setActions(primary, secondary);\n    }\n    setAdditionalSecondaryActions(actions) {\n        if (equals(this.additionalActions, actions, (a, b) => a === b)) {\n            // don't update if the actions are the same\n            return;\n        }\n        this.additionalActions = actions;\n        this.updateToolbar();\n    }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ITelemetryService)\n], CustomizedMenuWorkbenchToolBar);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { disposableTimeout } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { noBreakWhitespace } from '../../../../base/common/strings.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineProgressWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nconst inlineProgressDecoration = ModelDecorationOptions.register({\n    description: 'inline-progress-widget',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    showIfCollapsed: true,\n    after: {\n        content: noBreakWhitespace,\n        inlineClassName: 'inline-editor-progress-decoration',\n        inlineClassNameAffectsLetterSpacing: true,\n    }\n});\nclass InlineProgressWidget extends Disposable {\n    constructor(typeId, editor, range, title, delegate) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.range = range;\n        this.delegate = delegate;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = true;\n        this.create(title);\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n    }\n    create(title) {\n        this.domNode = dom.$('.inline-progress-widget');\n        this.domNode.role = 'button';\n        this.domNode.title = title;\n        const iconElement = dom.$('span.icon');\n        this.domNode.append(iconElement);\n        iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.loading), 'codicon-modifier-spin');\n        const updateSize = () => {\n            const lineHeight = this.editor.getOption(64 /* EditorOption.lineHeight */);\n            this.domNode.style.height = `${lineHeight}px`;\n            this.domNode.style.width = `${Math.ceil(0.8 * lineHeight)}px`;\n        };\n        updateSize();\n        this._register(this.editor.onDidChangeConfiguration(c => {\n            if (c.hasChanged(50 /* EditorOption.fontSize */) || c.hasChanged(64 /* EditorOption.lineHeight */)) {\n                updateSize();\n            }\n        }));\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, e => {\n            this.delegate.cancel();\n        }));\n    }\n    getId() {\n        return InlineProgressWidget.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: { lineNumber: this.range.startLineNumber, column: this.range.startColumn },\n            preference: [0 /* ContentWidgetPositionPreference.EXACT */]\n        };\n    }\n    dispose() {\n        super.dispose();\n        this.editor.removeContentWidget(this);\n    }\n}\nInlineProgressWidget.baseId = 'editor.widget.inlineProgressWidget';\nexport let InlineProgressManager = class InlineProgressManager extends Disposable {\n    constructor(id, _editor, _instantiationService) {\n        super();\n        this.id = id;\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        /** Delay before showing the progress widget */\n        this._showDelay = 500; // ms\n        this._showPromise = this._register(new MutableDisposable());\n        this._currentWidget = new MutableDisposable();\n        this._operationIdPool = 0;\n        this._currentDecorations = _editor.createDecorationsCollection();\n    }\n    showWhile(position, title, promise) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationId = this._operationIdPool++;\n            this._currentOperation = operationId;\n            this.clear();\n            this._showPromise.value = disposableTimeout(() => {\n                const range = Range.fromPositions(position);\n                const decorationIds = this._currentDecorations.set([{\n                        range: range,\n                        options: inlineProgressDecoration,\n                    }]);\n                if (decorationIds.length > 0) {\n                    this._currentWidget.value = this._instantiationService.createInstance(InlineProgressWidget, this.id, this._editor, range, title, promise);\n                }\n            }, this._showDelay);\n            try {\n                return yield promise;\n            }\n            finally {\n                if (this._currentOperation === operationId) {\n                    this.clear();\n                    this._currentOperation = undefined;\n                }\n            }\n        });\n    }\n    clear() {\n        this._showPromise.clear();\n        this._currentDecorations.clear();\n        this._currentWidget.clear();\n    }\n};\nInlineProgressManager = __decorate([\n    __param(2, IInstantiationService)\n], InlineProgressManager);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* KeybindingWeight.EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nimport { getEnterAction } from '../../../common/languages/enterAction.js';\nexport let MoveLinesCommand = class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        const modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        const virtualModel = {\n            tokenization: {\n                getLineTokens: (lineNumber) => {\n                    return model.tokenization.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            const lineNumber = s.startLineNumber;\n            const otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    const movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        const newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const indentOfMovingLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfMovingLine !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    const ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const newIndentatOfMovingBlock = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter, this._languageConfigurationService);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    const ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        const indentOfFirstLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            const oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            const movingLineText = model.getLineContent(line);\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\n                const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                const indentMetadataOfMovelingLine = getIndentMetadata(model, line, this._languageConfigurationService);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* IndentConsts.DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                const newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            const maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            const enter = getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                const lineContent = model.getLineContent(validPrecedingLine);\n                const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimLeft(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.tokenization.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        const languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        const languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (this._languageConfigurationService.getLanguageConfiguration(languageAtSelectionStart).indentRulesSupport === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            const lineContent = model.getLineContent(i);\n            const originalIndent = strings.getLeadingWhitespace(lineContent);\n            const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            const newSpacesCnt = originalSpacesCnt + offset;\n            const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n};\nMoveLinesCommand = __decorate([\n    __param(3, ILanguageConfigurationService)\n], MoveLinesCommand);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const commands = [];\n        const selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(10 /* EditorOption.autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let linesDeleted = 0;\n        for (const selection of editor.getSelections()) {\n            const uniqueLines = new Set();\n            const lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                const line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            const selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            const adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            const finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        const selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        const command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 41 /* KeyCode.KeyK */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ops = this._getLinesToRemove(editor);\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        const edits = [];\n        const cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        const operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        const mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 94 /* KeyCode.BracketRight */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 92 /* KeyCode.BracketLeft */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        const rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        const effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            const range = rangesToDelete[i];\n            const nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        const endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        const edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                const newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    const deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    const deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 41 /* KeyCode.KeyK */, secondary: [2048 /* KeyMod.CtrlCmd */ | 20 /* KeyCode.Delete */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            const range = rangesToDelete[i];\n            const endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        const rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 40 /* KeyCode.KeyJ */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        const reducedSelections = [];\n        const lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            const selection = reducedSelections[i];\n            const startLineNumber = selection.startLineNumber;\n            const startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            const selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                const position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                const lineText = model.getLineContent(i);\n                const firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    const lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            const deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n            alias: 'Transpose characters around the cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const cursor = selection.getStartPosition();\n            const maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(126 /* EditorOption.wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nexport class TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport class SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nexport class CamelCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToCamelcase',\n            label: nls.localize('editor.transformToCamelcase', \"Transform to Camel Case\"),\n            alias: 'Transform to Camel Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const wordBoundary = CamelCaseAction.wordBoundary.get();\n        if (!wordBoundary) {\n            // cannot support this\n            return text;\n        }\n        const words = text.split(wordBoundary);\n        const firstWord = words.shift();\n        return firstWord + words.map((word) => word.substring(0, 1).toLocaleUpperCase() + word.substring(1))\n            .join('');\n    }\n}\nCamelCaseAction.wordBoundary = new BackwardsCompatibleRegExp('[_\\\\s-]', 'gm');\nexport class KebabCaseAction extends AbstractCaseAction {\n    static isSupported() {\n        const areAllRegexpsSupported = [\n            this.caseBoundary,\n            this.singleLetters,\n            this.underscoreBoundary,\n        ].every((regexp) => regexp.isSupported());\n        return areAllRegexpsSupported;\n    }\n    constructor() {\n        super({\n            id: 'editor.action.transformToKebabcase',\n            label: nls.localize('editor.transformToKebabcase', 'Transform to Kebab Case'),\n            alias: 'Transform to Kebab Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, _) {\n        const caseBoundary = KebabCaseAction.caseBoundary.get();\n        const singleLetters = KebabCaseAction.singleLetters.get();\n        const underscoreBoundary = KebabCaseAction.underscoreBoundary.get();\n        if (!caseBoundary || !singleLetters || !underscoreBoundary) {\n            // one or more regexps aren't supported\n            return text;\n        }\n        return text\n            .replace(underscoreBoundary, '$1-$3')\n            .replace(caseBoundary, '$1-$2')\n            .replace(singleLetters, '$1-$2')\n            .toLocaleLowerCase();\n    }\n}\nKebabCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nKebabCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu}\\\\p{Ll})', 'gmu');\nKebabCaseAction.underscoreBoundary = new BackwardsCompatibleRegExp('(\\\\S)(_)(\\\\S)', 'gm');\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (CamelCaseAction.wordBoundary.isSupported()) {\n    registerEditorAction(CamelCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\nif (KebabCaseAction.isSupported()) {\n    registerEditorAction(KebabCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport './linkedEditing.css';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nexport let LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution.ID);\n    }\n    constructor(editor, contextKeyService, languageFeaturesService, languageConfigurationService, languageFeatureDebounceService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._syncRangesToken = 0;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._providers = languageFeaturesService.linkedEditingRangeProvider;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._debounceInformation = languageFeatureDebounceService.for(this._providers, 'Linked Editing', { max: 200 });\n        this._currentDecorations = this._editor.createDecorationsCollection();\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(67 /* EditorOption.linkedEditing */) || e.hasChanged(89 /* EditorOption.renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(this._providers.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(67 /* EditorOption.linkedEditing */) || this._editor.getOption(89 /* EditorOption.renameOnType */)) && this._providers.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceInformation.get(model));\n        const triggerRangeUpdate = () => {\n            var _a;\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), (_a = this._debounceDuration) !== null && _a !== void 0 ? _a : this._debounceInformation.get(model));\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (token) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(token));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = this._currentDecorations.getRange(0);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._syncRangesToken);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.dispose();\n                rangeSyncScheduler.dispose();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(token) {\n        // delayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || token !== this._syncRangesToken || this._currentDecorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = this._currentDecorations.getRange(0);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        const edits = [];\n        for (let i = 1, len = this._currentDecorations.length; i < len; i++) {\n            const mirrorRange = this._currentDecorations.getRange(i);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations.clear();\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations.length > 0) {\n                    const range = this._currentDecorations.getRange(0);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            // Clear existing decorations while we compute new ones\n            this.clearRanges();\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const sw = new StopWatch(false);\n                    const response = yield getLinkedEditingRanges(this._providers, model, position, token);\n                    this._debounceInformation.update(model, sw.elapsed());\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations.set(decorations);\n                    this._syncRangesToken++; // cancel any pending syncRanges call\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkedEditingContribution);\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(providers, model, position, token) {\n    const orderedByScore = providers.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hcDark: Color.fromHex('#f00').transparent(0.3), hcLight: Color.white }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (_accessor, model, position) => {\n    const { linkedEditingRangeProvider } = _accessor.get(ILanguageFeaturesService);\n    return getLinkedEditingRanges(linkedEditingRangeProvider, model, position, CancellationToken.None);\n});\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        const result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(providers, model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = providers.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const { linkProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(linkProvider, model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nexport let LinkDetector = class LinkDetector extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkDetector.ID);\n    }\n    constructor(editor, openerService, notificationService, languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.providers = this.languageFeaturesService.linkProvider;\n        this.debounceInformation = languageFeatureDebounceService.for(this.providers, 'Links', { min: 1000, max: 4000 });\n        this.computeLinks = this._register(new RunOnceScheduler(() => this.computeLinksNow(), 1000));\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        const clickLinkGesture = this._register(new ClickLinkGesture(editor));\n        this._register(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this._register(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this._register(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(68 /* EditorOption.links */)) {\n                return;\n            }\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (!this.editor.hasModel()) {\n                return;\n            }\n            this.computeLinks.schedule(this.debounceInformation.get(this.editor.getModel()));\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(this.providers.onDidChange((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this.computeLinks.schedule(0);\n    }\n    computeLinksNow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.editor.getOption(68 /* EditorOption.links */)) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (!this.providers.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = createCancelablePromise(token => getLinks(this.providers, model, token));\n            try {\n                const sw = new StopWatch(false);\n                this.activeLinksList = yield this.computePromise;\n                this.debounceInformation.update(model, sw.elapsed());\n                if (model.isDisposed()) {\n                    return;\n                }\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(75 /* EditorOption.multiCursorModifier */) === 'altKey');\n        const oldDecorations = [];\n        const keys = Object.keys(this.currentOccurrences);\n        for (const decorationId of keys) {\n            const occurence = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurence.decorationId);\n        }\n        const newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurence = new LinkOccurrence(links[i], decorations[i]);\n                this.currentOccurrences[occurence.decorationId] = occurence;\n            }\n        });\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(75 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(75 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true, fromWorkspace: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* MouseTargetType.CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.computeLinks.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkDetector);\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                nativeLabel = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n            }\n        }\n        const hoverMessage = new MarkdownString('', true)\n            .appendLink(link.url.toString(true).replace(/ /g, '%20'), label, nativeLabel)\n            .appendMarkdown(` (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        for (const sel of selections) {\n            const link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(OpenLinkAction);\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","$","dom","ContentHoverController","Disposable","constructor","_editor","_instantiationService","_keybindingService","super","this","_widget","_register","createInstance","ContentHoverWidget","_currentResult","_participants","participant","HoverParticipantRegistry","getAll","push","sort","p1","p2","hoverOrdinal","_computer","ContentHoverComputer","_hoverOperation","HoverOperation","onResult","result","anchor","messages","hasLoadingMessage","_addLoadingMessage","value","_withResult","HoverResult","isComplete","getDomNode","e","equals","hide","TokenizationRegistry","onDidChange","position","clear","_setCurrentResult","maybeShowAt","mouseEvent","anchorCandidates","suggestHoverAnchor","type","HoverRangeAnchor","range","event","posx","posy","epsilon","getOption","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","_startShowingOrUpdateHover","a","b","priority","startShowingAtRange","mode","source","focus","undefined","_startHoverOperationIfNecessary","sticky","isMouseGettingCloser","canAdoptVisibleHover","filter","insistOnKeepingHoverVisible","cancel","shouldFocus","start","hoverResult","_renderMessages","isColorPickerVisible","isVisibleFromKeyboard","isVisible","containsNode","node","contains","createLoadingMessage","loadingMessage","slice","concat","showAtPosition","showAtSecondaryPosition","highlightRange","computeHoverRanges","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","hoverParts","msg","owner","renderHoverParts","isBeforeContent","some","m","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","toDisposable","showAt","ContentHoverVisibleData","above","initialMousePosX","initialMousePosY","dispose","editor","anchorRange","startColumnBoundary","hasModel","viewModel","_getViewModel","coordinatesConverter","anchorViewRange","convertModelRangeToViewRange","anchorViewRangeStart","Position","startLineNumber","getLineMinColumn","convertViewPositionToModelPosition","column","anchorLineNumber","renderStartColumn","startColumn","forceShowAtRange","Range","plusRange","endLineNumber","Math","max","min","getStartPosition","scrollUp","scrollDown","scrollLeft","scrollRight","pageUp","pageDown","goToTop","goToBottom","escape","ModelDecorationOptions","register","description","className","IInstantiationService","IKeybindingService","filteredMessages","isValidForHoverAnchor","FilteredHoverResult","original","preferAbove","stoleFocus","closestMouseDistance","_a","_b","_visibleData","Boolean","_hoverVisibleKey","get","_contextKeyService","allowEditorOverflow","EditorContextKeys","hoverVisible","bindTo","_hoverFocusedKey","hoverFocused","_hover","HoverWidget","_focusTracker","_horizontalScrollingBy","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","_setVisibleData","addContentWidget","onDidFocus","onDidBlur","removeContentWidget","getId","ID","containerDomNode","getPosition","getContextKeyValue","SuggestContext","Visible","affinity","secondaryPosition","preference","positionAffinity","widgetRect","computeDistanceFromPointToRectangle","left","top","width","height","distance","visibleData","classList","toggle","getLayoutInfo","fontSize","lineHeight","contentsDomNode","style","maxHeight","maxWidth","Array","prototype","call","getElementsByClassName","forEach","applyFontInfo","textContent","paddingBottom","render","layout","layoutContentWidget","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","extraBottomPadding","horizontalScrollbarSize","scrollTop","getScrollPosition","fontInfo","setScrollPosition","scrollHeight","IContextKeyService","_hasContent","actionsElement","addAction","actionOptions","keybinding","lookupKeybinding","commandId","keybindingLabel","getLabel","HoverAction","append","element","_anchor","_shouldFocus","_source","_insistOnKeepingHoverVisible","_getLineDecorations","supportsMarkerHover","model","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","endColumn","showIfCollapsed","computeAsync","token","AsyncIterableObject","EMPTY","lineDecorations","merge","map","computeSync","coalesce","pointX","pointY","x","y","dx","abs","dy","sqrt","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","HoverProviderResult","provider","hover","ordinal","getHover","registry","promises","ordered","index","provideHover","hasRange","hasHtmlContent","contents","isValid","err","onUnexpectedExternalError","executeProvider","fromPromises","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","ILanguageFeaturesService","hoverProvider","CancellationToken","None","MarginHoverWidget","languageService","openerService","_renderDisposeables","_isVisible","_messages","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","onDidChangeModelDecorations","_onModelDecorationsChanged","addOverlayWidget","removeOverlayWidget","startShowingAt","markdownHoverElement","hoverContentsElement","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","clientHeight","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","QuickFix","triggerAction","CodeActionTriggerSource","QuickFixHover","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","compare","severity","renderMarkerStatusbar","markerHover","markerElement","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","onUnexpectedError","Error","Warning","Info","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","makeKey","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","quickFixCommandId","controller","CodeActionController","elementPosition","showCodeActions","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","ModesHoverController","getContribution","_languageService","_toUnhook","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_hookEvents","_didChangeConfigurationHandler","_unhookEvents","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","onMouseLeave","_onEditorMouseLeave","onDidChangeModel","hideWidgetsEventHandler","_hideWidgets","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","targetEm","browserEvent","relatedTarget","_c","_d","_e","_f","_g","_h","view","activeElement","getSelection","isCollapsed","_getOrCreateContentWidget","resolvedKeyboardEvent","softDispatch","mightTriggerFocus","kind","keyCode","InlineSuggestionHintsContentWidget","dropDownVisible","showContentHover","isHoverVisible","ILanguageService","ShowOrFocusHoverAction","EditorAction","id","comment","args","name","schema","properties","default","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","KeyChord","weight","ShowDefinitionPreviewHoverAction","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","ScrollUpHoverAction","ScrollDownHoverAction","ScrollLeftHoverAction","ScrollRightHoverAction","PageUpHoverAction","secondary","PageDownHoverAction","GoToTopHoverAction","GoToBottomHoverAction","EscapeFocusHoverAction","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","registerThemingParticipant","theme","collector","hoverBorder","getColor","editorHoverBorder","addRule","transparent","__asyncValues","o","Symbol","asyncIterator","TypeError","__values","iterator","verb","n","v","settle","_onResult","Emitter","_firstWaitScheduler","RunOnceScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","_hoverTime","delay","_firstWaitTime","_secondWaitTime","_loadingMessageTime","_setState","state","fireResult","_fireResult","schedule","createCancelableAsyncIterable","e_1","e_1_1","error","return","fire","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","_configurationService","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","stopRenderingLineAfter","maxTokenizationLineLength","getValue","overrideIdentifier","stopRenderingMessage","beforeContentClassName","has","rng","lift","renderMarkdownHovers","hoverPart","renderer","onDidRenderAsync","IConfigurationService","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","getEditOperations","builder","addTrackedEditOperation","computeCursorState","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController","editorWorkerService","decorations","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","writable","InPlaceReplaceDown","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","indentSize","getOptions","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","globalIndent","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","replaceMove","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","displaySizeOnly","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","pickedVal","parseInt","IndentUsingTabs","IndentUsingSpaces","ChangeTabDisplaySize","DetectIndentation","detectIndentation","ReindentLinesAction","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","_languageConfigurationService","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","_ref","trigger","tokenization","isCheapToTokenize","autoIndent","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId","InlayHintAnchor","direction","InlayHintItem","hint","_isResolved","with","delta","_currentResolve","resolveInlayHint","isCancellationRequested","_doResolve","finally","newHint","tooltip","InlayHintsFragments","create","ranges","data","reverse","provideInlayHints","hints","all","flat","CancellationError","_disposables","Set","items","list","validatePosition","wordRange","_getRangeAtPosition","isBefore","fromPositions","getEndPosition","line","word","getWordAtPosition","tokenizeIfCheap","offset","idx","getStartOffset","end","getEndOffset","InlayHintsCache","_entries","LRUCache","_key","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","part","ActiveInlayHintInfo","hasTriggerModifier","InlayHintsController","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_activeRenderMode","_debounceInfo","for","inlayHintsProvider","_update","_removeAllDecorations","cached","cts","_updateHintsDecorators","getFullModelRange","_cacheHintsForFastRestore","watchedProviders","scheduler","t1","Date","now","CancellationTokenSource","listener","onWillDispose","myToken","inlayHints","_getHintsRanges","onDidChangeInlayHints","isScheduled","onDidChangeModelContent","defaultMode","altMode","ModifierKeyEmitter","getInstance","newRenderMode","altKey","ctrlKey","shiftKey","metaKey","copies","_copyInlayHintsWithCurrentAnchor","_installDblClickGesture","_installLinkGesture","_installContextMenu","store","gesture","ClickLinkGesture","sessionStore","onMouseMoveOrRelevantKeyDown","labelPart","_getInlayHintLabelPart","_activeInlayHintPart","location","lineHints","_getInlineHintsForRange","onCancel","onExecute","invokeFunction","goToDefinitionWithLocation","languages","is","_invokeCommand","values","containsRange","from","updateInlayHints","onContextMenu","HTMLElement","showGoToContextMenu","injectedText","ModelDecorationInjectedTextOptions","attachedData","notify","Severity","displayName","obj","getDecorationRange","copy","visibleRanges","getVisibleRangesPlusViewportAboveBelow","compareRangesUsingStarts","extendedRange","validateRange","areIntersectingOrTouching","newDecorationsData","addInjectedText","ref","content","cursorStops","inlineClassNameAffectsLetterSpacing","inlineClassName","classNameRef","decoration","collapseOnReplaceEdit","stickiness","addInjectedWhitespace","isLast","marginRule","createClassNameRef","InjectedTextCursorStops","Right","fontFamily","padding","isUniform","_getLayoutInfo","fontFamilyVar","getContainerDomNode","setProperty","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","unicodeBidi","_fillInColors","textDecoration","color","themeColorFromId","colors","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","decorationIdsToReplace","getDecorationsInRange","metadata","delete","scrollState","StableEditorScrollState","capture","changeDecorations","newDecorationIds","deltaDecorations","restore","props","Parameter","backgroundColor","Type","editorFontSize","editorFontFamily","removeDecorations","keys","ILanguageFeatureDebounceService","ICommandService","INotificationService","CommandsRegistry","registerCommand","_len","assertType","URI","isUri","isIRange","ITextModelService","createModelReference","object","textEditorModel","InlayHintsHoverAnchor","InlayHintsHover","configurationService","_resolverService","languageFeaturesService","_lineDecorations","executor","itemTooltip","partTooltip","emitOne","localize","linkHint","kb","platform","scheme","Schemas","path","query","encodeURIComponent","JSON","stringify","title","isTrusted","iterable","_resolveInlayHintLabelPartHover","iterable_1_1","iterable_1","resolverService","contextMenuService","IContextMenuService","commandService","instaService","notificationService","menuActions","MenuRegistry","getMenuItems","MenuId","EditorContext","isIMenuItem","generateUuid","delegate","SymbolNavigationAction","Action","MenuItemAction","renderShortTitle","symbolAnchor","SymbolNavigationAnchor","runEditorCommand","bind","Separator","useShadowDOM","showContextMenu","domForShadowRoot","getAnchor","box","getActions","onHide","autoSelectFirstItem","invokeWithinContext","openToSide","hasSideBySideModifier","contextKeyService","isInPeek","PeekContext","inPeekEditor","canPeek","DefinitionAction","openInPeek","muteMessage","inlineSuggestCommitId","showPreviousInlineSuggestionActionId","showNextInlineSuggestionActionId","InlineCompletionContextKeys","inlineCompletionVisible","inlineSuggestionVisible","inlineCompletionSuggestsIndentation","inlineSuggestionHasIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","inlineSuggestionHasIndentationLessThanTabSize","suppressSuggestions","autorun","reader","read","suggestion","selectedInlineCompletion","ghostText","selectedSuggestItem","inlineCompletion","inlineCompletions","startsWithIndentation","startsWithIndentationLessThanTabSize","lines","firstLine","textModel","getLineIndentColumn","firstNonWsIdx","firstNonWhitespaceIndex","CursorColumns","visibleColumnFromColumn","RawContextKey","PositionOffsetTransformer","lineStartOffsetByLineIdx","getOffset","array","ColumnRange","endColumnExclusive","BugIndicatingError","toRange","addPositions","pos1","pos2","lengthOfText","GhostText","renderForScreenReader","lineText","lastPart","transformer","offsetEdits","startOffset","endOffset","applyEdits","p","join","every","reduce","GhostTextPart","preview","GhostTextReplacement","columnRange","newLines","additionalReservedLineCount","_lineText","GhostTextWidget","observableValue","currentTextModel","observableFromEvent","uiState","derived","targetTextModel","replacedRange","inlineTexts","additionalLines","addToAdditionalLines","lastLine","LineDecoration","textBufferLine","hiddenTextStartColumn","lastIdx","hiddenRange","minReservedLineCount","after","Left","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","decorationsCollection","debugName","applyObservableDecorations","ownsViewZone","viewZoneId","_viewZoneId","editorOptionsChanged","observableSignalFromEvent","Event","updateLines","changeViewZones","changeAccessor","removeZone","heightInLines","domNode","createElement","disableMonospaceOptimizations","renderWhitespace","renderControlCharacters","fontLigatures","sb","StringBuilder","appendString","len","lineData","isBasicASCII","containsRTL","lineTokens","LineTokens","createEmpty","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","OFF","html","build","trustedhtml","ttPolicy","createHTML","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","createTrustedTypesPolicy","SingleTextEdit","removeCommonPrefix","validModelRange","modelRange","intersectRanges","valueToReplace","commonPrefixLen","commonPrefixLength","augments","base","startsWith","extendingRange","rangeToExtend","isBeforeOrEqual","computeGhostText","cursorPosition","previewSuffixLength","sourceLine","sourceIndentationLength","getLeadingWhitespace","suggestionAddedIndentationLength","replacedIndentation","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","valueToBeReplaced","changes","originalValue","newValue","lastRequest","smartDiff","deletedChars","deletedCharacters","newChanges","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","splitLines","sum","smartBracketMatching","getMaxCharCode","val","maxCharCode","charCode","charCodeAt","getUniqueCharCode","getElements","level","group","characters","Int32Array","elements1","elements2","LcsDiff","ComputeDiff","provideInlineCompletions","defaultReplaceRange","getDefaultRange","providers","providerResults","completions","itemsByHash","lists","InlineCompletionList","inlineCompletionItem","InlineCompletionItem","hash","InlineCompletionProviderResult","hashs","removeRef","refCount","addRef","freeInlineCompletions","insertText","snippetInfo","completeBracketPairs","closeBrackets","preBracketCompletionLength","snippet","SnippetParser","parse","children","Text","assertNever","additionalTextEdits","filterText","sourceInlineCompletion","withRange","updatedRange","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","fixBracketsInLine","InlineCompletionsSource","versionId","_debounceValue","_updateOperation","MutableDisposable","disposableObservableValue","suggestWidgetInlineCompletions","onDidChangeContent","fetch","activeInlineCompletion","request","UpdateRequest","selectedSuggestionInfo","satisfies","promise","updateOngoing","ms","triggerKind","InlineCompletionTriggerKind","Automatic","handle","onCancellationRequested","clearTimeout","startTime","updatedCompletions","inlineCompletionsProvider","endTime","getTime","UpToDateInlineCompletions","asInlineCompletion","toInlineCompletion","canBeReused","prepend","transaction","tx","updateOperation","UpdateOperation","clearSuggestWidgetInlineCompletions","cancelUpdate","v1","v2","Explicit","cancellationTokenSource","_inlineCompletions","inlineCompletionProviderResult","_refCount","_prependedInlineCompletionItems","_rangeVersionIdValue","_rangeVersionId","changed","_updateRange","ids","InlineCompletionWithUpdatedRange","clone","decorationId","addRefToSource","unshift","forwardStable","enableForwardStability","rangeVersion","initialRange","semanticId","_isValid","_updatedRange","_getUpdatedRange","toSingleTextEdit","minimizedReplacement","_toFilterTextReplacement","toLowerCase","cursorPosIndex","filterTextBefore","filterTextAfter","originalValueBefore","originalValueAfter","originalValueIndent","trimStart","matchesSubString","containsPosition","_isSmallerThanOriginal","VersionIdChangeReason","InlineCompletionsModel","isAcceptingPartially","_isAcceptingPartially","isNavigatingCurrentInlineCompletion","_isNavigatingCurrentInlineCompletion","textModelVersionId","_suggestPreviewEnabled","_suggestPreviewMode","_inlineSuggestMode","_enabled","lastItem","_isActive","_forceUpdate","observableSignal","_selectedInlineCompletionId","_preserveCurrentCompletionReasons","Redo","Undo","AcceptWord","_fetchInlineCompletions","derivedHandleChanges","createEmptyChangeSummary","preserveCurrentCompletion","inlineCompletionTriggerKind","handleChange","ctx","changeSummary","didChange","change","itemToPreserveCandidate","itemToPreserve","suggestItem","toSelectedSuggestionInfo","_filteredInlineCompletionItems","filteredCompletions","selectedInlineCompletionIndex","selectedInlineCompletionId","findIndex","lastTriggerKind","inlineCompletionsCount","candidateInlineCompletions","isDefined","suggestCompletion","augmentedCompletion","mapFind","completion","editPreviewLength","newGhostText","replacement","keepAlive","src","handleItemDidShow","triggerExplicitly","subtransaction","stop","_deltaSelectedInlineCompletionIndex","newIdx","previous","accept","setPosition","SnippetController2","insert","undoStopBefore","acceptNextWord","_acceptNext","pos","langId","config","wordRegExp","wordDefinition","flags","m1","match","acceptUntilIndexExclusive","m2","exec","acceptNextLine","getAcceptUntilIndex","firstPart","partialText","handlePartialAccept","acceptedRange","SuggestWidgetAdaptor","selectedItem","_selectedItem","suggestControllerPreselector","checkModelVersion","isSuggestWidgetVisible","isShiftKeyPressed","_currentSuggestItemInfo","onKeyUp","suggestController","SuggestController","registerSelector","select","suggestItems","itemToPreselect","candidates","suggestItemTextEdit","SuggestItemInfo","fromSuggestion","valid","prefixLength","findMaxBy","compareBy","s","numberComparator","isBoundToSuggestWidget","bindToSuggestWidget","onDidShow","onDidHide","once","onDidTrigger","newActive","newInlineCompletion","getSuggestItemInfo","suggestItemInfoEquals","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","toggleMode","isSnippetText","insertTextRules","SnippetSession","adjustWhitespace","info","getOverwriteInfo","overwriteBefore","overwriteAfter","completionItemKind","SelectedSuggestionInfo","InlineCompletionsController","instantiationService","debounceService","audioCueService","suggestWidgetAdaptor","updateObservables","Other","ghostTextWidget","constObservable","runAndSubscribe","previewMode","getReason","isUndoing","isRedoing","lastInlineCompletionId","onDidChangeCursorPosition","reason","onDidType","onDidExecuteCommand","CoreEditingCommands","Tab","DeleteLeft","DeleteRight","hasTextFocus","onDidBlurEditorWidget","keepOnBlur","playAudioCue","AudioCue","inlineSuggestion","alert","InlineCompletionsHintsWidget","changeReason","newModel","shouldShowHoverAt","shouldShowHoverAtViewZone","IAudioCueService","ShowNextInlineSuggestionAction","ContextKeyExpr","and","ShowPreviousInlineSuggestionAction","TriggerInlineSuggestionAction","AcceptNextWordOfInlineCompletion","menuOpts","menuId","InlineSuggestionToolbar","order","AcceptNextLineOfInlineCompletion","AcceptInlineCompletion","tabMovesFocus","toNegated","HideInlineCompletion","ToggleAlwaysShowInlineSuggestionToolbar","Action2","f1","menu","toggled","configService","updateValue","InlineCompletionsHover","InlineCompletionsHoverParticipant","accessibilityService","_telemetryService","viewZoneData","positionBefore","mightBeForeignElement","showToolbar","disposableStore","publicLog2","isScreenReaderOptimized","renderScreenReaderText","w","commands","inlineSuggestionAvailable","appendCodeblock","replaceChildren","IAccessibilityService","ITelemetryService","registerAction2","alwaysShowToolbar","sessionPosition","firstColumn","Number","MAX_SAFE_INTEGER","autorunWithStore2","contentWidget","inlineSuggestionHintsNextIcon","registerIcon","Codicon","chevronRight","inlineSuggestionHintsPreviousIcon","chevronLeft","_dropDownVisible","createCommandAction","iconClassName","action","keybindingService","withBorder","_position","_currentSuggestionIdx","_suggestionCount","_extraCommands","_menuService","suppressMouseDown","nodes","h","previousAction","ThemeIcon","asClassName","availableSuggestionCountAction","nextAction","inlineCompletionsActionsMenus","createMenu","InlineCompletionsActions","clearAvailableSuggestionCountLabelDebounced","disableButtonsDebounced","lastCommands","actionBar","ActionBar","icon","toolBar","CustomizedMenuWorkbenchToolBar","menuOptions","toolbarOptions","primaryGroup","g","actionViewItemProvider","StatusBarViewItem","telemetrySource","onDidChangeDropdownVisibility","suggestionCount","currentSuggestionIdx","extraCommands","extraActions","class","_","setAdditionalSecondaryActions","root","IMenuService","MenuEntryActionViewItem","updateLabel","_action","div","KeybindingLabel","OS","assign","disableTitle","unthemedKeybindingLabelOptions","WorkbenchToolBar","container","options2","menuService","telemetryService","resetMenu","_store","emitEventsForSubmenuChanges","additionalActions","updateToolbar","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","setActions","inlineProgressDecoration","noBreakWhitespace","InlineProgressWidget","typeId","role","iconElement","asClassNameArray","loading","updateSize","ceil","CLICK","baseId","InlineProgressManager","_showDelay","_showPromise","_currentWidget","_operationIdPool","_currentDecorations","showWhile","operationId","_currentOperation","ExpandLineSelectionAction","textInputFocus","_accessor","pushStackElement","setCursorStates","CursorMoveCommands","expandLineSelection","getCursorStates","revealPrimaryCursor","CopyLinesCommand","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_startLineNumberDelta","_endLineNumberDelta","setEndPosition","sourceLines","sourceText","getDirection","createWithDirection","MoveLinesCommand","isMovingDown","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","buildIndentConverter","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","trimLeft","indentOfMovingLine","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","oldIndent","parseEnterResult","enter","enterPrefix","indentAction","IndentAction","Indent","IndentOutdent","Outdent","indexOf","indentMetadataOfMovelingLine","futureAboveLineNumber","futureAboveLineText","getEnterAction","validPrecedingLine","oneLineAbove","previousLineText","languageAtSelectionStart","indentRulesSupport","SortLinesCommand","getCollator","_COLLATOR","Intl","Collator","descending","op","getSortData","sortLines","canRun","before","linesToSort","sorted","AbstractCopyLinesAction","down","ignore","prev","curr","DuplicateSelectionAction","MenubarSelectionMenu","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","AbstractSortLinesAction","SortLinesAscendingAction","SortLinesDescendingAction","DeleteDuplicateLinesAction","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","cursors","positionLineNumber","TrimTrailingWhitespaceCommand","DeleteLinesAction","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","TypeOperations","indent","cursorConfig","OutdentLinesAction","InsertLineBeforeAction","lineInsertBefore","InsertLineAfterAction","lineInsertAfter","AbstractDeleteAllToBoundaryAction","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","nextRange","_getEndCursorState","DeleteAllLeftAction","mac","endPrimaryCursor","deletedLines","endCursor","newStartLine","deleteFromLine","deleteFromColumn","DeleteAllRightAction","sel","JoinLinesAction","reducedSelections","lastSelection","previousValue","currentValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","chars","split","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","wordSeparators","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","toLocaleUpperCase","LowerCaseAction","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","isSupported","TitleCaseAction","titleBoundary","SnakeCaseAction","caseBoundary","singleLetters","CamelCaseAction","wordBoundary","words","shift","KebabCaseAction","underscoreBoundary","regexp","linux","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","LinkedEditingContribution","languageFeatureDebounceService","_syncRangesToken","_localToDispose","_providers","linkedEditingRangeProvider","_visibleContextKey","_debounceInformation","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","forceRefresh","isEnabled","clearRanges","onDidChangeLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","updateRanges","_debounceDuration","rangeSyncScheduler","triggerRangeSync","_syncRanges","referenceRange","getRange","referenceValue","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","commonSuffixLength","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","sw","StopWatch","response","getLinkedEditingRanges","elapsed","wordPattern","foundReferenceRange","splice","isCancellationError","LinkedEditingAction","hasRenameProvider","runCommand","editorService","ICodeEditorService","isIPosition","openCodeEditor","getActiveCodeEditor","reportTelemetry","LinkedEditingCommand","EditorCommand","bindToContribution","orderedByScore","first","provideLinkedEditingRanges","arrays","registerEditorCommand","handler","editorLinkedEditingBackground","registerColor","dark","Color","fromHex","light","hcDark","hcLight","white","Link","link","_link","_provider","toJSON","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","provideLinks","resolveCount","linkProvider","LinkDetector","debounceInformation","computeLinks","computeLinksNow","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","clickLinkGesture","keyboardEvent","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","useMetaKey","oldDecorations","occurence","newDecorations","LinkOccurrence","withKey","occurrence","getLinkOccurrence","activate","deactivate","openLinkOccurrence","modelUri","file","parsedUri","fsPath","resources","relativePath","allowContributedOpeners","fromWorkspace","messageOrError","warn","currentOccurrence","keyCodeIsTriggerKey","general","active","_getOptions","isActive","executeCmd","nativeLabel","appendLink","appendMarkdown","getHoverMessage","changeDecorationOptions","OpenLinkAction","linkDetector"],"sourceRoot":""}