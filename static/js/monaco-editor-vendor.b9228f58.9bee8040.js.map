{"version":3,"file":"static/js/monaco-editor-vendor.b9228f58.9bee8040.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/editor/browser/dnd.js","../../node_modules/monaco-editor/esm/vs/editor/browser/editorBrowser.js","../../node_modules/monaco-editor/esm/vs/editor/browser/editorDom.js","../../node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/abstractCodeEditorService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/bulkEditService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/codeEditorService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/editorWorkerService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/markerDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/openerService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/webWorker.js","../../node_modules/monaco-editor/esm/vs/editor/browser/stableEditorScroll.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/contentWidgets.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/decorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/glyphMargin.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/domReadingContext.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLines.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/linesDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/marginDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharSheet.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapPreBaked.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/overviewRuler.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/rulers.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursors.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/blockDecorations/blockDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/whitespace/whitespace.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view/domLineBreaksComputer.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view/dynamicViewOverlay.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/rangeUtil.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/margin/margin.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DataTransfers } from '../../base/browser/dnd.js';\nimport { createFileDataTransferItem, createStringDataTransferItem, UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers } from '../../platform/dnd/browser/dnd.js';\nexport function toVSDataTransfer(dataTransfer) {\n    const vsDataTransfer = new VSDataTransfer();\n    for (const item of dataTransfer.items) {\n        const type = item.type;\n        if (item.kind === 'string') {\n            const asStringValue = new Promise(resolve => item.getAsString(resolve));\n            vsDataTransfer.append(type, createStringDataTransferItem(asStringValue));\n        }\n        else if (item.kind === 'file') {\n            const file = item.getAsFile();\n            if (file) {\n                vsDataTransfer.append(type, createFileDataTransferItemFromFile(file));\n            }\n        }\n    }\n    return vsDataTransfer;\n}\nfunction createFileDataTransferItemFromFile(file) {\n    const uri = file.path ? URI.parse(file.path) : undefined;\n    return createFileDataTransferItem(file.name, uri, () => __awaiter(this, void 0, void 0, function* () {\n        return new Uint8Array(yield file.arrayBuffer());\n    }));\n}\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([\n    CodeDataTransfers.EDITORS,\n    CodeDataTransfers.FILES,\n    DataTransfers.RESOURCES,\n    DataTransfers.INTERNAL_URI_LIST,\n]);\nexport function toExternalVSDataTransfer(sourceDataTransfer, overwriteUriList = false) {\n    const vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n    // Try to expose the internal uri-list type as the standard type\n    const uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n    if (uriList) {\n        vsDataTransfer.replace(Mimes.uriList, uriList);\n    }\n    else {\n        if (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n            // Otherwise, fallback to adding dragged resources to the uri list\n            const editorData = [];\n            for (const item of sourceDataTransfer.items) {\n                const file = item.getAsFile();\n                if (file) {\n                    const path = file.path;\n                    try {\n                        if (path) {\n                            editorData.push(URI.file(path).toString());\n                        }\n                        else {\n                            editorData.push(URI.parse(file.name, true).toString());\n                        }\n                    }\n                    catch (_a) {\n                        // Parsing failed. Leave out from list\n                    }\n                }\n            }\n            if (editorData.length) {\n                vsDataTransfer.replace(Mimes.uriList, createStringDataTransferItem(UriList.create(editorData)));\n            }\n        }\n    }\n    for (const internal of INTERNAL_DND_MIME_TYPES) {\n        vsDataTransfer.delete(internal);\n    }\n    return vsDataTransfer;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as editorCommon from '../common/editorCommon.js';\n/**\n *@internal\n */\nexport function isCodeEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.ICodeEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isDiffEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.IDiffEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isCompositeEditor(thing) {\n    return !!thing\n        && typeof thing === 'object'\n        && typeof thing.onDidChangeActiveEditor === 'function';\n}\n/**\n *@internal\n */\nexport function getCodeEditor(thing) {\n    if (isCodeEditor(thing)) {\n        return thing;\n    }\n    if (isDiffEditor(thing)) {\n        return thing.getModifiedEditor();\n    }\n    if (isCompositeEditor(thing) && isCodeEditor(thing.activeCodeEditor)) {\n        return thing.activeCodeEditor;\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../base/browser/globalPointerMoveMonitor.js';\nimport { StandardMouseEvent } from '../../base/browser/mouseEvent.js';\nimport { RunOnceScheduler } from '../../base/common/async.js';\nimport { Disposable } from '../../base/common/lifecycle.js';\nimport { asCssVariable } from '../../platform/theme/common/colorRegistry.js';\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nexport class PageCoordinates {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._pageCoordinatesBrand = undefined;\n    }\n    toClientCoordinates() {\n        return new ClientCoordinates(this.x - window.scrollX, this.y - window.scrollY);\n    }\n}\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nexport class ClientCoordinates {\n    constructor(clientX, clientY) {\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this._clientCoordinatesBrand = undefined;\n    }\n    toPageCoordinates() {\n        return new PageCoordinates(this.clientX + window.scrollX, this.clientY + window.scrollY);\n    }\n}\n/**\n * The position of the editor in the page.\n */\nexport class EditorPagePosition {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this._editorPagePositionBrand = undefined;\n    }\n}\n/**\n * Coordinates relative to the the (top;left) of the editor that can be used safely with other internal editor metrics.\n * **NOTE**: This position is obtained by taking page coordinates and transforming them relative to the\n * editor's (top;left) position in a way in which scale transformations are taken into account.\n * **NOTE**: These coordinates could be negative if the mouse position is outside the editor.\n */\nexport class CoordinatesRelativeToEditor {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._positionRelativeToEditorBrand = undefined;\n    }\n}\nexport function createEditorPagePosition(editorViewDomNode) {\n    const editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n    return new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\nexport function createCoordinatesRelativeToEditor(editorViewDomNode, editorPagePosition, pos) {\n    // The editor's page position is read from the DOM using getBoundingClientRect().\n    //\n    // getBoundingClientRect() returns the actual dimensions, while offsetWidth and offsetHeight\n    // reflect the unscaled size. We can use this difference to detect a transform:scale()\n    // and we will apply the transformation in inverse to get mouse coordinates that make sense inside the editor.\n    //\n    // This could be expanded to cover rotation as well maybe by walking the DOM up from `editorViewDomNode`\n    // and computing the effective transformation matrix using getComputedStyle(element).transform.\n    //\n    const scaleX = editorPagePosition.width / editorViewDomNode.offsetWidth;\n    const scaleY = editorPagePosition.height / editorViewDomNode.offsetHeight;\n    // Adjust mouse offsets if editor appears to be scaled via transforms\n    const relativeX = (pos.x - editorPagePosition.x) / scaleX;\n    const relativeY = (pos.y - editorPagePosition.y) / scaleY;\n    return new CoordinatesRelativeToEditor(relativeX, relativeY);\n}\nexport class EditorMouseEvent extends StandardMouseEvent {\n    constructor(e, isFromPointerCapture, editorViewDomNode) {\n        super(e);\n        this._editorMouseEventBrand = undefined;\n        this.isFromPointerCapture = isFromPointerCapture;\n        this.pos = new PageCoordinates(this.posx, this.posy);\n        this.editorPos = createEditorPagePosition(editorViewDomNode);\n        this.relativePos = createCoordinatesRelativeToEditor(editorViewDomNode, this.editorPos, this.pos);\n    }\n}\nexport class EditorMouseEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onContextMenu(target, callback) {\n        return dom.addDisposableListener(target, 'contextmenu', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseUp(target, callback) {\n        return dom.addDisposableListener(target, 'mouseup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_DOWN, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onMouseLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseMove(target, callback) {\n        return dom.addDisposableListener(target, 'mousemove', (e) => callback(this._create(e)));\n    }\n}\nexport class EditorPointerEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onPointerUp(target, callback) {\n        return dom.addDisposableListener(target, 'pointerup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onPointerLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerMove(target, callback) {\n        return dom.addDisposableListener(target, 'pointermove', (e) => callback(this._create(e)));\n    }\n}\nexport class GlobalEditorPointerMoveMonitor extends Disposable {\n    constructor(editorViewDomNode) {\n        super();\n        this._editorViewDomNode = editorViewDomNode;\n        this._globalPointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._keydownListener = null;\n    }\n    startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n        // Add a <<capture>> keydown event listener that will cancel the monitoring\n        // if something other than a modifier key is pressed\n        this._keydownListener = dom.addStandardDisposableListener(document, 'keydown', (e) => {\n            const chord = e.toKeyCodeChord();\n            if (chord.isModifierKey()) {\n                // Allow modifier keys\n                return;\n            }\n            this._globalPointerMoveMonitor.stopMonitoring(true, e.browserEvent);\n        }, true);\n        this._globalPointerMoveMonitor.startMonitoring(initialElement, pointerId, initialButtons, (e) => {\n            pointerMoveCallback(new EditorMouseEvent(e, true, this._editorViewDomNode));\n        }, (e) => {\n            this._keydownListener.dispose();\n            onStopCallback(e);\n        });\n    }\n    stopMonitoring() {\n        this._globalPointerMoveMonitor.stopMonitoring(true);\n    }\n}\n/**\n * A helper to create dynamic css rules, bound to a class name.\n * Rules are reused.\n * Reference counting and delayed garbage collection ensure that no rules leak.\n*/\nexport class DynamicCssRules {\n    constructor(_editor) {\n        this._editor = _editor;\n        this._instanceId = ++DynamicCssRules._idPool;\n        this._counter = 0;\n        this._rules = new Map();\n        // We delay garbage collection so that hanging rules can be reused.\n        this._garbageCollectionScheduler = new RunOnceScheduler(() => this.garbageCollect(), 1000);\n    }\n    createClassNameRef(options) {\n        const rule = this.getOrCreateRule(options);\n        rule.increaseRefCount();\n        return {\n            className: rule.className,\n            dispose: () => {\n                rule.decreaseRefCount();\n                this._garbageCollectionScheduler.schedule();\n            }\n        };\n    }\n    getOrCreateRule(properties) {\n        const key = this.computeUniqueKey(properties);\n        let existingRule = this._rules.get(key);\n        if (!existingRule) {\n            const counter = this._counter++;\n            existingRule = new RefCountedCssRule(key, `dyn-rule-${this._instanceId}-${counter}`, dom.isInShadowDOM(this._editor.getContainerDomNode())\n                ? this._editor.getContainerDomNode()\n                : undefined, properties);\n            this._rules.set(key, existingRule);\n        }\n        return existingRule;\n    }\n    computeUniqueKey(properties) {\n        return JSON.stringify(properties);\n    }\n    garbageCollect() {\n        for (const rule of this._rules.values()) {\n            if (!rule.hasReferences()) {\n                this._rules.delete(rule.key);\n                rule.dispose();\n            }\n        }\n    }\n}\nDynamicCssRules._idPool = 0;\nclass RefCountedCssRule {\n    constructor(key, className, _containerElement, properties) {\n        this.key = key;\n        this.className = className;\n        this.properties = properties;\n        this._referenceCount = 0;\n        this._styleElement = dom.createStyleSheet(_containerElement);\n        this._styleElement.textContent = this.getCssText(this.className, this.properties);\n    }\n    getCssText(className, properties) {\n        let str = `.${className} {`;\n        for (const prop in properties) {\n            const value = properties[prop];\n            let cssValue;\n            if (typeof value === 'object') {\n                cssValue = asCssVariable(value.id);\n            }\n            else {\n                cssValue = value;\n            }\n            const cssPropName = camelToDashes(prop);\n            str += `\\n\\t${cssPropName}: ${cssValue};`;\n        }\n        str += `\\n}`;\n        return str;\n    }\n    dispose() {\n        this._styleElement.remove();\n    }\n    increaseRefCount() {\n        this._referenceCount++;\n    }\n    decreaseRefCount() {\n        this._referenceCount--;\n    }\n    hasReferences() {\n        return this._referenceCount > 0;\n    }\n}\nfunction camelToDashes(str) {\n    return str.replace(/(^[A-Z])/, ([first]) => first.toLowerCase())\n        .replace(/([A-Z])/g, ([letter]) => `-${letter.toLowerCase()}`);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry, Action2 } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nexport class Command {\n    constructor(opts) {\n        this.id = opts.id;\n        this.precondition = opts.precondition;\n        this._kbOpts = opts.kbOpts;\n        this._menuOpts = opts.menuOpts;\n        this._description = opts.description;\n    }\n    register() {\n        if (Array.isArray(this._menuOpts)) {\n            this._menuOpts.forEach(this._registerMenuItem, this);\n        }\n        else if (this._menuOpts) {\n            this._registerMenuItem(this._menuOpts);\n        }\n        if (this._kbOpts) {\n            const kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n            for (const kbOpts of kbOptsArr) {\n                let kbWhen = kbOpts.kbExpr;\n                if (this.precondition) {\n                    if (kbWhen) {\n                        kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n                    }\n                    else {\n                        kbWhen = this.precondition;\n                    }\n                }\n                const desc = {\n                    id: this.id,\n                    weight: kbOpts.weight,\n                    args: kbOpts.args,\n                    when: kbWhen,\n                    primary: kbOpts.primary,\n                    secondary: kbOpts.secondary,\n                    win: kbOpts.win,\n                    linux: kbOpts.linux,\n                    mac: kbOpts.mac,\n                };\n                KeybindingsRegistry.registerKeybindingRule(desc);\n            }\n        }\n        CommandsRegistry.registerCommand({\n            id: this.id,\n            handler: (accessor, args) => this.runCommand(accessor, args),\n            description: this._description\n        });\n    }\n    _registerMenuItem(item) {\n        MenuRegistry.appendMenuItem(item.menuId, {\n            group: item.group,\n            command: {\n                id: this.id,\n                title: item.title,\n                icon: item.icon,\n                precondition: this.precondition\n            },\n            when: item.when,\n            order: item.order\n        });\n    }\n}\nexport class MultiCommand extends Command {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, name, implementation) {\n        this._implementations.push({ priority, name, implementation });\n        this._implementations.sort((a, b) => b.priority - a.priority);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i].implementation === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    runCommand(accessor, args) {\n        const logService = accessor.get(ILogService);\n        logService.trace(`Executing Command '${this.id}' which has ${this._implementations.length} bound.`);\n        for (const impl of this._implementations) {\n            const result = impl.implementation(accessor, args);\n            if (result) {\n                logService.trace(`Command '${this.id}' was handled by '${impl.name}'.`);\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n        logService.trace(`The Command '${this.id}' was not handled by any implementation.`);\n    }\n}\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport class ProxyCommand extends Command {\n    constructor(command, opts) {\n        super(opts);\n        this.command = command;\n    }\n    runCommand(accessor, args) {\n        return this.command.runCommand(accessor, args);\n    }\n}\nexport class EditorCommand extends Command {\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    static bindToContribution(controllerGetter) {\n        return class EditorControllerCommandImpl extends EditorCommand {\n            constructor(opts) {\n                super(opts);\n                this._callback = opts.handler;\n            }\n            runEditorCommand(accessor, editor, args) {\n                const controller = controllerGetter(editor);\n                if (controller) {\n                    this._callback(controller, args);\n                }\n            }\n        };\n    }\n    static runEditorCommand(accessor, args, precondition, runner) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        // Find the editor with text focus or active\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            if (!kbService.contextMatchesRules(withNullAsUndefined(precondition))) {\n                // precondition does not hold\n                return;\n            }\n            return runner(editorAccessor, editor, args);\n        });\n    }\n    runCommand(accessor, args) {\n        return EditorCommand.runEditorCommand(accessor, args, this.precondition, (accessor, editor, args) => this.runEditorCommand(accessor, editor, args));\n    }\n}\nexport class EditorAction extends EditorCommand {\n    static convertOptions(opts) {\n        let menuOpts;\n        if (Array.isArray(opts.menuOpts)) {\n            menuOpts = opts.menuOpts;\n        }\n        else if (opts.menuOpts) {\n            menuOpts = [opts.menuOpts];\n        }\n        else {\n            menuOpts = [];\n        }\n        function withDefaults(item) {\n            if (!item.menuId) {\n                item.menuId = MenuId.EditorContext;\n            }\n            if (!item.title) {\n                item.title = opts.label;\n            }\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\n            return item;\n        }\n        if (Array.isArray(opts.contextMenuOpts)) {\n            menuOpts.push(...opts.contextMenuOpts.map(withDefaults));\n        }\n        else if (opts.contextMenuOpts) {\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\n        }\n        opts.menuOpts = menuOpts;\n        return opts;\n    }\n    constructor(opts) {\n        super(EditorAction.convertOptions(opts));\n        this.label = opts.label;\n        this.alias = opts.alias;\n    }\n    runEditorCommand(accessor, editor, args) {\n        this.reportTelemetry(accessor, editor);\n        return this.run(accessor, editor, args || {});\n    }\n    reportTelemetry(accessor, editor) {\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\n    }\n}\nexport class MultiEditorAction extends EditorAction {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, implementation) {\n        this._implementations.push([priority, implementation]);\n        this._implementations.sort((a, b) => b[0] - a[0]);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i][1] === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    run(accessor, editor, args) {\n        for (const impl of this._implementations) {\n            const result = impl[1](accessor, editor, args);\n            if (result) {\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n    }\n}\n//#endregion EditorAction\n//#region EditorAction2\nexport class EditorAction2 extends Action2 {\n    run(accessor, ...args) {\n        // Find the editor with text focus or active\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        // precondition does hold\n        return editor.invokeWithinContext((editorAccessor) => {\n            var _a;\n            const kbService = editorAccessor.get(IContextKeyService);\n            const logService = editorAccessor.get(ILogService);\n            const enabled = kbService.contextMatchesRules(withNullAsUndefined(this.desc.precondition));\n            if (!enabled) {\n                logService.debug(`[EditorAction2] NOT running command because its precondition is FALSE`, this.desc.id, (_a = this.desc.precondition) === null || _a === void 0 ? void 0 : _a.serialize());\n                return;\n            }\n            return this.runEditorCommand(editorAccessor, editor, ...args);\n        });\n    }\n}\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\n        const instaService = accessor.get(IInstantiationService);\n        const [resource, position] = args;\n        assertType(URI.isUri(resource));\n        assertType(Position.isIPosition(position));\n        const model = accessor.get(IModelService).getModel(resource);\n        if (model) {\n            const editorPosition = Position.lift(position);\n            return instaService.invokeFunction(handler, model, editorPosition, ...args.slice(2));\n        }\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n            return new Promise((resolve, reject) => {\n                try {\n                    const result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n                    resolve(result);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }).finally(() => {\n                reference.dispose();\n            });\n        });\n    });\n}\nexport function registerEditorCommand(editorCommand) {\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n    return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n    const action = new ctor();\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerMultiEditorAction(action) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n/**\n * Registers an editor contribution. Editor contributions have a lifecycle which is bound\n * to a specific code editor instance.\n */\nexport function registerEditorContribution(id, ctor, instantiation) {\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor, instantiation);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n    function getEditorCommand(commandId) {\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n    }\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n    function getEditorActions() {\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\n    }\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\n    function getEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\n    }\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n    function getSomeEditorContributions(ids) {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\n    }\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n    function getDiffEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n    }\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nconst Extensions = {\n    EditorCommonContributions: 'editor.contributions'\n};\nclass EditorContributionRegistry {\n    constructor() {\n        this.editorContributions = [];\n        this.diffEditorContributions = [];\n        this.editorActions = [];\n        this.editorCommands = Object.create(null);\n    }\n    registerEditorContribution(id, ctor, instantiation) {\n        this.editorContributions.push({ id, ctor: ctor, instantiation });\n    }\n    getEditorContributions() {\n        return this.editorContributions.slice(0);\n    }\n    getDiffEditorContributions() {\n        return this.diffEditorContributions.slice(0);\n    }\n    registerEditorAction(action) {\n        action.register();\n        this.editorActions.push(action);\n    }\n    getEditorActions() {\n        return this.editorActions;\n    }\n    registerEditorCommand(editorCommand) {\n        editorCommand.register();\n        this.editorCommands[editorCommand.id] = editorCommand;\n    }\n    getEditorCommand(commandId) {\n        return (this.editorCommands[commandId] || null);\n    }\n}\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport const UndoCommand = registerCommand(new MultiCommand({\n    id: 'undo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 56 /* KeyCode.KeyZ */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('undo', \"Undo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\nexport const RedoCommand = registerCommand(new MultiCommand({\n    id: 'redo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 55 /* KeyCode.KeyY */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */],\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */ }\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\n            order: 2\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('redo', \"Redo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\nexport const SelectAllCommand = registerCommand(new MultiCommand({\n    id: 'editor.action.selectAll',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 31 /* KeyCode.KeyA */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarSelectionMenu,\n            group: '1_basic',\n            title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('selectAll', \"Select All\"),\n            order: 1\n        }]\n}));\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nexport let AbstractCodeEditorService = class AbstractCodeEditorService extends Disposable {\n    constructor(_themeService) {\n        super();\n        this._themeService = _themeService;\n        this._onWillCreateCodeEditor = this._register(new Emitter());\n        this._onCodeEditorAdd = this._register(new Emitter());\n        this.onCodeEditorAdd = this._onCodeEditorAdd.event;\n        this._onCodeEditorRemove = this._register(new Emitter());\n        this.onCodeEditorRemove = this._onCodeEditorRemove.event;\n        this._onWillCreateDiffEditor = this._register(new Emitter());\n        this._onDiffEditorAdd = this._register(new Emitter());\n        this.onDiffEditorAdd = this._onDiffEditorAdd.event;\n        this._onDiffEditorRemove = this._register(new Emitter());\n        this.onDiffEditorRemove = this._onDiffEditorRemove.event;\n        this._decorationOptionProviders = new Map();\n        this._codeEditorOpenHandlers = new LinkedList();\n        this._modelProperties = new Map();\n        this._codeEditors = Object.create(null);\n        this._diffEditors = Object.create(null);\n        this._globalStyleSheet = null;\n    }\n    willCreateCodeEditor() {\n        this._onWillCreateCodeEditor.fire();\n    }\n    addCodeEditor(editor) {\n        this._codeEditors[editor.getId()] = editor;\n        this._onCodeEditorAdd.fire(editor);\n    }\n    removeCodeEditor(editor) {\n        if (delete this._codeEditors[editor.getId()]) {\n            this._onCodeEditorRemove.fire(editor);\n        }\n    }\n    listCodeEditors() {\n        return Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\n    }\n    willCreateDiffEditor() {\n        this._onWillCreateDiffEditor.fire();\n    }\n    addDiffEditor(editor) {\n        this._diffEditors[editor.getId()] = editor;\n        this._onDiffEditorAdd.fire(editor);\n    }\n    removeDiffEditor(editor) {\n        if (delete this._diffEditors[editor.getId()]) {\n            this._onDiffEditorRemove.fire(editor);\n        }\n    }\n    listDiffEditors() {\n        return Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\n    }\n    getFocusedCodeEditor() {\n        let editorWithWidgetFocus = null;\n        const editors = this.listCodeEditors();\n        for (const editor of editors) {\n            if (editor.hasTextFocus()) {\n                // bingo!\n                return editor;\n            }\n            if (editor.hasWidgetFocus()) {\n                editorWithWidgetFocus = editor;\n            }\n        }\n        return editorWithWidgetFocus;\n    }\n    removeDecorationType(key) {\n        const provider = this._decorationOptionProviders.get(key);\n        if (provider) {\n            provider.refCount--;\n            if (provider.refCount <= 0) {\n                this._decorationOptionProviders.delete(key);\n                provider.dispose();\n                this.listCodeEditors().forEach((ed) => ed.removeDecorationsByType(key));\n            }\n        }\n    }\n    setModelProperty(resource, key, value) {\n        const key1 = resource.toString();\n        let dest;\n        if (this._modelProperties.has(key1)) {\n            dest = this._modelProperties.get(key1);\n        }\n        else {\n            dest = new Map();\n            this._modelProperties.set(key1, dest);\n        }\n        dest.set(key, value);\n    }\n    getModelProperty(resource, key) {\n        const key1 = resource.toString();\n        if (this._modelProperties.has(key1)) {\n            const innerMap = this._modelProperties.get(key1);\n            return innerMap.get(key);\n        }\n        return undefined;\n    }\n    openCodeEditor(input, source, sideBySide) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const handler of this._codeEditorOpenHandlers) {\n                const candidate = yield handler(input, source, sideBySide);\n                if (candidate !== null) {\n                    return candidate;\n                }\n            }\n            return null;\n        });\n    }\n    registerCodeEditorOpenHandler(handler) {\n        const rm = this._codeEditorOpenHandlers.unshift(handler);\n        return toDisposable(rm);\n    }\n};\nAbstractCodeEditorService = __decorate([\n    __param(0, IThemeService)\n], AbstractCodeEditorService);\nexport class GlobalStyleSheet {\n    constructor(styleSheet) {\n        this._styleSheet = styleSheet;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isObject } from '../../../base/common/types.js';\nexport const IBulkEditService = createDecorator('IWorkspaceEditService');\nexport class ResourceEdit {\n    constructor(metadata) {\n        this.metadata = metadata;\n    }\n    static convert(edit) {\n        return edit.edits.map(edit => {\n            if (ResourceTextEdit.is(edit)) {\n                return ResourceTextEdit.lift(edit);\n            }\n            if (ResourceFileEdit.is(edit)) {\n                return ResourceFileEdit.lift(edit);\n            }\n            throw new Error('Unsupported edit');\n        });\n    }\n}\nexport class ResourceTextEdit extends ResourceEdit {\n    static is(candidate) {\n        if (candidate instanceof ResourceTextEdit) {\n            return true;\n        }\n        return isObject(candidate)\n            && URI.isUri(candidate.resource)\n            && isObject(candidate.textEdit);\n    }\n    static lift(edit) {\n        if (edit instanceof ResourceTextEdit) {\n            return edit;\n        }\n        else {\n            return new ResourceTextEdit(edit.resource, edit.textEdit, edit.versionId, edit.metadata);\n        }\n    }\n    constructor(resource, textEdit, versionId = undefined, metadata) {\n        super(metadata);\n        this.resource = resource;\n        this.textEdit = textEdit;\n        this.versionId = versionId;\n    }\n}\nexport class ResourceFileEdit extends ResourceEdit {\n    static is(candidate) {\n        if (candidate instanceof ResourceFileEdit) {\n            return true;\n        }\n        else {\n            return isObject(candidate)\n                && (Boolean(candidate.newResource) || Boolean(candidate.oldResource));\n        }\n    }\n    static lift(edit) {\n        if (edit instanceof ResourceFileEdit) {\n            return edit;\n        }\n        else {\n            return new ResourceFileEdit(edit.oldResource, edit.newResource, edit.options, edit.metadata);\n        }\n    }\n    constructor(oldResource, newResource, options = {}, metadata) {\n        super(metadata);\n        this.oldResource = oldResource;\n        this.newResource = newResource;\n        this.options = options;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ICodeEditorService = createDecorator('codeEditorService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { DefaultWorkerFactory } from '../../../base/browser/defaultWorkerFactory.js';\nimport { Range } from '../../common/core/range.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from '../../common/services/editorSimpleWorker.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfiguration.js';\nimport { regExpFlags } from '../../../base/common/strings.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { LineRangeMapping, RangeMapping } from '../../common/diff/linesDiffComputer.js';\nimport { LineRange } from '../../common/core/lineRange.js';\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n    const model = modelService.getModel(resource);\n    if (!model) {\n        return false;\n    }\n    if (model.isTooLargeForSyncing()) {\n        return false;\n    }\n    return true;\n}\nexport let EditorWorkerService = class EditorWorkerService extends Disposable {\n    constructor(modelService, configurationService, logService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this._modelService = modelService;\n        this._workerManager = this._register(new WorkerManager(this._modelService, languageConfigurationService));\n        this._logService = logService;\n        // register default link-provider and default completions-provider\n        this._register(languageFeaturesService.linkProvider.register({ language: '*', hasAccessToAllModels: true }, {\n            provideLinks: (model, token) => {\n                if (!canSyncModel(this._modelService, model.uri)) {\n                    return Promise.resolve({ links: [] }); // File too large\n                }\n                return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\n                    return links && { links };\n                });\n            }\n        }));\n        this._register(languageFeaturesService.completionProvider.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService, languageConfigurationService)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    canComputeUnicodeHighlights(uri) {\n        return canSyncModel(this._modelService, uri);\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._workerManager.withWorker().then(client => client.computedUnicodeHighlights(uri, options, range));\n    }\n    computeDiff(original, modified, options, algorithm) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._workerManager.withWorker().then(client => client.computeDiff(original, modified, options, algorithm));\n            if (!result) {\n                return null;\n            }\n            // Convert from space efficient JSON data to rich objects.\n            const diff = {\n                identical: result.identical,\n                quitEarly: result.quitEarly,\n                changes: result.changes.map((c) => {\n                    var _a;\n                    return new LineRangeMapping(new LineRange(c[0], c[1]), new LineRange(c[2], c[3]), (_a = c[4]) === null || _a === void 0 ? void 0 : _a.map((c) => new RangeMapping(new Range(c[0], c[1], c[2], c[3]), new Range(c[4], c[5], c[6], c[7]))));\n                }),\n            };\n            return diff;\n        });\n    }\n    computeMoreMinimalEdits(resource, edits, pretty = false) {\n        if (isNonEmptyArray(edits)) {\n            if (!canSyncModel(this._modelService, resource)) {\n                return Promise.resolve(edits); // File too large\n            }\n            const sw = StopWatch.create(true);\n            const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits, pretty));\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n            return Promise.race([result, timeout(1000).then(() => edits)]);\n        }\n        else {\n            return Promise.resolve(undefined);\n        }\n    }\n    canNavigateValueSet(resource) {\n        return (canSyncModel(this._modelService, resource));\n    }\n    navigateValueSet(resource, range, up) {\n        return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\n    }\n    canComputeWordRanges(resource) {\n        return canSyncModel(this._modelService, resource);\n    }\n    computeWordRanges(resource, range) {\n        return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\n    }\n};\nEditorWorkerService = __decorate([\n    __param(0, IModelService),\n    __param(1, ITextResourceConfigurationService),\n    __param(2, ILogService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], EditorWorkerService);\nclass WordBasedCompletionItemProvider {\n    constructor(workerManager, configurationService, modelService, languageConfigurationService) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._debugDisplayName = 'wordbasedCompletions';\n        this._workerManager = workerManager;\n        this._configurationService = configurationService;\n        this._modelService = modelService;\n    }\n    provideCompletionItems(model, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const config = this._configurationService.getValue(model.uri, position, 'editor');\n            if (!config.wordBasedSuggestions) {\n                return undefined;\n            }\n            const models = [];\n            if (config.wordBasedSuggestionsMode === 'currentDocument') {\n                // only current file and only if not too large\n                if (canSyncModel(this._modelService, model.uri)) {\n                    models.push(model.uri);\n                }\n            }\n            else {\n                // either all files or files of same language\n                for (const candidate of this._modelService.getModels()) {\n                    if (!canSyncModel(this._modelService, candidate.uri)) {\n                        continue;\n                    }\n                    if (candidate === model) {\n                        models.unshift(candidate.uri);\n                    }\n                    else if (config.wordBasedSuggestionsMode === 'allDocuments' || candidate.getLanguageId() === model.getLanguageId()) {\n                        models.push(candidate.uri);\n                    }\n                }\n            }\n            if (models.length === 0) {\n                return undefined; // File too large, no other files\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const word = model.getWordAtPosition(position);\n            const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n            const insert = replace.setEndPosition(position.lineNumber, position.column);\n            const client = yield this._workerManager.withWorker();\n            const data = yield client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\n            if (!data) {\n                return undefined;\n            }\n            return {\n                duration: data.duration,\n                suggestions: data.words.map((word) => {\n                    return {\n                        kind: 18 /* languages.CompletionItemKind.Text */,\n                        label: word,\n                        insertText: word,\n                        range: { insert, replace }\n                    };\n                }),\n            };\n        });\n    }\n}\nclass WorkerManager extends Disposable {\n    constructor(modelService, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._modelService = modelService;\n        this._editorWorkerClient = null;\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        const stopWorkerInterval = this._register(new IntervalTimer());\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2));\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n    }\n    dispose() {\n        if (this._editorWorkerClient) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n        super.dispose();\n    }\n    /**\n     * Check if the model service has no more models and stop the worker if that is the case.\n     */\n    _checkStopEmptyWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const models = this._modelService.getModels();\n        if (models.length === 0) {\n            // There are no more models => nothing possible for me to do\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    /**\n     * Check if the worker has been idle for a while and then stop it.\n     */\n    _checkStopIdleWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    withWorker() {\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        if (!this._editorWorkerClient) {\n            this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService', this.languageConfigurationService);\n        }\n        return Promise.resolve(this._editorWorkerClient);\n    }\n}\nclass EditorModelManager extends Disposable {\n    constructor(proxy, modelService, keepIdleModels) {\n        super();\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        this._proxy = proxy;\n        this._modelService = modelService;\n        if (!keepIdleModels) {\n            const timer = new IntervalTimer();\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n            this._register(timer);\n        }\n    }\n    dispose() {\n        for (const modelUrl in this._syncedModels) {\n            dispose(this._syncedModels[modelUrl]);\n        }\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        super.dispose();\n    }\n    ensureSyncedResources(resources, forceLargeModels) {\n        for (const resource of resources) {\n            const resourceStr = resource.toString();\n            if (!this._syncedModels[resourceStr]) {\n                this._beginModelSync(resource, forceLargeModels);\n            }\n            if (this._syncedModels[resourceStr]) {\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n            }\n        }\n    }\n    _checkStopModelSync() {\n        const currentTime = (new Date()).getTime();\n        const toRemove = [];\n        for (const modelUrl in this._syncedModelsLastUsedTime) {\n            const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n                toRemove.push(modelUrl);\n            }\n        }\n        for (const e of toRemove) {\n            this._stopModelSync(e);\n        }\n    }\n    _beginModelSync(resource, forceLargeModels) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return;\n        }\n        if (!forceLargeModels && model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelUrl = resource.toString();\n        this._proxy.acceptNewModel({\n            url: model.uri.toString(),\n            lines: model.getLinesContent(),\n            EOL: model.getEOL(),\n            versionId: model.getVersionId()\n        });\n        const toDispose = new DisposableStore();\n        toDispose.add(model.onDidChangeContent((e) => {\n            this._proxy.acceptModelChanged(modelUrl.toString(), e);\n        }));\n        toDispose.add(model.onWillDispose(() => {\n            this._stopModelSync(modelUrl);\n        }));\n        toDispose.add(toDisposable(() => {\n            this._proxy.acceptRemovedModel(modelUrl);\n        }));\n        this._syncedModels[modelUrl] = toDispose;\n    }\n    _stopModelSync(modelUrl) {\n        const toDispose = this._syncedModels[modelUrl];\n        delete this._syncedModels[modelUrl];\n        delete this._syncedModelsLastUsedTime[modelUrl];\n        dispose(toDispose);\n    }\n}\nclass SynchronousWorkerClient {\n    constructor(instance) {\n        this._instance = instance;\n        this._proxyObj = Promise.resolve(this._instance);\n    }\n    dispose() {\n        this._instance.dispose();\n    }\n    getProxyObject() {\n        return this._proxyObj;\n    }\n}\nexport class EditorWorkerHost {\n    constructor(workerClient) {\n        this._workerClient = workerClient;\n    }\n    // foreign host request\n    fhr(method, args) {\n        return this._workerClient.fhr(method, args);\n    }\n}\nexport class EditorWorkerClient extends Disposable {\n    constructor(modelService, keepIdleModels, label, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._disposed = false;\n        this._modelService = modelService;\n        this._keepIdleModels = keepIdleModels;\n        this._workerFactory = new DefaultWorkerFactory(label);\n        this._worker = null;\n        this._modelManager = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        throw new Error(`Not implemented!`);\n    }\n    _getOrCreateWorker() {\n        if (!this._worker) {\n            try {\n                this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\n            }\n            catch (err) {\n                logOnceWebWorkerWarning(err);\n                this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            }\n        }\n        return this._worker;\n    }\n    _getProxy() {\n        return this._getOrCreateWorker().getProxyObject().then(undefined, (err) => {\n            logOnceWebWorkerWarning(err);\n            this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            return this._getOrCreateWorker().getProxyObject();\n        });\n    }\n    _getOrCreateModelManager(proxy) {\n        if (!this._modelManager) {\n            this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\n        }\n        return this._modelManager;\n    }\n    _withSyncedResources(resources, forceLargeModels = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                return Promise.reject(canceled());\n            }\n            return this._getProxy().then((proxy) => {\n                this._getOrCreateModelManager(proxy).ensureSyncedResources(resources, forceLargeModels);\n                return proxy;\n            });\n        });\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._withSyncedResources([uri]).then(proxy => {\n            return proxy.computeUnicodeHighlights(uri.toString(), options, range);\n        });\n    }\n    computeDiff(original, modified, options, algorithm) {\n        return this._withSyncedResources([original, modified], /* forceLargeModels */ true).then(proxy => {\n            return proxy.computeDiff(original.toString(), modified.toString(), options, algorithm);\n        });\n    }\n    computeMoreMinimalEdits(resource, edits, pretty) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeMoreMinimalEdits(resource.toString(), edits, pretty);\n        });\n    }\n    computeLinks(resource) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeLinks(resource.toString());\n        });\n    }\n    computeDefaultDocumentColors(resource) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeDefaultDocumentColors(resource.toString());\n        });\n    }\n    textualSuggest(resources, leadingWord, wordDefRegExp) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const proxy = yield this._withSyncedResources(resources);\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = regExpFlags(wordDefRegExp);\n            return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n        });\n    }\n    computeWordRanges(resource, range) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return Promise.resolve(null);\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = regExpFlags(wordDefRegExp);\n            return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n        });\n    }\n    navigateValueSet(resource, range, up) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return null;\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = regExpFlags(wordDefRegExp);\n            return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._disposed = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { registerEditorContribution } from '../editorExtensions.js';\nexport let MarkerDecorationsContribution = class MarkerDecorationsContribution {\n    constructor(_editor, _markerDecorationsService) {\n        // Doesn't do anything, just requires `IMarkerDecorationsService` to make sure it gets instantiated\n    }\n    dispose() {\n    }\n};\nMarkerDecorationsContribution.ID = 'editor.contrib.markerDecorations';\nMarkerDecorationsContribution = __decorate([\n    __param(1, IMarkerDecorationsService)\n], MarkerDecorationsContribution);\nregisterEditorContribution(MarkerDecorationsContribution.ID, MarkerDecorationsContribution, 0 /* EditorContributionInstantiation.Eager */); // eager because it instantiates IMarkerDecorationsService which is responsible for rendering squiggles\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { normalizePath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from './codeEditorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorOpenSource } from '../../../platform/editor/common/editor.js';\nimport { extractSelection, matchesScheme, matchesSomeScheme } from '../../../platform/opener/common/opener.js';\nlet CommandOpener = class CommandOpener {\n    constructor(_commandService) {\n        this._commandService = _commandService;\n    }\n    open(target, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!matchesScheme(target, Schemas.command)) {\n                return false;\n            }\n            if (!(options === null || options === void 0 ? void 0 : options.allowCommands)) {\n                // silently ignore commands when command-links are disabled, also\n                // suppress other openers by returning TRUE\n                return true;\n            }\n            if (typeof target === 'string') {\n                target = URI.parse(target);\n            }\n            if (Array.isArray(options.allowCommands)) {\n                // Only allow specific commands\n                if (!options.allowCommands.includes(target.path)) {\n                    // Suppress other openers by returning TRUE\n                    return true;\n                }\n            }\n            // execute as command\n            let args = [];\n            try {\n                args = parse(decodeURIComponent(target.query));\n            }\n            catch (_a) {\n                // ignore and retry\n                try {\n                    args = parse(target.query);\n                }\n                catch (_b) {\n                    // ignore error\n                }\n            }\n            if (!Array.isArray(args)) {\n                args = [args];\n            }\n            yield this._commandService.executeCommand(target.path, ...args);\n            return true;\n        });\n    }\n};\nCommandOpener = __decorate([\n    __param(0, ICommandService)\n], CommandOpener);\nlet EditorOpener = class EditorOpener {\n    constructor(_editorService) {\n        this._editorService = _editorService;\n    }\n    open(target, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof target === 'string') {\n                target = URI.parse(target);\n            }\n            const { selection, uri } = extractSelection(target);\n            target = uri;\n            if (target.scheme === Schemas.file) {\n                target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n            }\n            yield this._editorService.openCodeEditor({\n                resource: target,\n                options: Object.assign({ selection, source: (options === null || options === void 0 ? void 0 : options.fromUserGesture) ? EditorOpenSource.USER : EditorOpenSource.API }, options === null || options === void 0 ? void 0 : options.editorOptions)\n            }, this._editorService.getFocusedCodeEditor(), options === null || options === void 0 ? void 0 : options.openToSide);\n            return true;\n        });\n    }\n};\nEditorOpener = __decorate([\n    __param(0, ICodeEditorService)\n], EditorOpener);\nexport let OpenerService = class OpenerService {\n    constructor(editorService, commandService) {\n        this._openers = new LinkedList();\n        this._validators = new LinkedList();\n        this._resolvers = new LinkedList();\n        this._resolvedUriTargets = new ResourceMap(uri => uri.with({ path: null, fragment: null, query: null }).toString());\n        this._externalOpeners = new LinkedList();\n        // Default external opener is going through window.open()\n        this._defaultExternalOpener = {\n            openExternal: (href) => __awaiter(this, void 0, void 0, function* () {\n                // ensure to open HTTP/HTTPS links into new windows\n                // to not trigger a navigation. Any other link is\n                // safe to be set as HREF to prevent a blank window\n                // from opening.\n                if (matchesSomeScheme(href, Schemas.http, Schemas.https)) {\n                    dom.windowOpenNoOpener(href);\n                }\n                else {\n                    window.location.href = href;\n                }\n                return true;\n            })\n        };\n        // Default opener: any external, maito, http(s), command, and catch-all-editors\n        this._openers.push({\n            open: (target, options) => __awaiter(this, void 0, void 0, function* () {\n                if ((options === null || options === void 0 ? void 0 : options.openExternal) || matchesSomeScheme(target, Schemas.mailto, Schemas.http, Schemas.https, Schemas.vsls)) {\n                    // open externally\n                    yield this._doOpenExternal(target, options);\n                    return true;\n                }\n                return false;\n            })\n        });\n        this._openers.push(new CommandOpener(commandService));\n        this._openers.push(new EditorOpener(editorService));\n    }\n    registerOpener(opener) {\n        const remove = this._openers.unshift(opener);\n        return { dispose: remove };\n    }\n    open(target, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // check with contributed validators\n            const targetURI = typeof target === 'string' ? URI.parse(target) : target;\n            // validate against the original URI that this URI resolves to, if one exists\n            const validationTarget = (_a = this._resolvedUriTargets.get(targetURI)) !== null && _a !== void 0 ? _a : target;\n            for (const validator of this._validators) {\n                if (!(yield validator.shouldOpen(validationTarget, options))) {\n                    return false;\n                }\n            }\n            // check with contributed openers\n            for (const opener of this._openers) {\n                const handled = yield opener.open(target, options);\n                if (handled) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n    resolveExternalUri(resource, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const resolver of this._resolvers) {\n                try {\n                    const result = yield resolver.resolveExternalUri(resource, options);\n                    if (result) {\n                        if (!this._resolvedUriTargets.has(result.resolved)) {\n                            this._resolvedUriTargets.set(result.resolved, resource);\n                        }\n                        return result;\n                    }\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n            throw new Error('Could not resolve external URI: ' + resource.toString());\n        });\n    }\n    _doOpenExternal(resource, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //todo@jrieken IExternalUriResolver should support `uri: URI | string`\n            const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n            let externalUri;\n            try {\n                externalUri = (yield this.resolveExternalUri(uri, options)).resolved;\n            }\n            catch (_a) {\n                externalUri = uri;\n            }\n            let href;\n            if (typeof resource === 'string' && uri.toString() === externalUri.toString()) {\n                // open the url-string AS IS\n                href = resource;\n            }\n            else {\n                // open URI using the toString(noEncode)+encodeURI-trick\n                href = encodeURI(externalUri.toString(true));\n            }\n            if (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) {\n                const preferredOpenerId = typeof (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) === 'string' ? options === null || options === void 0 ? void 0 : options.allowContributedOpeners : undefined;\n                for (const opener of this._externalOpeners) {\n                    const didOpen = yield opener.openExternal(href, {\n                        sourceUri: uri,\n                        preferredOpenerId,\n                    }, CancellationToken.None);\n                    if (didOpen) {\n                        return true;\n                    }\n                }\n            }\n            return this._defaultExternalOpener.openExternal(href, { sourceUri: uri }, CancellationToken.None);\n        });\n    }\n    dispose() {\n        this._validators.clear();\n    }\n};\nOpenerService = __decorate([\n    __param(0, ICodeEditorService),\n    __param(1, ICommandService)\n], OpenerService);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getAllMethodNames } from '../../../base/common/objects.js';\nimport { EditorWorkerClient } from './editorWorkerService.js';\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker(modelService, languageConfigurationService, opts) {\n    return new MonacoWebWorkerImpl(modelService, languageConfigurationService, opts);\n}\nclass MonacoWebWorkerImpl extends EditorWorkerClient {\n    constructor(modelService, languageConfigurationService, opts) {\n        super(modelService, opts.keepIdleModels || false, opts.label, languageConfigurationService);\n        this._foreignModuleId = opts.moduleId;\n        this._foreignModuleCreateData = opts.createData || null;\n        this._foreignModuleHost = opts.host || null;\n        this._foreignProxy = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\n            return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\n        }\n        try {\n            return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _getForeignProxy() {\n        if (!this._foreignProxy) {\n            this._foreignProxy = this._getProxy().then((proxy) => {\n                const foreignHostMethods = this._foreignModuleHost ? getAllMethodNames(this._foreignModuleHost) : [];\n                return proxy.loadForeignModule(this._foreignModuleId, this._foreignModuleCreateData, foreignHostMethods).then((foreignMethods) => {\n                    this._foreignModuleCreateData = null;\n                    const proxyMethodRequest = (method, args) => {\n                        return proxy.fmr(method, args);\n                    };\n                    const createProxyMethod = (method, proxyMethodRequest) => {\n                        return function () {\n                            const args = Array.prototype.slice.call(arguments, 0);\n                            return proxyMethodRequest(method, args);\n                        };\n                    };\n                    const foreignProxy = {};\n                    for (const foreignMethod of foreignMethods) {\n                        foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\n                    }\n                    return foreignProxy;\n                });\n            });\n        }\n        return this._foreignProxy;\n    }\n    getProxy() {\n        return this._getForeignProxy();\n    }\n    withSyncedResources(resources) {\n        return this._withSyncedResources(resources).then(_ => this.getProxy());\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n    static capture(editor) {\n        if (editor.getScrollTop() === 0 || editor.hasPendingScrollAnimation()) {\n            // Never mess with the scroll top if the editor is at the top of the file or if there is a pending scroll animation\n            return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), null, 0, null);\n        }\n        let visiblePosition = null;\n        let visiblePositionScrollDelta = 0;\n        const visibleRanges = editor.getVisibleRanges();\n        if (visibleRanges.length > 0) {\n            visiblePosition = visibleRanges[0].getStartPosition();\n            const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n            visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n        }\n        return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n    }\n    constructor(_initialScrollTop, _initialContentHeight, _visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n        this._initialScrollTop = _initialScrollTop;\n        this._initialContentHeight = _initialContentHeight;\n        this._visiblePosition = _visiblePosition;\n        this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n        this._cursorPosition = _cursorPosition;\n    }\n    restore(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        if (this._visiblePosition) {\n            const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n            editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n        }\n    }\n    restoreRelativeVerticalPositionOfCursor(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        const currentCursorPosition = editor.getPosition();\n        if (!this._cursorPosition || !currentCursorPosition) {\n            return;\n        }\n        const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n        editor.setScrollTop(editor.getScrollTop() + offset);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewContentWidgets extends ViewPart {\n    constructor(context, viewDomNode) {\n        super(context);\n        this._viewDomNode = viewDomNode;\n        this._widgets = {};\n        this.domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.domNode, 1 /* PartFingerprint.ContentWidgets */);\n        this.domNode.setClassName('contentWidgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.overflowingContentWidgetsDomNode, 2 /* PartFingerprint.OverflowingContentWidgets */);\n        this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLineMappingChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesDeleted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesInserted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _updateAnchorsViewPositions() {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].updateAnchorViewPosition();\n        }\n    }\n    addWidget(_widget) {\n        const myWidget = new Widget(this._context, this._viewDomNode, _widget);\n        this._widgets[myWidget.id] = myWidget;\n        if (myWidget.allowEditorOverflow) {\n            this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n        }\n        else {\n            this.domNode.appendChild(myWidget.domNode);\n        }\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, primaryAnchor, secondaryAnchor, preference, affinity) {\n        const myWidget = this._widgets[widget.getId()];\n        myWidget.setPosition(primaryAnchor, secondaryAnchor, preference, affinity);\n        this.setShouldRender();\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const myWidget = this._widgets[widgetId];\n            delete this._widgets[widgetId];\n            const domNode = myWidget.domNode.domNode;\n            domNode.parentNode.removeChild(domNode);\n            domNode.removeAttribute('monaco-visible-content-widget');\n            this.setShouldRender();\n        }\n    }\n    shouldSuppressMouseDownOnWidget(widgetId) {\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            return this._widgets[widgetId].suppressMouseDown;\n        }\n        return false;\n    }\n    onBeforeRender(viewportData) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onBeforeRender(viewportData);\n        }\n    }\n    prepareRender(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].render(ctx);\n        }\n    }\n}\nclass Widget {\n    constructor(context, viewDomNode, actual) {\n        this._primaryAnchor = new PositionPair(null, null);\n        this._secondaryAnchor = new PositionPair(null, null);\n        this._context = context;\n        this._viewDomNode = viewDomNode;\n        this._actual = actual;\n        this.domNode = createFastDomNode(this._actual.getDomNode());\n        this.id = this._actual.getId();\n        this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n        this.suppressMouseDown = this._actual.suppressMouseDown || false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._fixedOverflowWidgets = options.get(40 /* EditorOption.fixedOverflowWidgets */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._affinity = null;\n        this._preference = [];\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n        this._maxWidth = this._getMaxWidth();\n        this._isVisible = false;\n        this._renderData = null;\n        this.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n        this.domNode.setDisplay('none');\n        this.domNode.setVisibility('hidden');\n        this.domNode.setAttribute('widgetId', this.id);\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        if (e.hasChanged(140 /* EditorOption.layoutInfo */)) {\n            const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n            this._contentLeft = layoutInfo.contentLeft;\n            this._contentWidth = layoutInfo.contentWidth;\n            this._maxWidth = this._getMaxWidth();\n        }\n    }\n    updateAnchorViewPosition() {\n        this._setPosition(this._affinity, this._primaryAnchor.modelPosition, this._secondaryAnchor.modelPosition);\n    }\n    _setPosition(affinity, primaryAnchor, secondaryAnchor) {\n        this._affinity = affinity;\n        this._primaryAnchor = getValidPositionPair(primaryAnchor, this._context.viewModel, this._affinity);\n        this._secondaryAnchor = getValidPositionPair(secondaryAnchor, this._context.viewModel, this._affinity);\n        function getValidPositionPair(position, viewModel, affinity) {\n            if (!position) {\n                return new PositionPair(null, null);\n            }\n            // Do not trust that widgets give a valid position\n            const validModelPosition = viewModel.model.validatePosition(position);\n            if (viewModel.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition, affinity !== null && affinity !== void 0 ? affinity : undefined);\n                return new PositionPair(position, viewPosition);\n            }\n            return new PositionPair(position, null);\n        }\n    }\n    _getMaxWidth() {\n        return (this.allowEditorOverflow\n            ? window.innerWidth || document.documentElement.offsetWidth || document.body.offsetWidth\n            : this._contentWidth);\n    }\n    setPosition(primaryAnchor, secondaryAnchor, preference, affinity) {\n        this._setPosition(affinity, primaryAnchor, secondaryAnchor);\n        this._preference = preference;\n        if (this._primaryAnchor.viewPosition && this._preference && this._preference.length > 0) {\n            // this content widget would like to be visible if possible\n            // we change it from `display:none` to `display:block` even if it\n            // might be outside the viewport such that we can measure its size\n            // in `prepareRender`\n            this.domNode.setDisplay('block');\n        }\n        else {\n            this.domNode.setDisplay('none');\n        }\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n    }\n    _layoutBoxInViewport(anchor, width, height, ctx) {\n        // Our visible box is split horizontally by the current line => 2 boxes\n        // a) the box above the line\n        const aboveLineTop = anchor.top;\n        const heightAvailableAboveLine = aboveLineTop;\n        // b) the box under the line\n        const underLineTop = anchor.top + anchor.height;\n        const heightAvailableUnderLine = ctx.viewportHeight - underLineTop;\n        const aboveTop = aboveLineTop - height;\n        const fitsAbove = (heightAvailableAboveLine >= height);\n        const belowTop = underLineTop;\n        const fitsBelow = (heightAvailableUnderLine >= height);\n        // And its left\n        let left = anchor.left;\n        if (left + width > ctx.scrollLeft + ctx.viewportWidth) {\n            left = ctx.scrollLeft + ctx.viewportWidth - width;\n        }\n        if (left < ctx.scrollLeft) {\n            left = ctx.scrollLeft;\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _layoutHorizontalSegmentInPage(windowSize, domNodePosition, left, width) {\n        // Leave some clearance to the left/right\n        const LEFT_PADDING = 15;\n        const RIGHT_PADDING = 15;\n        // Initially, the limits are defined as the dom node limits\n        const MIN_LIMIT = Math.max(LEFT_PADDING, domNodePosition.left - width);\n        const MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width - RIGHT_PADDING);\n        let absoluteLeft = domNodePosition.left + left - window.scrollX;\n        if (absoluteLeft + width > MAX_LIMIT) {\n            const delta = absoluteLeft - (MAX_LIMIT - width);\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        if (absoluteLeft < MIN_LIMIT) {\n            const delta = absoluteLeft - MIN_LIMIT;\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        return [left, absoluteLeft];\n    }\n    _layoutBoxInPage(anchor, width, height, ctx) {\n        const aboveTop = anchor.top - height;\n        const belowTop = anchor.top + anchor.height;\n        const domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n        const absoluteAboveTop = domNodePosition.top + aboveTop - window.scrollY;\n        const absoluteBelowTop = domNodePosition.top + belowTop - window.scrollY;\n        const windowSize = dom.getClientArea(document.body);\n        const [left, absoluteAboveLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, anchor.left - ctx.scrollLeft + this._contentLeft, width);\n        // Leave some clearance to the top/bottom\n        const TOP_PADDING = 22;\n        const BOTTOM_PADDING = 22;\n        const fitsAbove = (absoluteAboveTop >= TOP_PADDING);\n        const fitsBelow = (absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING);\n        if (this._fixedOverflowWidgets) {\n            return {\n                fitsAbove,\n                aboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n                fitsBelow,\n                belowTop: absoluteBelowTop,\n                left: absoluteAboveLeft\n            };\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _prepareRenderWidgetAtExactPositionOverflowing(topLeft) {\n        return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n    }\n    /**\n     * Compute the coordinates above and below the primary and secondary anchors.\n     * The content widget *must* touch the primary anchor.\n     * The content widget should touch if possible the secondary anchor.\n     */\n    _getAnchorsCoordinates(ctx) {\n        var _a, _b;\n        const primary = getCoordinates(this._primaryAnchor.viewPosition, this._affinity, this._lineHeight);\n        const secondaryViewPosition = (((_a = this._secondaryAnchor.viewPosition) === null || _a === void 0 ? void 0 : _a.lineNumber) === ((_b = this._primaryAnchor.viewPosition) === null || _b === void 0 ? void 0 : _b.lineNumber) ? this._secondaryAnchor.viewPosition : null);\n        const secondary = getCoordinates(secondaryViewPosition, this._affinity, this._lineHeight);\n        return { primary, secondary };\n        function getCoordinates(position, affinity, lineHeight) {\n            if (!position) {\n                return null;\n            }\n            const horizontalPosition = ctx.visibleRangeForPosition(position);\n            if (!horizontalPosition) {\n                return null;\n            }\n            // Left-align widgets that should appear :before content\n            const left = (position.column === 1 && affinity === 3 /* PositionAffinity.LeftOfInjectedText */ ? 0 : horizontalPosition.left);\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.scrollTop;\n            return new AnchorCoordinate(top, left, lineHeight);\n        }\n    }\n    _reduceAnchorCoordinates(primary, secondary, width) {\n        if (!secondary) {\n            return primary;\n        }\n        const fontInfo = this._context.configuration.options.get(48 /* EditorOption.fontInfo */);\n        let left = secondary.left;\n        if (left < primary.left) {\n            left = Math.max(left, primary.left - width + fontInfo.typicalFullwidthCharacterWidth);\n        }\n        else {\n            left = Math.min(left, primary.left + width - fontInfo.typicalFullwidthCharacterWidth);\n        }\n        return new AnchorCoordinate(primary.top, left, primary.height);\n    }\n    _prepareRenderWidget(ctx) {\n        if (!this._preference || this._preference.length === 0) {\n            return null;\n        }\n        const { primary, secondary } = this._getAnchorsCoordinates(ctx);\n        if (!primary) {\n            return null;\n        }\n        if (this._cachedDomNodeOffsetWidth === -1 || this._cachedDomNodeOffsetHeight === -1) {\n            let preferredDimensions = null;\n            if (typeof this._actual.beforeRender === 'function') {\n                preferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n            }\n            if (preferredDimensions) {\n                this._cachedDomNodeOffsetWidth = preferredDimensions.width;\n                this._cachedDomNodeOffsetHeight = preferredDimensions.height;\n            }\n            else {\n                const domNode = this.domNode.domNode;\n                const clientRect = domNode.getBoundingClientRect();\n                this._cachedDomNodeOffsetWidth = Math.round(clientRect.width);\n                this._cachedDomNodeOffsetHeight = Math.round(clientRect.height);\n            }\n        }\n        const anchor = this._reduceAnchorCoordinates(primary, secondary, this._cachedDomNodeOffsetWidth);\n        let placement;\n        if (this.allowEditorOverflow) {\n            placement = this._layoutBoxInPage(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        else {\n            placement = this._layoutBoxInViewport(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        // Do two passes, first for perfect fit, second picks first option\n        for (let pass = 1; pass <= 2; pass++) {\n            for (const pref of this._preference) {\n                // placement\n                if (pref === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsAbove) {\n                        return { coordinate: new Coordinate(placement.aboveTop, placement.left), position: 1 /* ContentWidgetPositionPreference.ABOVE */ };\n                    }\n                }\n                else if (pref === 2 /* ContentWidgetPositionPreference.BELOW */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsBelow) {\n                        return { coordinate: new Coordinate(placement.belowTop, placement.left), position: 2 /* ContentWidgetPositionPreference.BELOW */ };\n                    }\n                }\n                else {\n                    if (this.allowEditorOverflow) {\n                        return { coordinate: this._prepareRenderWidgetAtExactPositionOverflowing(new Coordinate(anchor.top, anchor.left)), position: 0 /* ContentWidgetPositionPreference.EXACT */ };\n                    }\n                    else {\n                        return { coordinate: new Coordinate(anchor.top, anchor.left), position: 0 /* ContentWidgetPositionPreference.EXACT */ };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n     */\n    onBeforeRender(viewportData) {\n        if (!this._primaryAnchor.viewPosition || !this._preference) {\n            return;\n        }\n        if (this._primaryAnchor.viewPosition.lineNumber < viewportData.startLineNumber || this._primaryAnchor.viewPosition.lineNumber > viewportData.endLineNumber) {\n            // Outside of viewport\n            return;\n        }\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRenderWidget(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            // This widget should be invisible\n            if (this._isVisible) {\n                this.domNode.removeAttribute('monaco-visible-content-widget');\n                this._isVisible = false;\n                this.domNode.setVisibility('hidden');\n            }\n            if (typeof this._actual.afterRender === 'function') {\n                safeInvoke(this._actual.afterRender, this._actual, null);\n            }\n            return;\n        }\n        // This widget should be visible\n        if (this.allowEditorOverflow) {\n            this.domNode.setTop(this._renderData.coordinate.top);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        else {\n            this.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        if (!this._isVisible) {\n            this.domNode.setVisibility('inherit');\n            this.domNode.setAttribute('monaco-visible-content-widget', 'true');\n            this._isVisible = true;\n        }\n        if (typeof this._actual.afterRender === 'function') {\n            safeInvoke(this._actual.afterRender, this._actual, this._renderData.position);\n        }\n    }\n}\nclass PositionPair {\n    constructor(modelPosition, viewPosition) {\n        this.modelPosition = modelPosition;\n        this.viewPosition = viewPosition;\n    }\n}\nclass Coordinate {\n    constructor(top, left) {\n        this.top = top;\n        this.left = left;\n        this._coordinateBrand = undefined;\n    }\n}\nclass AnchorCoordinate {\n    constructor(top, left, height) {\n        this.top = top;\n        this.left = left;\n        this.height = height;\n        this._anchorCoordinateBrand = undefined;\n    }\n}\nfunction safeInvoke(fn, thisArg, ...args) {\n    try {\n        return fn.call(thisArg, ...args);\n    }\n    catch (_a) {\n        // ignore\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nexport class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._renderLineHighlight = options.get(92 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(93 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._selectionIsEmpty = true;\n        this._focused = false;\n        this._cursorLineNumbers = [1];\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderData = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    _readFromSelections() {\n        let hasChanged = false;\n        const cursorsLineNumbers = this._selections.map(s => s.positionLineNumber);\n        cursorsLineNumbers.sort((a, b) => a - b);\n        if (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n            this._cursorLineNumbers = cursorsLineNumbers;\n            hasChanged = true;\n        }\n        const selectionIsEmpty = this._selections.every(s => s.isEmpty());\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            hasChanged = true;\n        }\n        return hasChanged;\n    }\n    // --- begin event handlers\n    onThemeChanged(e) {\n        return this._readFromSelections();\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._renderLineHighlight = options.get(92 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(93 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return this._readFromSelections();\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollWidthChanged || e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        if (!this._renderLineHighlightOnlyWhenFocus) {\n            return false;\n        }\n        this._focused = e.isFocused;\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (!this._shouldRenderThis()) {\n            this._renderData = null;\n            return;\n        }\n        const renderedLine = this._renderOne(ctx);\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const len = this._cursorLineNumbers.length;\n        let index = 0;\n        const renderData = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            while (index < len && this._cursorLineNumbers[index] < lineNumber) {\n                index++;\n            }\n            if (index < len && this._cursorLineNumbers[index] === lineNumber) {\n                renderData[lineIndex] = renderedLine;\n            }\n            else {\n                renderData[lineIndex] = '';\n            }\n        }\n        this._renderData = renderData;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderData) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex >= this._renderData.length) {\n            return '';\n        }\n        return this._renderData[lineIndex];\n    }\n    _shouldRenderInMargin() {\n        return ((this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n    _shouldRenderInContent() {\n        return ((this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n            && this._selectionIsEmpty\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n}\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx) {\n        const className = 'current-line' + (this._shouldRenderOther() ? ' current-line-both' : '');\n        return `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px; height:${this._lineHeight}px;\"></div>`;\n    }\n    _shouldRenderThis() {\n        return this._shouldRenderInContent();\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInMargin();\n    }\n}\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx) {\n        const className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '');\n        return `<div class=\"${className}\" style=\"width:${this._contentLeft}px; height:${this._lineHeight}px;\"></div>`;\n    }\n    _shouldRenderThis() {\n        return true;\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInContent();\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    if (lineHighlight) {\n        collector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\n        collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\n    }\n    if (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n        const lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n        if (lineHighlightBorder) {\n            collector.addRule(`.monaco-editor .view-overlays .current-line { border: 2px solid ${lineHighlightBorder}; }`);\n            collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border: 2px solid ${lineHighlightBorder}; }`);\n            if (isHighContrast(theme.type)) {\n                collector.addRule(`.monaco-editor .view-overlays .current-line { border-width: 1px; }`);\n                collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border-width: 1px; }`);\n            }\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './decorations.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Range } from '../../../common/core/range.js';\nimport { HorizontalRange } from '../../view/renderingContext.js';\nexport class DecorationsOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = options.get(48 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = options.get(48 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        const _decorations = ctx.getDecorationsInViewport();\n        // Keep only decorations with `className`\n        let decorations = [];\n        let decorationsLen = 0;\n        for (let i = 0, len = _decorations.length; i < len; i++) {\n            const d = _decorations[i];\n            if (d.options.className) {\n                decorations[decorationsLen++] = d;\n            }\n        }\n        // Sort decorations for consistent render output\n        decorations = decorations.sort((a, b) => {\n            if (a.options.zIndex < b.options.zIndex) {\n                return -1;\n            }\n            if (a.options.zIndex > b.options.zIndex) {\n                return 1;\n            }\n            const aClassName = a.options.className;\n            const bClassName = b.options.className;\n            if (aClassName < bClassName) {\n                return -1;\n            }\n            if (aClassName > bClassName) {\n                return 1;\n            }\n            return Range.compareRangesUsingStarts(a.range, b.range);\n        });\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = '';\n        }\n        // Render first whole line decorations and then regular decorations\n        this._renderWholeLineDecorations(ctx, decorations, output);\n        this._renderNormalDecorations(ctx, decorations, output);\n        this._renderResult = output;\n    }\n    _renderWholeLineDecorations(ctx, decorations, output) {\n        const lineHeight = String(this._lineHeight);\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (!d.options.isWholeLine) {\n                continue;\n            }\n            const decorationOutput = ('<div class=\"cdr '\n                + d.options.className\n                + '\" style=\"left:0;width:100%;height:'\n                + lineHeight\n                + 'px;\"></div>');\n            const startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n            const endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n            for (let j = startLineNumber; j <= endLineNumber; j++) {\n                const lineIndex = j - visibleStartLineNumber;\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    _renderNormalDecorations(ctx, decorations, output) {\n        const lineHeight = String(this._lineHeight);\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        let prevClassName = null;\n        let prevShowIfCollapsed = false;\n        let prevRange = null;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (d.options.isWholeLine) {\n                continue;\n            }\n            const className = d.options.className;\n            const showIfCollapsed = Boolean(d.options.showIfCollapsed);\n            let range = d.range;\n            if (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n                range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.viewModel.getLineMaxColumn(range.endLineNumber - 1));\n            }\n            if (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange, range)) {\n                // merge into previous decoration\n                prevRange = Range.plusRange(prevRange, range);\n                continue;\n            }\n            // flush previous decoration\n            if (prevClassName !== null) {\n                this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n            }\n            prevClassName = className;\n            prevShowIfCollapsed = showIfCollapsed;\n            prevRange = range;\n        }\n        if (prevClassName !== null) {\n            this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n        }\n    }\n    _renderNormalDecoration(ctx, range, className, showIfCollapsed, lineHeight, visibleStartLineNumber, output) {\n        const linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/ className === 'findMatch');\n        if (!linesVisibleRanges) {\n            return;\n        }\n        for (let j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n            const lineVisibleRanges = linesVisibleRanges[j];\n            if (lineVisibleRanges.outsideRenderedLine) {\n                continue;\n            }\n            const lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n            if (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n                const singleVisibleRange = lineVisibleRanges.ranges[0];\n                if (singleVisibleRange.width < this._typicalHalfwidthCharacterWidth) {\n                    // collapsed/very small range case => make the decoration visible by expanding its width\n                    // expand its size on both sides (both to the left and to the right, keeping it centered)\n                    const center = Math.round(singleVisibleRange.left + singleVisibleRange.width / 2);\n                    const left = Math.max(0, Math.round(center - this._typicalHalfwidthCharacterWidth / 2));\n                    lineVisibleRanges.ranges[0] = new HorizontalRange(left, this._typicalHalfwidthCharacterWidth);\n                }\n            }\n            for (let k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n                const visibleRange = lineVisibleRanges.ranges[k];\n                const decorationOutput = ('<div class=\"cdr '\n                    + className\n                    + '\" style=\"left:'\n                    + String(visibleRange.left)\n                    + 'px;width:'\n                    + String(visibleRange.width)\n                    + 'px;height:'\n                    + lineHeight\n                    + 'px;\"></div>');\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nexport class EditorScrollbar extends ViewPart {\n    constructor(context, linesContent, viewDomNode, overflowGuardDomNode) {\n        super(context);\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(99 /* EditorOption.scrollbar */);\n        const mouseWheelScrollSensitivity = options.get(72 /* EditorOption.mouseWheelScrollSensitivity */);\n        const fastScrollSensitivity = options.get(38 /* EditorOption.fastScrollSensitivity */);\n        const scrollPredominantAxis = options.get(102 /* EditorOption.scrollPredominantAxis */);\n        const scrollbarOptions = {\n            listenOnDomNode: viewDomNode.domNode,\n            className: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n            useShadows: false,\n            lazyRender: true,\n            vertical: scrollbar.vertical,\n            horizontal: scrollbar.horizontal,\n            verticalHasArrows: scrollbar.verticalHasArrows,\n            horizontalHasArrows: scrollbar.horizontalHasArrows,\n            verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n            verticalSliderSize: scrollbar.verticalSliderSize,\n            horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n            horizontalSliderSize: scrollbar.horizontalSliderSize,\n            handleMouseWheel: scrollbar.handleMouseWheel,\n            alwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n            arrowSize: scrollbar.arrowSize,\n            mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n            fastScrollSensitivity: fastScrollSensitivity,\n            scrollPredominantAxis: scrollPredominantAxis,\n            scrollByPage: scrollbar.scrollByPage,\n        };\n        this.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n        PartFingerprints.write(this.scrollbar.getDomNode(), 5 /* PartFingerprint.ScrollableElement */);\n        this.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n        this.scrollbarDomNode.setPosition('absolute');\n        this._setLayout();\n        // When having a zone widget that calls .focus() on one of its dom elements,\n        // the browser will try desperately to reveal that dom node, unexpectedly\n        // changing the .scrollTop of this.linesContent\n        const onBrowserDesperateReveal = (domNode, lookAtScrollTop, lookAtScrollLeft) => {\n            const newScrollPosition = {};\n            if (lookAtScrollTop) {\n                const deltaTop = domNode.scrollTop;\n                if (deltaTop) {\n                    newScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n                    domNode.scrollTop = 0;\n                }\n            }\n            if (lookAtScrollLeft) {\n                const deltaLeft = domNode.scrollLeft;\n                if (deltaLeft) {\n                    newScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n                    domNode.scrollLeft = 0;\n                }\n            }\n            this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, 1 /* ScrollType.Immediate */);\n        };\n        // I've seen this happen both on the view dom node & on the lines content dom node.\n        this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n        this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n        this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n        this._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    _setLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n        const minimap = options.get(70 /* EditorOption.minimap */);\n        const side = minimap.side;\n        if (side === 'right') {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n        }\n        else {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n        }\n        this.scrollbarDomNode.setHeight(layoutInfo.height);\n    }\n    getOverviewRulerLayoutInfo() {\n        return this.scrollbar.getOverviewRulerLayoutInfo();\n    }\n    getDomNode() {\n        return this.scrollbarDomNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(99 /* EditorOption.scrollbar */)\n            || e.hasChanged(72 /* EditorOption.mouseWheelScrollSensitivity */)\n            || e.hasChanged(38 /* EditorOption.fastScrollSensitivity */)) {\n            const options = this._context.configuration.options;\n            const scrollbar = options.get(99 /* EditorOption.scrollbar */);\n            const mouseWheelScrollSensitivity = options.get(72 /* EditorOption.mouseWheelScrollSensitivity */);\n            const fastScrollSensitivity = options.get(38 /* EditorOption.fastScrollSensitivity */);\n            const scrollPredominantAxis = options.get(102 /* EditorOption.scrollPredominantAxis */);\n            const newOpts = {\n                vertical: scrollbar.vertical,\n                horizontal: scrollbar.horizontal,\n                verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n                horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n                scrollByPage: scrollbar.scrollByPage,\n                handleMouseWheel: scrollbar.handleMouseWheel,\n                mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n                fastScrollSensitivity: fastScrollSensitivity,\n                scrollPredominantAxis: scrollPredominantAxis\n            };\n            this.scrollbar.updateOptions(newOpts);\n        }\n        if (e.hasChanged(140 /* EditorOption.layoutInfo */)) {\n            this._setLayout();\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onThemeChanged(e) {\n        this.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to do\n    }\n    render(ctx) {\n        this.scrollbar.renderNow();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './glyphMargin.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nexport class DecorationToRender {\n    constructor(startLineNumber, endLineNumber, className, zIndex, decorationLane) {\n        this._decorationToRenderBrand = undefined;\n        this.startLineNumber = +startLineNumber;\n        this.endLineNumber = +endLineNumber;\n        this.className = String(className);\n        this.zIndex = zIndex !== null && zIndex !== void 0 ? zIndex : 0;\n        this.decorationLane = decorationLane !== null && decorationLane !== void 0 ? decorationLane : 1;\n    }\n}\nexport class RenderedDecoration {\n    constructor(className, zIndex) {\n        this.className = className;\n        this.zIndex = zIndex;\n    }\n}\nexport class LineRenderedDecorations {\n    constructor() {\n        this.lanes = [];\n    }\n    add(lane, decoration) {\n        while (lane >= this.lanes.length) {\n            this.lanes.push([]);\n        }\n        this.lanes[lane].push(decoration);\n    }\n    getLaneDecorations(laneIndex) {\n        if (laneIndex < this.lanes.length) {\n            return this.lanes[laneIndex];\n        }\n        return [];\n    }\n    isEmpty() {\n        for (const lane of this.lanes) {\n            if (lane.length > 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexport class DedupOverlay extends DynamicViewOverlay {\n    _render(visibleStartLineNumber, visibleEndLineNumber, decorations, decorationLaneCount) {\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = new LineRenderedDecorations();\n        }\n        if (decorations.length === 0) {\n            return output;\n        }\n        decorations.sort((a, b) => {\n            if (a.className === b.className) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.endLineNumber - b.endLineNumber;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return (a.className < b.className ? -1 : 1);\n        });\n        let prevClassName = null;\n        let prevEndLineIndex = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const className = d.className;\n            const zIndex = d.zIndex;\n            let startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n            const endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n            const lane = Math.min(d.decorationLane, decorationLaneCount);\n            if (prevClassName === className) {\n                startLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n                prevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n            }\n            else {\n                prevClassName = className;\n                prevEndLineIndex = endLineIndex;\n            }\n            for (let i = startLineIndex; i <= prevEndLineIndex; i++) {\n                output[i].add(lane, new RenderedDecoration(className, zIndex));\n            }\n        }\n        return output;\n    }\n}\nexport class GlyphMarginOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(55 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(55 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        var _a;\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const glyphMarginClassName = d.options.glyphMarginClassName;\n            const zIndex = d.options.zIndex;\n            const lane = (_a = d.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position;\n            if (glyphMarginClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, glyphMarginClassName, zIndex, lane);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        if (!this._glyphMargin) {\n            this._renderResult = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const decorationsToRender = this._getDecorations(ctx);\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, decorationsToRender, this._glyphMarginDecorationLaneCount);\n        const lineHeight = this._lineHeight.toString();\n        const width = (Math.round(this._glyphMarginWidth / this._glyphMarginDecorationLaneCount)).toString();\n        const common = '\" style=\"width:' + width + 'px' + ';height:' + lineHeight + 'px;';\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const renderInfo = toRender[lineIndex];\n            if (renderInfo.isEmpty()) {\n                output[lineIndex] = '';\n            }\n            else {\n                let css = '';\n                for (let lane = 1; lane <= this._glyphMarginDecorationLaneCount; lane += 1) {\n                    const decorations = renderInfo.getLaneDecorations(lane);\n                    if (decorations.length === 0) {\n                        continue;\n                    }\n                    decorations.sort((a, b) => b.zIndex - a.zIndex);\n                    // Render winning decorations with the same zIndex together\n                    const winningDecoration = decorations[0];\n                    const winningDecorationClassNames = [winningDecoration.className];\n                    for (let i = 1; i < decorations.length; i += 1) {\n                        const decoration = decorations[i];\n                        if (decoration.zIndex !== winningDecoration.zIndex) {\n                            break;\n                        }\n                        winningDecorationClassNames.push(decoration.className);\n                    }\n                    const left = (this._glyphMarginLeft + (lane - 1) * this._lineHeight).toString();\n                    css += ('<div class=\"cgmr codicon '\n                        + winningDecorationClassNames.join(' ') // TODO@joyceerhl Implement overflow for remaining decorations\n                        + common\n                        + 'left:' + left + 'px;\"></div>');\n                }\n                output[lineIndex] = css;\n            }\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6 } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._primaryPosition = null;\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(141 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(14 /* EditorOption.guides */);\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(141 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(14 /* EditorOption.guides */);\n        return true;\n    }\n    onCursorStateChanged(e) {\n        var _a;\n        const selection = e.selections[0];\n        const newPosition = selection.getPosition();\n        if (!((_a = this._primaryPosition) === null || _a === void 0 ? void 0 : _a.equals(newPosition))) {\n            this._primaryPosition = newPosition;\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged; // || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLanguageConfigurationChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        var _a, _b, _c, _d;\n        if (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n            this._renderResult = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const scrollWidth = ctx.scrollWidth;\n        const lineHeight = this._lineHeight;\n        const activeCursorPosition = this._primaryPosition;\n        const indents = this.getGuidesByLine(visibleStartLineNumber, Math.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()), activeCursorPosition);\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const indent = indents[lineIndex];\n            let result = '';\n            const leftOffset = (_b = (_a = ctx.visibleRangeForPosition(new Position(lineNumber, 1))) === null || _a === void 0 ? void 0 : _a.left) !== null && _b !== void 0 ? _b : 0;\n            for (const guide of indent) {\n                const left = guide.column === -1\n                    ? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n                    : ctx.visibleRangeForPosition(new Position(lineNumber, guide.column)).left;\n                if (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n                    break;\n                }\n                const className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n                const width = guide.horizontalLine\n                    ? ((_d = (_c = ctx.visibleRangeForPosition(new Position(lineNumber, guide.horizontalLine.endColumn))) === null || _c === void 0 ? void 0 : _c.left) !== null && _d !== void 0 ? _d : (left + this._spaceWidth)) - left\n                    : this._spaceWidth;\n                result += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;height:${lineHeight}px;width:${width}px\"></div>`;\n            }\n            output[lineIndex] = result;\n        }\n        this._renderResult = output;\n    }\n    getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition) {\n        const bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n            ? this._context.viewModel.getBracketGuidesInRangeByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition, {\n                highlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n                horizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n                    ? HorizontalGuidesState.Enabled\n                    : this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n                        ? HorizontalGuidesState.EnabledForActive\n                        : HorizontalGuidesState.Disabled,\n                includeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n            })\n            : null;\n        const indentGuides = this._bracketPairGuideOptions.indentation\n            ? this._context.viewModel.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber)\n            : null;\n        let activeIndentStartLineNumber = 0;\n        let activeIndentEndLineNumber = 0;\n        let activeIndentLevel = 0;\n        if (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n            const activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n            activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n            activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n            activeIndentLevel = activeIndentInfo.indent;\n        }\n        const { indentSize } = this._context.viewModel.model.getOptions();\n        const result = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineGuides = new Array();\n            result.push(lineGuides);\n            const bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n            const bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n            const indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n            for (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n                const indentGuide = (indentLvl - 1) * indentSize + 1;\n                const isActive = \n                // Disable active indent guide if there are bracket guides.\n                (this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n                    activeIndentStartLineNumber <= lineNumber &&\n                    lineNumber <= activeIndentEndLineNumber &&\n                    indentLvl === activeIndentLevel;\n                lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n                const peeked = bracketGuidesInLineQueue.peek();\n                if (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n                    lineGuides.push(new IndentGuide(indentGuide, -1, isActive ? 'core-guide-indent-active' : 'core-guide-indent', null, -1, -1));\n                }\n            }\n            lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n        }\n        return result;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nfunction transparentToUndefined(color) {\n    if (color && color.isTransparent()) {\n        return undefined;\n    }\n    return color;\n}\nregisterThemingParticipant((theme, collector) => {\n    const colors = [\n        { bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n        { bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n        { bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n        { bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n        { bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n        { bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n    ];\n    const colorProvider = new BracketPairGuidesClassNames();\n    const colorValues = colors\n        .map(c => {\n        var _a, _b;\n        const bracketColor = theme.getColor(c.bracketColor);\n        const guideColor = theme.getColor(c.guideColor);\n        const guideColorActive = theme.getColor(c.guideColorActive);\n        const effectiveGuideColor = transparentToUndefined((_a = transparentToUndefined(guideColor)) !== null && _a !== void 0 ? _a : bracketColor === null || bracketColor === void 0 ? void 0 : bracketColor.transparent(0.3));\n        const effectiveGuideColorActive = transparentToUndefined((_b = transparentToUndefined(guideColorActive)) !== null && _b !== void 0 ? _b : bracketColor);\n        if (!effectiveGuideColor || !effectiveGuideColorActive) {\n            return undefined;\n        }\n        return {\n            guideColor: effectiveGuideColor,\n            guideColorActive: effectiveGuideColorActive,\n        };\n    })\n        .filter(isDefined);\n    if (colorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = colorValues[level % colorValues.length];\n            collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class DomReadingContext {\n    get didDomLayout() {\n        return this._didDomLayout;\n    }\n    readClientRect() {\n        if (!this._clientRectRead) {\n            this._clientRectRead = true;\n            const rect = this._domNode.getBoundingClientRect();\n            this.markDidDomLayout();\n            this._clientRectDeltaLeft = rect.left;\n            this._clientRectScale = rect.width / this._domNode.offsetWidth;\n        }\n    }\n    get clientRectDeltaLeft() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectDeltaLeft;\n    }\n    get clientRectScale() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectScale;\n    }\n    constructor(_domNode, endNode) {\n        this._domNode = _domNode;\n        this.endNode = endNode;\n        this._didDomLayout = false;\n        this._clientRectDeltaLeft = 0;\n        this._clientRectScale = 1;\n        this._clientRectRead = false;\n    }\n    markDidDomLayout() {\n        this._didDomLayout = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewLines.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { VisibleLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { ViewLine, ViewLineOptions } from './viewLine.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { LineVisibleRanges, HorizontalPosition, HorizontalRange } from '../../view/renderingContext.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { DomReadingContext } from './domReadingContext.js';\nclass LastRenderedData {\n    constructor() {\n        this._currentVisibleRange = new Range(1, 1, 1, 1);\n    }\n    getCurrentVisibleRange() {\n        return this._currentVisibleRange;\n    }\n    setCurrentVisibleRange(currentVisibleRange) {\n        this._currentVisibleRange = currentVisibleRange;\n    }\n}\nclass HorizontalRevealRangeRequest {\n    constructor(minimalReveal, lineNumber, startColumn, endColumn, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.lineNumber = lineNumber;\n        this.startColumn = startColumn;\n        this.endColumn = endColumn;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'range';\n        this.minLineNumber = lineNumber;\n        this.maxLineNumber = lineNumber;\n    }\n}\nclass HorizontalRevealSelectionsRequest {\n    constructor(minimalReveal, selections, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.selections = selections;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'selections';\n        let minLineNumber = selections[0].startLineNumber;\n        let maxLineNumber = selections[0].endLineNumber;\n        for (let i = 1, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n            maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n        }\n        this.minLineNumber = minLineNumber;\n        this.maxLineNumber = maxLineNumber;\n    }\n}\nexport class ViewLines extends ViewPart {\n    constructor(context, linesContent) {\n        super(context);\n        this._linesContent = linesContent;\n        this._textRangeRestingSpot = document.createElement('div');\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        const conf = this._context.configuration;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(141 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(96 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(27 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(28 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(30 /* EditorOption.disableLayerHinting */);\n        this._viewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        PartFingerprints.write(this.domNode, 7 /* PartFingerprint.ViewLines */);\n        this.domNode.setClassName(`view-lines ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        applyFontInfo(this.domNode, fontInfo);\n        // --- width & height\n        this._maxLineWidth = 0;\n        this._asyncUpdateLineWidths = new RunOnceScheduler(() => {\n            this._updateLineWidthsSlow();\n        }, 200);\n        this._asyncCheckMonospaceFontAssumptions = new RunOnceScheduler(() => {\n            this._checkMonospaceFontAssumptions();\n        }, 2000);\n        this._lastRenderedData = new LastRenderedData();\n        this._horizontalRevealRequest = null;\n        // sticky scroll widget\n        this._stickyScrollEnabled = options.get(111 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(111 /* EditorOption.stickyScroll */).maxLineCount;\n    }\n    dispose() {\n        this._asyncUpdateLineWidths.dispose();\n        this._asyncCheckMonospaceFontAssumptions.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewLine(this._viewLineOptions);\n    }\n    // ---- end IVisibleLinesHost\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        if (e.hasChanged(141 /* EditorOption.wrappingInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(141 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(96 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(27 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(28 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(30 /* EditorOption.disableLayerHinting */);\n        // sticky scroll\n        this._stickyScrollEnabled = options.get(111 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(111 /* EditorOption.stickyScroll */).maxLineCount;\n        applyFontInfo(this.domNode, fontInfo);\n        this._onOptionsMaybeChanged();\n        if (e.hasChanged(140 /* EditorOption.layoutInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        return true;\n    }\n    _onOptionsMaybeChanged() {\n        const conf = this._context.configuration;\n        const newViewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        if (!this._viewLineOptions.equals(newViewLineOptions)) {\n            this._viewLineOptions = newViewLineOptions;\n            const startLineNumber = this._visibleLines.getStartLineNumber();\n            const endLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                const line = this._visibleLines.getVisibleLine(lineNumber);\n                line.onOptionsChanged(this._viewLineOptions);\n            }\n            return true;\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let r = false;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            r = this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged() || r;\n        }\n        return r;\n    }\n    onDecorationsChanged(e) {\n        if (true /*e.inlineDecorationsChanged*/) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                this._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged();\n            }\n        }\n        return true;\n    }\n    onFlushed(e) {\n        const shouldRender = this._visibleLines.onFlushed(e);\n        this._maxLineWidth = 0;\n        return shouldRender;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onRevealRangeRequest(e) {\n        // Using the future viewport here in order to handle multiple\n        // incoming reveal range requests that might all desire to be animated\n        const desiredScrollTop = this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(), e.source, e.minimalReveal, e.range, e.selections, e.verticalType);\n        if (desiredScrollTop === -1) {\n            // marker to abort the reveal range request\n            return false;\n        }\n        // validate the new desired scroll top\n        let newScrollPosition = this._context.viewLayout.validateScrollPosition({ scrollTop: desiredScrollTop });\n        if (e.revealHorizontal) {\n            if (e.range && e.range.startLineNumber !== e.range.endLineNumber) {\n                // Two or more lines? => scroll to base (That's how you see most of the two lines)\n                newScrollPosition = {\n                    scrollTop: newScrollPosition.scrollTop,\n                    scrollLeft: 0\n                };\n            }\n            else if (e.range) {\n                // We don't necessarily know the horizontal offset of this range since the line might not be in the view...\n                this._horizontalRevealRequest = new HorizontalRevealRangeRequest(e.minimalReveal, e.range.startLineNumber, e.range.startColumn, e.range.endColumn, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n            else if (e.selections && e.selections.length > 0) {\n                this._horizontalRevealRequest = new HorizontalRevealSelectionsRequest(e.minimalReveal, e.selections, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n        }\n        else {\n            this._horizontalRevealRequest = null;\n        }\n        const scrollTopDelta = Math.abs(this._context.viewLayout.getCurrentScrollTop() - newScrollPosition.scrollTop);\n        const scrollType = (scrollTopDelta <= this._lineHeight ? 1 /* ScrollType.Immediate */ : e.scrollType);\n        this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, scrollType);\n        return true;\n    }\n    onScrollChanged(e) {\n        if (this._horizontalRevealRequest && e.scrollLeftChanged) {\n            // cancel any outstanding horizontal reveal request if someone else scrolls horizontally.\n            this._horizontalRevealRequest = null;\n        }\n        if (this._horizontalRevealRequest && e.scrollTopChanged) {\n            const min = Math.min(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            const max = Math.max(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            if (e.scrollTop < min || e.scrollTop > max) {\n                // cancel any outstanding horizontal reveal request if someone else scrolls vertically.\n                this._horizontalRevealRequest = null;\n            }\n        }\n        this.domNode.setWidth(e.scrollWidth);\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        return this._visibleLines.onZonesChanged(e);\n    }\n    onThemeChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    // ---- end view event handlers\n    // ----------- HELPERS FOR OTHERS\n    getPositionFromDOMInfo(spanNode, offset) {\n        const viewLineDomNode = this._getViewLineDomNode(spanNode);\n        if (viewLineDomNode === null) {\n            // Couldn't find view line node\n            return null;\n        }\n        const lineNumber = this._getLineNumberFor(viewLineDomNode);\n        if (lineNumber === -1) {\n            // Couldn't find view line node\n            return null;\n        }\n        if (lineNumber < 1 || lineNumber > this._context.viewModel.getLineCount()) {\n            // lineNumber is outside range\n            return null;\n        }\n        if (this._context.viewModel.getLineMaxColumn(lineNumber) === 1) {\n            // Line is empty\n            return new Position(lineNumber, 1);\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return null;\n        }\n        let column = this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(lineNumber, spanNode, offset);\n        const minColumn = this._context.viewModel.getLineMinColumn(lineNumber);\n        if (column < minColumn) {\n            column = minColumn;\n        }\n        return new Position(lineNumber, column);\n    }\n    _getViewLineDomNode(node) {\n        while (node && node.nodeType === 1) {\n            if (node.className === ViewLine.CLASS_NAME) {\n                return node;\n            }\n            node = node.parentElement;\n        }\n        return null;\n    }\n    /**\n     * @returns the line number of this view line dom node.\n     */\n    _getLineNumberFor(domNode) {\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            if (domNode === line.getDomNode()) {\n                return lineNumber;\n            }\n        }\n        return -1;\n    }\n    getLineWidth(lineNumber) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return -1;\n        }\n        const context = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getWidth(context);\n        this._updateLineWidthsSlowIfDomDidLayout(context);\n        return result;\n    }\n    linesVisibleRangesForRange(_range, includeNewLines) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        const originalEndLineNumber = _range.endLineNumber;\n        const range = Range.intersectRanges(_range, this._lastRenderedData.getCurrentVisibleRange());\n        if (!range) {\n            return null;\n        }\n        const visibleRanges = [];\n        let visibleRangesLen = 0;\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        let nextLineModelLineNumber = 0;\n        if (includeNewLines) {\n            nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n            if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n                continue;\n            }\n            const startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n            const endColumn = lineNumber === range.endLineNumber ? range.endColumn : this._context.viewModel.getLineMaxColumn(lineNumber);\n            const visibleRangesForLine = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n            if (!visibleRangesForLine) {\n                continue;\n            }\n            if (includeNewLines && lineNumber < originalEndLineNumber) {\n                const currentLineModelLineNumber = nextLineModelLineNumber;\n                nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n                if (currentLineModelLineNumber !== nextLineModelLineNumber) {\n                    visibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1].width += this._typicalHalfwidthCharacterWidth;\n                }\n            }\n            visibleRanges[visibleRangesLen++] = new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges));\n        }\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        if (visibleRangesLen === 0) {\n            return null;\n        }\n        return visibleRanges;\n    }\n    _visibleRangesForLineRange(lineNumber, startColumn, endColumn) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        if (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n            return null;\n        }\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        return result;\n    }\n    visibleRangeForPosition(position) {\n        const visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n        if (!visibleRanges) {\n            return null;\n        }\n        return new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n    }\n    /**\n     * Updates the max line width if it is fast to compute.\n     * Returns true if all lines were taken into account.\n     * Returns false if some lines need to be reevaluated (in a slow fashion).\n     */\n    _updateLineWidthsFast() {\n        return this._updateLineWidths(true);\n    }\n    _updateLineWidthsSlow() {\n        this._updateLineWidths(false);\n    }\n    /**\n     * Update the line widths using DOM layout information after someone else\n     * has caused a synchronous layout.\n     */\n    _updateLineWidthsSlowIfDomDidLayout(domReadingContext) {\n        if (!domReadingContext.didDomLayout) {\n            // only proceed if we just did a layout\n            return;\n        }\n        if (this._asyncUpdateLineWidths.isScheduled()) {\n            // reading widths is not scheduled => widths are up-to-date\n            return;\n        }\n        this._asyncUpdateLineWidths.cancel();\n        this._updateLineWidthsSlow();\n    }\n    _updateLineWidths(fast) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let localMaxLineWidth = 1;\n        let allWidthsComputed = true;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (fast && !visibleLine.getWidthIsFast()) {\n                // Cannot compute width in a fast way for this line\n                allWidthsComputed = false;\n                continue;\n            }\n            localMaxLineWidth = Math.max(localMaxLineWidth, visibleLine.getWidth(null));\n        }\n        if (allWidthsComputed && rendStartLineNumber === 1 && rendEndLineNumber === this._context.viewModel.getLineCount()) {\n            // we know the max line width for all the lines\n            this._maxLineWidth = 0;\n        }\n        this._ensureMaxLineWidth(localMaxLineWidth);\n        return allWidthsComputed;\n    }\n    _checkMonospaceFontAssumptions() {\n        // Problems with monospace assumptions are more apparent for longer lines,\n        // as small rounding errors start to sum up, so we will select the longest\n        // line for a closer inspection\n        let longestLineNumber = -1;\n        let longestWidth = -1;\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (visibleLine.needsMonospaceFontCheck()) {\n                const lineWidth = visibleLine.getWidth(null);\n                if (lineWidth > longestWidth) {\n                    longestWidth = lineWidth;\n                    longestLineNumber = lineNumber;\n                }\n            }\n        }\n        if (longestLineNumber === -1) {\n            return;\n        }\n        if (!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid()) {\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                visibleLine.onMonospaceAssumptionsInvalidated();\n            }\n        }\n    }\n    prepareRender() {\n        throw new Error('Not supported');\n    }\n    render() {\n        throw new Error('Not supported');\n    }\n    renderText(viewportData) {\n        // (1) render lines - ensures lines are in the DOM\n        this._visibleLines.renderLines(viewportData);\n        this._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange);\n        this.domNode.setWidth(this._context.viewLayout.getScrollWidth());\n        this.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(), 1000000));\n        // (2) compute horizontal scroll position:\n        //  - this must happen after the lines are in the DOM since it might need a line that rendered just now\n        //  - it might change `scrollWidth` and `scrollLeft`\n        if (this._horizontalRevealRequest) {\n            const horizontalRevealRequest = this._horizontalRevealRequest;\n            // Check that we have the line that contains the horizontal range in the viewport\n            if (viewportData.startLineNumber <= horizontalRevealRequest.minLineNumber && horizontalRevealRequest.maxLineNumber <= viewportData.endLineNumber) {\n                this._horizontalRevealRequest = null;\n                // allow `visibleRangesForRange2` to work\n                this.onDidRender();\n                // compute new scroll position\n                const newScrollLeft = this._computeScrollLeftToReveal(horizontalRevealRequest);\n                if (newScrollLeft) {\n                    if (!this._isViewportWrapping) {\n                        // ensure `scrollWidth` is large enough\n                        this._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset);\n                    }\n                    // set `scrollLeft`\n                    this._context.viewModel.viewLayout.setScrollPosition({\n                        scrollLeft: newScrollLeft.scrollLeft\n                    }, horizontalRevealRequest.scrollType);\n                }\n            }\n        }\n        // Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)\n        if (!this._updateLineWidthsFast()) {\n            // Computing the width of some lines would be slow => delay it\n            this._asyncUpdateLineWidths.schedule();\n        }\n        else {\n            this._asyncUpdateLineWidths.cancel();\n        }\n        if (platform.isLinux && !this._asyncCheckMonospaceFontAssumptions.isScheduled()) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                if (visibleLine.needsMonospaceFontCheck()) {\n                    this._asyncCheckMonospaceFontAssumptions.schedule();\n                    break;\n                }\n            }\n        }\n        // (3) handle scrolling\n        this._linesContent.setLayerHinting(this._canUseLayerHinting);\n        this._linesContent.setContain('strict');\n        const adjustedScrollTop = this._context.viewLayout.getCurrentScrollTop() - viewportData.bigNumbersDelta;\n        this._linesContent.setTop(-adjustedScrollTop);\n        this._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft());\n    }\n    // --- width\n    _ensureMaxLineWidth(lineWidth) {\n        const iLineWidth = Math.ceil(lineWidth);\n        if (this._maxLineWidth < iLineWidth) {\n            this._maxLineWidth = iLineWidth;\n            this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        }\n    }\n    _computeScrollTopToRevealRange(viewport, source, minimalReveal, range, selections, verticalType) {\n        const viewportStartY = viewport.top;\n        const viewportHeight = viewport.height;\n        const viewportEndY = viewportStartY + viewportHeight;\n        let boxIsSingleRange;\n        let boxStartY;\n        let boxEndY;\n        if (selections && selections.length > 0) {\n            let minLineNumber = selections[0].startLineNumber;\n            let maxLineNumber = selections[0].endLineNumber;\n            for (let i = 1, len = selections.length; i < len; i++) {\n                const selection = selections[i];\n                minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n                maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n            }\n            boxIsSingleRange = false;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber) + this._lineHeight;\n        }\n        else if (range) {\n            boxIsSingleRange = true;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber) + this._lineHeight;\n        }\n        else {\n            return -1;\n        }\n        const shouldIgnoreScrollOff = (source === 'mouse' || minimalReveal) && this._cursorSurroundingLinesStyle === 'default';\n        let paddingTop = 0;\n        let paddingBottom = 0;\n        if (!shouldIgnoreScrollOff) {\n            const context = Math.min((viewportHeight / this._lineHeight) / 2, this._cursorSurroundingLines);\n            if (this._stickyScrollEnabled) {\n                paddingTop = Math.max(context, this._maxNumberStickyLines) * this._lineHeight;\n            }\n            else {\n                paddingTop = context * this._lineHeight;\n            }\n            paddingBottom = Math.max(0, (context - 1)) * this._lineHeight;\n        }\n        else {\n            if (!minimalReveal) {\n                // Reveal one more line above (this case is hit when dragging)\n                paddingTop = this._lineHeight;\n            }\n        }\n        if (!minimalReveal) {\n            if (verticalType === 0 /* viewEvents.VerticalRevealType.Simple */ || verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */) {\n                // Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom\n                paddingBottom += this._lineHeight;\n            }\n        }\n        boxStartY -= paddingTop;\n        boxEndY += paddingBottom;\n        let newScrollTop;\n        if (boxEndY - boxStartY > viewportHeight) {\n            // the box is larger than the viewport ... scroll to its top\n            if (!boxIsSingleRange) {\n                // do not reveal multiple cursors if there are more than fit the viewport\n                return -1;\n            }\n            newScrollTop = boxStartY;\n        }\n        else if (verticalType === 5 /* viewEvents.VerticalRevealType.NearTop */ || verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */) {\n            if (verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // We want a gap that is 20% of the viewport, but with a minimum of 5 lines\n                const desiredGapAbove = Math.max(5 * this._lineHeight, viewportHeight * 0.2);\n                // Try to scroll just above the box with the desired gap\n                const desiredScrollTop = boxStartY - desiredGapAbove;\n                // But ensure that the box is not pushed out of viewport\n                const minScrollTop = boxEndY - viewportHeight;\n                newScrollTop = Math.max(minScrollTop, desiredScrollTop);\n            }\n        }\n        else if (verticalType === 1 /* viewEvents.VerticalRevealType.Center */ || verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */) {\n            if (verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // Box is outside the viewport... center it\n                const boxMiddleY = (boxStartY + boxEndY) / 2;\n                newScrollTop = Math.max(0, boxMiddleY - viewportHeight / 2);\n            }\n        }\n        else {\n            newScrollTop = this._computeMinimumScrolling(viewportStartY, viewportEndY, boxStartY, boxEndY, verticalType === 3 /* viewEvents.VerticalRevealType.Top */, verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */);\n        }\n        return newScrollTop;\n    }\n    _computeScrollLeftToReveal(horizontalRevealRequest) {\n        const viewport = this._context.viewLayout.getCurrentViewport();\n        const layoutInfo = this._context.configuration.options.get(140 /* EditorOption.layoutInfo */);\n        const viewportStartX = viewport.left;\n        const viewportEndX = viewportStartX + viewport.width - layoutInfo.verticalScrollbarWidth;\n        let boxStartX = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        let boxEndX = 0;\n        if (horizontalRevealRequest.type === 'range') {\n            const visibleRanges = this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber, horizontalRevealRequest.startColumn, horizontalRevealRequest.endColumn);\n            if (!visibleRanges) {\n                return null;\n            }\n            for (const visibleRange of visibleRanges.ranges) {\n                boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n            }\n        }\n        else {\n            for (const selection of horizontalRevealRequest.selections) {\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    return null;\n                }\n                const visibleRanges = this._visibleRangesForLineRange(selection.startLineNumber, selection.startColumn, selection.endColumn);\n                if (!visibleRanges) {\n                    return null;\n                }\n                for (const visibleRange of visibleRanges.ranges) {\n                    boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                    boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n                }\n            }\n        }\n        if (!horizontalRevealRequest.minimalReveal) {\n            boxStartX = Math.max(0, boxStartX - ViewLines.HORIZONTAL_EXTRA_PX);\n            boxEndX += this._revealHorizontalRightPadding;\n        }\n        if (horizontalRevealRequest.type === 'selections' && boxEndX - boxStartX > viewport.width) {\n            return null;\n        }\n        const newScrollLeft = this._computeMinimumScrolling(viewportStartX, viewportEndX, boxStartX, boxEndX);\n        return {\n            scrollLeft: newScrollLeft,\n            maxHorizontalOffset: boxEndX\n        };\n    }\n    _computeMinimumScrolling(viewportStart, viewportEnd, boxStart, boxEnd, revealAtStart, revealAtEnd) {\n        viewportStart = viewportStart | 0;\n        viewportEnd = viewportEnd | 0;\n        boxStart = boxStart | 0;\n        boxEnd = boxEnd | 0;\n        revealAtStart = !!revealAtStart;\n        revealAtEnd = !!revealAtEnd;\n        const viewportLength = viewportEnd - viewportStart;\n        const boxLength = boxEnd - boxStart;\n        if (boxLength < viewportLength) {\n            // The box would fit in the viewport\n            if (revealAtStart) {\n                return boxStart;\n            }\n            if (revealAtEnd) {\n                return Math.max(0, boxEnd - viewportLength);\n            }\n            if (boxStart < viewportStart) {\n                // The box is above the viewport\n                return boxStart;\n            }\n            else if (boxEnd > viewportEnd) {\n                // The box is below the viewport\n                return Math.max(0, boxEnd - viewportLength);\n            }\n        }\n        else {\n            // The box would not fit in the viewport\n            // Reveal the beginning of the box\n            return boxStart;\n        }\n        return viewportStart;\n    }\n}\n/**\n * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)\n */\nViewLines.HORIZONTAL_EXTRA_PX = 30;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './linesDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class LinesDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const linesDecorationsClassName = d.options.linesDecorationsClassName;\n            const zIndex = d.options.zIndex;\n            if (linesDecorationsClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, linesDecorationsClassName, zIndex);\n            }\n            const firstLineDecorationClassName = d.options.firstLineDecorationClassName;\n            if (firstLineDecorationClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.startLineNumber, firstLineDecorationClassName, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx), 1);\n        const left = this._decorationsLeft.toString();\n        const width = this._decorationsWidth.toString();\n        const common = '\" style=\"left:' + left + 'px;width:' + width + 'px;\"></div>';\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getLaneDecorations(1); // there is only one lane, see _render call above\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                lineOutput += '<div class=\"cldr ' + decoration.className + common;\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const marginClassName = d.options.marginClassName;\n            const zIndex = d.options.zIndex;\n            if (marginClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx), 1);\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getLaneDecorations(1); // there is only one lane, see _render call above\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                lineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const allCharCodes = (() => {\n    const v = [];\n    for (let i = 32 /* Constants.START_CH_CODE */; i <= 126 /* Constants.END_CH_CODE */; i++) {\n        v.push(i);\n    }\n    v.push(65533 /* Constants.UNKNOWN_CODE */);\n    return v;\n})();\nexport const getCharIndex = (chCode, fontScale) => {\n    chCode -= 32 /* Constants.START_CH_CODE */;\n    if (chCode < 0 || chCode > 96 /* Constants.CHAR_COUNT */) {\n        if (fontScale <= 2) {\n            // for smaller scales, we can get away with using any ASCII character...\n            return (chCode + 96 /* Constants.CHAR_COUNT */) % 96 /* Constants.CHAR_COUNT */;\n        }\n        return 96 /* Constants.CHAR_COUNT */ - 1; // unknown symbol\n    }\n    return chCode;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\nexport class MinimapCharRenderer {\n    constructor(charData, scale) {\n        this.scale = scale;\n        this._minimapCharRendererBrand = undefined;\n        this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n        this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n    }\n    static soften(input, ratio) {\n        const result = new Uint8ClampedArray(input.length);\n        for (let i = 0, len = input.length; i < len; i++) {\n            result[i] = toUint8(input[i] * ratio);\n        }\n        return result;\n    }\n    renderChar(target, dx, dy, chCode, color, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n        const charIndex = getCharIndex(chCode, fontScale);\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let sourceOffset = charIndex * charWidth * charHeight;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                const c = (charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n                dest[column++] = backgroundR + deltaR * c;\n                dest[column++] = backgroundG + deltaG * c;\n                dest[column++] = backgroundB + deltaB * c;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n    blockRenderChar(target, dx, dy, color, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const c = 0.5 * (foregroundAlpha / 255);\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const colorR = backgroundR + deltaR * c;\n        const colorG = backgroundG + deltaG * c;\n        const colorB = backgroundB + deltaB * c;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                dest[column++] = colorR;\n                dest[column++] = colorG;\n                dest[column++] = colorB;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from '../../../../base/common/functional.js';\nconst charTable = {\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15\n};\nconst decodeData = (str) => {\n    const output = new Uint8ClampedArray(str.length / 2);\n    for (let i = 0; i < str.length; i += 2) {\n        output[i >> 1] = (charTable[str[i]] << 4) | (charTable[str[i + 1]] & 0xF);\n    }\n    return output;\n};\n/*\nconst encodeData = (data: Uint8ClampedArray, length: string) => {\n    const chars = '0123456789ABCDEF';\n    let output = '';\n    for (let i = 0; i < data.length; i++) {\n        output += chars[data[i] >> 4] + chars[data[i] & 0xf];\n    }\n    return output;\n};\n*/\n/**\n * Map of minimap scales to prebaked sample data at those scales. We don't\n * sample much larger data, because then font family becomes visible, which\n * is use-configurable.\n */\nexport const prebakedMiniMaps = {\n    1: once(() => decodeData('0000511D6300CF609C709645A78432005642574171487021003C451900274D35D762755E8B629C5BA856AF57BA649530C167D1512A272A3F6038604460398526BCA2A968DB6F8957C768BE5FBE2FB467CF5D8D5B795DC7625B5DFF50DE64C466DB2FC47CD860A65E9A2EB96CB54CE06DA763AB2EA26860524D3763536601005116008177A8705E53AB738E6A982F88BAA35B5F5B626D9C636B449B737E5B7B678598869A662F6B5B8542706C704C80736A607578685B70594A49715A4522E792')),\n    2: once(() => decodeDatan};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MinimapCharRenderer } from './minimapCharRenderer.js';\nimport { allCharCodes } from './minimapCharSheet.js';\nimport { prebakedMiniMaps } from './minimapPreBaked.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\n/**\n * Creates character renderers. It takes a 'scale' that determines how large\n * characters should be drawn. Using this, it draws data into a canvas and\n * then downsamples the characters as necessary for the current display.\n * This makes rendering more efficient, rather than drawing a full (tiny)\n * font, or downsampling in real-time.\n */\nexport class MinimapCharRendererFactory {\n    /**\n     * Creates a new character renderer factory with the given scale.\n     */\n    static create(scale, fontFamily) {\n        // renderers are immutable. By default we'll 'create' a new minimap\n        // character renderer whenever we switch editors, no need to do extra work.\n        if (this.lastCreated && scale === this.lastCreated.scale && fontFamily === this.lastFontFamily) {\n            return this.lastCreated;\n        }\n        let factory;\n        if (prebakedMiniMaps[scale]) {\n            factory = new MinimapCharRenderer(prebakedMiniMaps[scale](), scale);\n        }\n        else {\n            factory = MinimapCharRendererFactory.createFromSampleData(MinimapCharRendererFactory.createSampleData(fontFamily).data, scale);\n        }\n        this.lastFontFamily = fontFamily;\n        this.lastCreated = factory;\n        return factory;\n    }\n    /**\n     * Creates the font sample data, writing to a canvas.\n     */\n    static createSampleData(fontFamily) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.style.height = `${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px`;\n        canvas.height = 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n        canvas.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        canvas.style.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ + 'px';\n        ctx.fillStyle = '#ffffff';\n        ctx.font = `bold ${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px ${fontFamily}`;\n        ctx.textBaseline = 'middle';\n        let x = 0;\n        for (const code of allCharCodes) {\n            ctx.fillText(String.fromCharCode(code), x, 16 /* Constants.SAMPLED_CHAR_HEIGHT */ / 2);\n            x += 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        }\n        return ctx.getImageData(0, 0, 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */, 16 /* Constants.SAMPLED_CHAR_HEIGHT */);\n    }\n    /**\n     * Creates a character renderer from the canvas sample data.\n     */\n    static createFromSampleData(source, scale) {\n        const expectedLength = 16 /* Constants.SAMPLED_CHAR_HEIGHT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */ * 96 /* Constants.CHAR_COUNT */;\n        if (source.length !== expectedLength) {\n            throw new Error('Unexpected source in MinimapCharRenderer');\n        }\n        const charData = MinimapCharRendererFactory._downsample(source, scale);\n        return new MinimapCharRenderer(charData, scale);\n    }\n    static _downsampleChar(source, sourceOffset, dest, destOffset, scale) {\n        const width = 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const height = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale;\n        let targetIndex = destOffset;\n        let brightest = 0;\n        // This is essentially an ad-hoc rescaling algorithm. Standard approaches\n        // like bicubic interpolation are awesome for scaling between image sizes,\n        // but don't work so well when scaling to very small pixel values, we end\n        // up with blurry, indistinct forms.\n        //\n        // The approach taken here is simply mapping each source pixel to the target\n        // pixels, and taking the weighted values for all pixels in each, and then\n        // averaging them out. Finally we apply an intensity boost in _downsample,\n        // since when scaling to the smallest pixel sizes there's more black space\n        // which causes characters to be much less distinct.\n        for (let y = 0; y < height; y++) {\n            // 1. For this destination pixel, get the source pixels we're sampling\n            // from (x1, y1) to the next pixel (x2, y2)\n            const sourceY1 = (y / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            const sourceY2 = ((y + 1) / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            for (let x = 0; x < width; x++) {\n                const sourceX1 = (x / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                const sourceX2 = ((x + 1) / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                // 2. Sample all of them, summing them up and weighting them. Similar\n                // to bilinear interpolation.\n                let value = 0;\n                let samples = 0;\n                for (let sy = sourceY1; sy < sourceY2; sy++) {\n                    const sourceRow = sourceOffset + Math.floor(sy) * 3840 /* Constants.RGBA_SAMPLED_ROW_WIDTH */;\n                    const yBalance = 1 - (sy - Math.floor(sy));\n                    for (let sx = sourceX1; sx < sourceX2; sx++) {\n                        const xBalance = 1 - (sx - Math.floor(sx));\n                        const sourceIndex = sourceRow + Math.floor(sx) * 4 /* Constants.RGBA_CHANNELS_CNT */;\n                        const weight = xBalance * yBalance;\n                        samples += weight;\n                        value += ((source[sourceIndex] * source[sourceIndex + 3]) / 255) * weight;\n                    }\n                }\n                const final = value / samples;\n                brightest = Math.max(brightest, final);\n                dest[targetIndex++] = toUint8(final);\n            }\n        }\n        return brightest;\n    }\n    static _downsample(data, scale) {\n        const pixelsPerCharacter = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale * 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const resultLen = pixelsPerCharacter * 96 /* Constants.CHAR_COUNT */;\n        const result = new Uint8ClampedArray(resultLen);\n        let resultOffset = 0;\n        let sourceOffset = 0;\n        let brightest = 0;\n        for (let charIndex = 0; charIndex < 96 /* Constants.CHAR_COUNT */; charIndex++) {\n            brightest = Math.max(brightest, this._downsampleChar(data, sourceOffset, result, resultOffset, scale));\n            resultOffset += pixelsPerCharacter;\n            sourceOffset += 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        }\n        if (brightest > 0) {\n            const adjust = 255 / brightest;\n            for (let i = 0; i < resultLen; i++) {\n                result[i] *= adjust;\n            }\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../../../base/browser/globalPointerMoveMonitor.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { MINIMAP_GUTTER_WIDTH, EditorLayoutInfoComputer } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RGBA8 } from '../../../common/core/rgba.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport { ViewModelDecoration } from '../../../common/viewModel.js';\nimport { minimapSelection, minimapBackground, minimapForegroundOpacity } from '../../../../platform/theme/common/colorRegistry.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { MinimapPosition } from '../../../common/model.js';\nimport { once } from '../../../../base/common/functional.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\nconst GUTTER_DECORATION_WIDTH = 2;\nclass MinimapOptions {\n    constructor(configuration, theme, tokensColorTracker) {\n        const options = configuration.options;\n        const pixelRatio = options.get(138 /* EditorOption.pixelRatio */);\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        const minimapLayout = layoutInfo.minimap;\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        const minimapOpts = options.get(70 /* EditorOption.minimap */);\n        this.renderMinimap = minimapLayout.renderMinimap;\n        this.size = minimapOpts.size;\n        this.minimapHeightIsEditorHeight = minimapLayout.minimapHeightIsEditorHeight;\n        this.scrollBeyondLastLine = options.get(101 /* EditorOption.scrollBeyondLastLine */);\n        this.paddingTop = options.get(81 /* EditorOption.padding */).top;\n        this.paddingBottom = options.get(81 /* EditorOption.padding */).bottom;\n        this.showSlider = minimapOpts.showSlider;\n        this.autohide = minimapOpts.autohide;\n        this.pixelRatio = pixelRatio;\n        this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this.lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this.minimapLeft = minimapLayout.minimapLeft;\n        this.minimapWidth = minimapLayout.minimapWidth;\n        this.minimapHeight = layoutInfo.height;\n        this.canvasInnerWidth = minimapLayout.minimapCanvasInnerWidth;\n        this.canvasInnerHeight = minimapLayout.minimapCanvasInnerHeight;\n        this.canvasOuterWidth = minimapLayout.minimapCanvasOuterWidth;\n        this.canvasOuterHeight = minimapLayout.minimapCanvasOuterHeight;\n        this.isSampling = minimapLayout.minimapIsSampling;\n        this.editorHeight = layoutInfo.height;\n        this.fontScale = minimapLayout.minimapScale;\n        this.minimapLineHeight = minimapLayout.minimapLineHeight;\n        this.minimapCharWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.fontScale;\n        this.charRenderer = once(() => MinimapCharRendererFactory.create(this.fontScale, fontInfo.fontFamily));\n        this.defaultBackgroundColor = tokensColorTracker.getColor(2 /* ColorId.DefaultBackground */);\n        this.backgroundColor = MinimapOptions._getMinimapBackground(theme, this.defaultBackgroundColor);\n        this.foregroundAlpha = MinimapOptions._getMinimapForegroundOpacity(theme);\n    }\n    static _getMinimapBackground(theme, defaultBackgroundColor) {\n        const themeColor = theme.getColor(minimapBackground);\n        if (themeColor) {\n            return new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n        }\n        return defaultBackgroundColor;\n    }\n    static _getMinimapForegroundOpacity(theme) {\n        const themeColor = theme.getColor(minimapForegroundOpacity);\n        if (themeColor) {\n            return RGBA8._clamp(Math.round(255 * themeColor.rgba.a));\n        }\n        return 255;\n    }\n    equals(other) {\n        return (this.renderMinimap === other.renderMinimap\n            && this.size === other.size\n            && this.minimapHeightIsEditorHeight === other.minimapHeightIsEditorHeight\n            && this.scrollBeyondLastLine === other.scrollBeyondLastLine\n            && this.paddingTop === other.paddingTop\n            && this.paddingBottom === other.paddingBottom\n            && this.showSlider === other.showSlider\n            && this.autohide === other.autohide\n            && this.pixelRatio === other.pixelRatio\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n            && this.lineHeight === other.lineHeight\n            && this.minimapLeft === other.minimapLeft\n            && this.minimapWidth === other.minimapWidth\n            && this.minimapHeight === other.minimapHeight\n            && this.canvasInnerWidth === other.canvasInnerWidth\n            && this.canvasInnerHeight === other.canvasInnerHeight\n            && this.canvasOuterWidth === other.canvasOuterWidth\n            && this.canvasOuterHeight === other.canvasOuterHeight\n            && this.isSampling === other.isSampling\n            && this.editorHeight === other.editorHeight\n            && this.fontScale === other.fontScale\n            && this.minimapLineHeight === other.minimapLineHeight\n            && this.minimapCharWidth === other.minimapCharWidth\n            && this.defaultBackgroundColor && this.defaultBackgroundColor.equals(other.defaultBackgroundColor)\n            && this.backgroundColor && this.backgroundColor.equals(other.backgroundColor)\n            && this.foregroundAlpha === other.foregroundAlpha);\n    }\n}\nclass MinimapLayout {\n    constructor(\n    /**\n     * The given editor scrollTop (input).\n     */\n    scrollTop, \n    /**\n     * The given editor scrollHeight (input).\n     */\n    scrollHeight, sliderNeeded, _computedSliderRatio, \n    /**\n     * slider dom node top (in CSS px)\n     */\n    sliderTop, \n    /**\n     * slider dom node height (in CSS px)\n     */\n    sliderHeight, \n    /**\n     * empty lines to reserve at the top of the minimap.\n     */\n    topPaddingLineCount, \n    /**\n     * minimap render start line number.\n     */\n    startLineNumber, \n    /**\n     * minimap render end line number.\n     */\n    endLineNumber) {\n        this.scrollTop = scrollTop;\n        this.scrollHeight = scrollHeight;\n        this.sliderNeeded = sliderNeeded;\n        this._computedSliderRatio = _computedSliderRatio;\n        this.sliderTop = sliderTop;\n        this.sliderHeight = sliderHeight;\n        this.topPaddingLineCount = topPaddingLineCount;\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollTopFromDelta(delta) {\n        return Math.round(this.scrollTop + delta / this._computedSliderRatio);\n    }\n    getDesiredScrollTopFromTouchLocation(pageY) {\n        return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n    }\n    /**\n     * Intersect a line range with `this.startLineNumber` and `this.endLineNumber`.\n     */\n    intersectWithViewport(range) {\n        const startLineNumber = Math.max(this.startLineNumber, range.startLineNumber);\n        const endLineNumber = Math.min(this.endLineNumber, range.endLineNumber);\n        if (startLineNumber > endLineNumber) {\n            // entirely outside minimap's viewport\n            return null;\n        }\n        return [startLineNumber, endLineNumber];\n    }\n    /**\n     * Get the inner minimap y coordinate for a line number.\n     */\n    getYForLineNumber(lineNumber, minimapLineHeight) {\n        return +(lineNumber - this.startLineNumber + this.topPaddingLineCount) * minimapLineHeight;\n    }\n    static create(options, viewportStartLineNumber, viewportEndLineNumber, viewportStartLineNumberVerticalOffset, viewportHeight, viewportContainsWhitespaceGaps, lineCount, realLineCount, scrollTop, scrollHeight, previousLayout) {\n        const pixelRatio = options.pixelRatio;\n        const minimapLineHeight = options.minimapLineHeight;\n        const minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n        const lineHeight = options.lineHeight;\n        if (options.minimapHeightIsEditorHeight) {\n            let logicalScrollHeight = (realLineCount * options.lineHeight\n                + options.paddingTop\n                + options.paddingBottom);\n            if (options.scrollBeyondLastLine) {\n                logicalScrollHeight += Math.max(0, viewportHeight - options.lineHeight - options.paddingBottom);\n            }\n            const sliderHeight = Math.max(1, Math.floor(viewportHeight * viewportHeight / logicalScrollHeight));\n            const maxMinimapSliderTop = Math.max(0, options.minimapHeight - sliderHeight);\n            // The slider can move from 0 to `maxMinimapSliderTop`\n            // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n            const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n            const sliderTop = (scrollTop * computedSliderRatio);\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            const maxLinesFitting = Math.floor(options.canvasInnerHeight / options.minimapLineHeight);\n            const topPaddingLineCount = Math.floor(options.paddingTop / options.lineHeight);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, topPaddingLineCount, 1, Math.min(lineCount, maxLinesFitting));\n        }\n        // The visible line count in a viewport can change due to a number of reasons:\n        //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n        //    e.g. for a line height of 20, and a viewport height of 600\n        //          * scrollTop = 0  => visible lines are [1, 30]\n        //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n        //          * scrollTop = 20 => visible lines are [2, 31]\n        //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n        //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n        // We must first establish a desirable slider height.\n        let sliderHeight;\n        if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n            // case b) from above: there are whitespace gaps in the viewport.\n            // In this case, the height of the slider directly reflects the visible line count.\n            const viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n            sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        else {\n            // The slider has a stable height\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        const extraLinesAtTheTop = Math.floor(options.paddingTop / lineHeight);\n        let extraLinesAtTheBottom = Math.floor(options.paddingBottom / lineHeight);\n        if (options.scrollBeyondLastLine) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            extraLinesAtTheBottom = Math.max(extraLinesAtTheBottom, expectedViewportLineCount - 1);\n        }\n        let maxMinimapSliderTop;\n        if (extraLinesAtTheBottom > 0) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            // The minimap slider, when dragged all the way down, will contain the last line at its top\n            maxMinimapSliderTop = (extraLinesAtTheTop + lineCount + extraLinesAtTheBottom - expectedViewportLineCount - 1) * minimapLineHeight / pixelRatio;\n        }\n        else {\n            // The minimap slider, when dragged all the way down, will contain the last line at its bottom\n            maxMinimapSliderTop = Math.max(0, (extraLinesAtTheTop + lineCount) * minimapLineHeight / pixelRatio - sliderHeight);\n        }\n        maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n        // The slider can move from 0 to `maxMinimapSliderTop`\n        // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n        const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n        const sliderTop = (scrollTop * computedSliderRatio);\n        if (minimapLinesFitting >= extraLinesAtTheTop + lineCount + extraLinesAtTheBottom) {\n            // All lines fit in the minimap\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, extraLinesAtTheTop, 1, lineCount);\n        }\n        else {\n            let consideringStartLineNumber;\n            if (viewportStartLineNumber > 1) {\n                consideringStartLineNumber = viewportStartLineNumber + extraLinesAtTheTop;\n            }\n            else {\n                consideringStartLineNumber = Math.max(1, scrollTop / lineHeight);\n            }\n            let topPaddingLineCount;\n            let startLineNumber = Math.max(1, Math.floor(consideringStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n            if (startLineNumber < extraLinesAtTheTop) {\n                topPaddingLineCount = extraLinesAtTheTop - startLineNumber + 1;\n                startLineNumber = 1;\n            }\n            else {\n                topPaddingLineCount = 0;\n                startLineNumber = Math.max(1, startLineNumber - extraLinesAtTheTop);\n            }\n            // Avoid flickering caused by a partial viewport start line\n            // by being consistent w.r.t. the previous layout decision\n            if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n                if (previousLayout.scrollTop > scrollTop) {\n                    // Scrolling up => never increase `startLineNumber`\n                    startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.max(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n                if (previousLayout.scrollTop < scrollTop) {\n                    // Scrolling down => never decrease `startLineNumber`\n                    startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.min(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n            }\n            const endLineNumber = Math.min(lineCount, startLineNumber - topPaddingLineCount + minimapLinesFitting - 1);\n            const partialLine = (scrollTop - viewportStartLineNumberVerticalOffset) / lineHeight;\n            let sliderTopAligned;\n            if (scrollTop > options.paddingTop) {\n                sliderTopAligned = (viewportStartLineNumber - startLineNumber + topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            else {\n                sliderTopAligned = (scrollTop / options.paddingTop) * (topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            return new MinimapLayout(scrollTop, scrollHeight, true, computedSliderRatio, sliderTopAligned, sliderHeight, topPaddingLineCount, startLineNumber, endLineNumber);\n        }\n    }\n}\nclass MinimapLine {\n    constructor(dy) {\n        this.dy = dy;\n    }\n    onContentChanged() {\n        this.dy = -1;\n    }\n    onTokensChanged() {\n        this.dy = -1;\n    }\n}\nMinimapLine.INVALID = new MinimapLine(-1);\nclass RenderData {\n    constructor(renderedLayout, imageData, lines) {\n        this.renderedLayout = renderedLayout;\n        this._imageData = imageData;\n        this._renderedLines = new RenderedLinesCollection(() => MinimapLine.INVALID);\n        this._renderedLines._set(renderedLayout.startLineNumber, lines);\n    }\n    /**\n     * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\n     */\n    linesEquals(layout) {\n        if (!this.scrollEquals(layout)) {\n            return false;\n        }\n        const tmp = this._renderedLines._get();\n        const lines = tmp.lines;\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (lines[i].dy === -1) {\n                // This line is invalid\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Check if the current RenderData matches the new layout's scroll position\n     */\n    scrollEquals(layout) {\n        return this.renderedLayout.startLineNumber === layout.startLineNumber\n            && this.renderedLayout.endLineNumber === layout.endLineNumber;\n    }\n    _get() {\n        const tmp = this._renderedLines._get();\n        return {\n            imageData: this._imageData,\n            rendLineNumberStart: tmp.rendLineNumberStart,\n            lines: tmp.lines\n        };\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        return this._renderedLines.onLinesChanged(changeFromLineNumber, changeCount);\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        this._renderedLines.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        this._renderedLines.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n    }\n    onTokensChanged(ranges) {\n        return this._renderedLines.onTokensChanged(ranges);\n    }\n}\n/**\n * Some sort of double buffering.\n *\n * Keeps two buffers around that will be rotated for painting.\n * Always gives a buffer that is filled with the background color.\n */\nclass MinimapBuffers {\n    constructor(ctx, WIDTH, HEIGHT, background) {\n        this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n        this._buffers = [\n            ctx.createImageData(WIDTH, HEIGHT),\n            ctx.createImageData(WIDTH, HEIGHT)\n        ];\n        this._lastUsedBuffer = 0;\n    }\n    getBuffer() {\n        // rotate buffers\n        this._lastUsedBuffer = 1 - this._lastUsedBuffer;\n        const result = this._buffers[this._lastUsedBuffer];\n        // fill with background color\n        result.data.set(this._backgroundFillData);\n        return result;\n    }\n    static _createBackgroundFillData(WIDTH, HEIGHT, background) {\n        const backgroundR = background.r;\n        const backgroundG = background.g;\n        const backgroundB = background.b;\n        const backgroundA = background.a;\n        const result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n        let offset = 0;\n        for (let i = 0; i < HEIGHT; i++) {\n            for (let j = 0; j < WIDTH; j++) {\n                result[offset] = backgroundR;\n                result[offset + 1] = backgroundG;\n                result[offset + 2] = backgroundB;\n                result[offset + 3] = backgroundA;\n                offset += 4;\n            }\n        }\n        return result;\n    }\n}\nclass MinimapSamplingState {\n    static compute(options, viewLineCount, oldSamplingState) {\n        if (options.renderMinimap === 0 /* RenderMinimap.None */ || !options.isSampling) {\n            return [null, []];\n        }\n        // ratio is intentionally not part of the layout to avoid the layout changing all the time\n        // so we need to recompute it again...\n        const { minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n            viewLineCount: viewLineCount,\n            scrollBeyondLastLine: options.scrollBeyondLastLine,\n            paddingTop: options.paddingTop,\n            paddingBottom: options.paddingBottom,\n            height: options.editorHeight,\n            lineHeight: options.lineHeight,\n            pixelRatio: options.pixelRatio\n        });\n        const ratio = viewLineCount / minimapLineCount;\n        const halfRatio = ratio / 2;\n        if (!oldSamplingState || oldSamplingState.minimapLines.length === 0) {\n            const result = [];\n            result[0] = 1;\n            if (minimapLineCount > 1) {\n                for (let i = 0, lastIndex = minimapLineCount - 1; i < lastIndex; i++) {\n                    result[i] = Math.round(i * ratio + halfRatio);\n                }\n                result[minimapLineCount - 1] = viewLineCount;\n            }\n            return [new MinimapSamplingState(ratio, result), []];\n        }\n        const oldMinimapLines = oldSamplingState.minimapLines;\n        const oldLength = oldMinimapLines.length;\n        const result = [];\n        let oldIndex = 0;\n        let oldDeltaLineCount = 0;\n        let minViewLineNumber = 1;\n        const MAX_EVENT_COUNT = 10; // generate at most 10 events, if there are more than 10 changes, just flush all previous data\n        let events = [];\n        let lastEvent = null;\n        for (let i = 0; i < minimapLineCount; i++) {\n            const fromViewLineNumber = Math.max(minViewLineNumber, Math.round(i * ratio));\n            const toViewLineNumber = Math.max(fromViewLineNumber, Math.round((i + 1) * ratio));\n            while (oldIndex < oldLength && oldMinimapLines[oldIndex] < fromViewLineNumber) {\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                        lastEvent.deleteToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount--;\n                }\n                oldIndex++;\n            }\n            let selectedViewLineNumber;\n            if (oldIndex < oldLength && oldMinimapLines[oldIndex] <= toViewLineNumber) {\n                // reuse the old sampled line\n                selectedViewLineNumber = oldMinimapLines[oldIndex];\n                oldIndex++;\n            }\n            else {\n                if (i === 0) {\n                    selectedViewLineNumber = 1;\n                }\n                else if (i + 1 === minimapLineCount) {\n                    selectedViewLineNumber = viewLineCount;\n                }\n                else {\n                    selectedViewLineNumber = Math.round(i * ratio + halfRatio);\n                }\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'inserted' && lastEvent._i === i - 1) {\n                        lastEvent.insertToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'inserted', _i: i, insertFromLineNumber: oldMinimapLineNumber, insertToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount++;\n                }\n            }\n            result[i] = selectedViewLineNumber;\n            minViewLineNumber = selectedViewLineNumber;\n        }\n        if (events.length < MAX_EVENT_COUNT) {\n            while (oldIndex < oldLength) {\n                const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                    lastEvent.deleteToLineNumber++;\n                }\n                else {\n                    lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                    events.push(lastEvent);\n                }\n                oldDeltaLineCount--;\n                oldIndex++;\n            }\n        }\n        else {\n            // too many events, just give up\n            events = [{ type: 'flush' }];\n        }\n        return [new MinimapSamplingState(ratio, result), events];\n    }\n    constructor(samplingRatio, minimapLines) {\n        this.samplingRatio = samplingRatio;\n        this.minimapLines = minimapLines;\n    }\n    modelLineToMinimapLine(lineNumber) {\n        return Math.min(this.minimapLines.length, Math.max(1, Math.round(lineNumber / this.samplingRatio)));\n    }\n    /**\n     * Will return null if the model line ranges are not intersecting with a sampled model line.\n     */\n    modelLineRangeToMinimapLineRange(fromLineNumber, toLineNumber) {\n        let fromLineIndex = this.modelLineToMinimapLine(fromLineNumber) - 1;\n        while (fromLineIndex > 0 && this.minimapLines[fromLineIndex - 1] >= fromLineNumber) {\n            fromLineIndex--;\n        }\n        let toLineIndex = this.modelLineToMinimapLine(toLineNumber) - 1;\n        while (toLineIndex + 1 < this.minimapLines.length && this.minimapLines[toLineIndex + 1] <= toLineNumber) {\n            toLineIndex++;\n        }\n        if (fromLineIndex === toLineIndex) {\n            const sampledLineNumber = this.minimapLines[fromLineIndex];\n            if (sampledLineNumber < fromLineNumber || sampledLineNumber > toLineNumber) {\n                // This line is not part of the sampled lines ==> nothing to do\n                return null;\n            }\n        }\n        return [fromLineIndex + 1, toLineIndex + 1];\n    }\n    /**\n     * Will always return a range, even if it is not intersecting with a sampled model line.\n     */\n    decorationLineRangeToMinimapLineRange(startLineNumber, endLineNumber) {\n        let minimapLineStart = this.modelLineToMinimapLine(startLineNumber);\n        let minimapLineEnd = this.modelLineToMinimapLine(endLineNumber);\n        if (startLineNumber !== endLineNumber && minimapLineEnd === minimapLineStart) {\n            if (minimapLineEnd === this.minimapLines.length) {\n                if (minimapLineStart > 1) {\n                    minimapLineStart--;\n                }\n            }\n            else {\n                minimapLineEnd++;\n            }\n        }\n        return [minimapLineStart, minimapLineEnd];\n    }\n    onLinesDeleted(e) {\n        // have the mapping be sticky\n        const deletedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        let changeStartIndex = this.minimapLines.length;\n        let changeEndIndex = 0;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            if (this.minimapLines[i] <= e.toLineNumber) {\n                // this line got deleted => move to previous available\n                this.minimapLines[i] = Math.max(1, e.fromLineNumber - 1);\n                changeStartIndex = Math.min(changeStartIndex, i);\n                changeEndIndex = Math.max(changeEndIndex, i);\n            }\n            else {\n                this.minimapLines[i] -= deletedLineCount;\n            }\n        }\n        return [changeStartIndex, changeEndIndex];\n    }\n    onLinesInserted(e) {\n        // have the mapping be sticky\n        const insertedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            this.minimapLines[i] += insertedLineCount;\n        }\n    }\n}\nexport class Minimap extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.tokensColorTracker = MinimapTokensColorTracker.getInstance();\n        this._selections = [];\n        this._minimapSelections = null;\n        this.options = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        const [samplingState,] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), null);\n        this._samplingState = samplingState;\n        this._shouldCheckSampling = false;\n        this._actual = new InnerMinimap(context.theme, this);\n    }\n    dispose() {\n        this._actual.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this._actual.getDomNode();\n    }\n    _onOptionsMaybeChanged() {\n        const opts = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        if (this.options.equals(opts)) {\n            return false;\n        }\n        this.options = opts;\n        this._recreateLineSampling();\n        this._actual.onDidChangeOptions();\n        return true;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        this._minimapSelections = null;\n        return this._actual.onSelectionChanged();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsMinimap) {\n            return this._actual.onDecorationsChanged();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        if (this._samplingState) {\n            this._shouldCheckSampling = true;\n        }\n        return this._actual.onFlushed();\n    }\n    onLinesChanged(e) {\n        if (this._samplingState) {\n            const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n            if (minimapLineRange) {\n                return this._actual.onLinesChanged(minimapLineRange[0], minimapLineRange[1] - minimapLineRange[0] + 1);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onLinesChanged(e.fromLineNumber, e.count);\n        }\n    }\n    onLinesDeleted(e) {\n        if (this._samplingState) {\n            const [changeStartIndex, changeEndIndex] = this._samplingState.onLinesDeleted(e);\n            if (changeStartIndex <= changeEndIndex) {\n                this._actual.onLinesChanged(changeStartIndex + 1, changeEndIndex - changeStartIndex + 1);\n            }\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onLinesInserted(e) {\n        if (this._samplingState) {\n            this._samplingState.onLinesInserted(e);\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onScrollChanged(e) {\n        return this._actual.onScrollChanged();\n    }\n    onThemeChanged(e) {\n        this._actual.onThemeChanged();\n        this._onOptionsMaybeChanged();\n        return true;\n    }\n    onTokensChanged(e) {\n        if (this._samplingState) {\n            const ranges = [];\n            for (const range of e.ranges) {\n                const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber, range.toLineNumber);\n                if (minimapLineRange) {\n                    ranges.push({ fromLineNumber: minimapLineRange[0], toLineNumber: minimapLineRange[1] });\n                }\n            }\n            if (ranges.length) {\n                return this._actual.onTokensChanged(ranges);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onTokensChanged(e.ranges);\n        }\n    }\n    onTokensColorsChanged(e) {\n        this._onOptionsMaybeChanged();\n        return this._actual.onTokensColorsChanged();\n    }\n    onZonesChanged(e) {\n        return this._actual.onZonesChanged();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._shouldCheckSampling) {\n            this._shouldCheckSampling = false;\n            this._recreateLineSampling();\n        }\n    }\n    render(ctx) {\n        let viewportStartLineNumber = ctx.visibleRange.startLineNumber;\n        let viewportEndLineNumber = ctx.visibleRange.endLineNumber;\n        if (this._samplingState) {\n            viewportStartLineNumber = this._samplingState.modelLineToMinimapLine(viewportStartLineNumber);\n            viewportEndLineNumber = this._samplingState.modelLineToMinimapLine(viewportEndLineNumber);\n        }\n        const minimapCtx = {\n            viewportContainsWhitespaceGaps: (ctx.viewportData.whitespaceViewportData.length > 0),\n            scrollWidth: ctx.scrollWidth,\n            scrollHeight: ctx.scrollHeight,\n            viewportStartLineNumber: viewportStartLineNumber,\n            viewportEndLineNumber: viewportEndLineNumber,\n            viewportStartLineNumberVerticalOffset: ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),\n            scrollTop: ctx.scrollTop,\n            scrollLeft: ctx.scrollLeft,\n            viewportWidth: ctx.viewportWidth,\n            viewportHeight: ctx.viewportHeight,\n        };\n        this._actual.render(minimapCtx);\n    }\n    //#region IMinimapModel\n    _recreateLineSampling() {\n        this._minimapSelections = null;\n        const wasSampling = Boolean(this._samplingState);\n        const [samplingState, events] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), this._samplingState);\n        this._samplingState = samplingState;\n        if (wasSampling && this._samplingState) {\n            // was sampling, is sampling\n            for (const event of events) {\n                switch (event.type) {\n                    case 'deleted':\n                        this._actual.onLinesDeleted(event.deleteFromLineNumber, event.deleteToLineNumber);\n                        break;\n                    case 'inserted':\n                        this._actual.onLinesInserted(event.insertFromLineNumber, event.insertToLineNumber);\n                        break;\n                    case 'flush':\n                        this._actual.onFlushed();\n                        break;\n                }\n            }\n        }\n    }\n    getLineCount() {\n        if (this._samplingState) {\n            return this._samplingState.minimapLines.length;\n        }\n        return this._context.viewModel.getLineCount();\n    }\n    getRealLineCount() {\n        return this._context.viewModel.getLineCount();\n    }\n    getLineContent(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineContent(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineContent(lineNumber);\n    }\n    getLineMaxColumn(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineMaxColumn(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineMaxColumn(lineNumber);\n    }\n    getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed) {\n        if (this._samplingState) {\n            const result = [];\n            for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n                if (needed[lineIndex]) {\n                    result[lineIndex] = this._context.viewModel.getViewLineData(this._samplingState.minimapLines[startLineNumber + lineIndex - 1]);\n                }\n                else {\n                    result[lineIndex] = null;\n                }\n            }\n            return result;\n        }\n        return this._context.viewModel.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed).data;\n    }\n    getSelections() {\n        if (this._minimapSelections === null) {\n            if (this._samplingState) {\n                this._minimapSelections = [];\n                for (const selection of this._selections) {\n                    const [minimapLineStart, minimapLineEnd] = this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber, selection.endLineNumber);\n                    this._minimapSelections.push(new Selection(minimapLineStart, selection.startColumn, minimapLineEnd, selection.endColumn));\n                }\n            }\n            else {\n                this._minimapSelections = this._selections;\n            }\n        }\n        return this._minimapSelections;\n    }\n    getMinimapDecorationsInViewport(startLineNumber, endLineNumber) {\n        let visibleRange;\n        if (this._samplingState) {\n            const modelStartLineNumber = this._samplingState.minimapLines[startLineNumber - 1];\n            const modelEndLineNumber = this._samplingState.minimapLines[endLineNumber - 1];\n            visibleRange = new Range(modelStartLineNumber, 1, modelEndLineNumber, this._context.viewModel.getLineMaxColumn(modelEndLineNumber));\n        }\n        else {\n            visibleRange = new Range(startLineNumber, 1, endLineNumber, this._context.viewModel.getLineMaxColumn(endLineNumber));\n        }\n        const decorations = this._context.viewModel.getMinimapDecorationsInRange(visibleRange);\n        if (this._samplingState) {\n            const result = [];\n            for (const decoration of decorations) {\n                if (!decoration.options.minimap) {\n                    continue;\n                }\n                const range = decoration.range;\n                const minimapStartLineNumber = this._samplingState.modelLineToMinimapLine(range.startLineNumber);\n                const minimapEndLineNumber = this._samplingState.modelLineToMinimapLine(range.endLineNumber);\n                result.push(new ViewModelDecoration(new Range(minimapStartLineNumber, range.startColumn, minimapEndLineNumber, range.endColumn), decoration.options));\n            }\n            return result;\n        }\n        return decorations;\n    }\n    getOptions() {\n        return this._context.viewModel.model.getOptions();\n    }\n    revealLineNumber(lineNumber) {\n        if (this._samplingState) {\n            lineNumber = this._samplingState.minimapLines[lineNumber - 1];\n        }\n        this._context.viewModel.revealRange('mouse', false, new Range(lineNumber, 1, lineNumber, 1), 1 /* viewEvents.VerticalRevealType.Center */, 0 /* ScrollType.Smooth */);\n    }\n    setScrollTop(scrollTop) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollTop\n        }, 1 /* ScrollType.Immediate */);\n    }\n}\nclass InnerMinimap extends Disposable {\n    constructor(theme, model) {\n        super();\n        this._renderDecorations = false;\n        this._gestureInProgress = false;\n        this._theme = theme;\n        this._model = model;\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 8 /* PartFingerprint.Minimap */);\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._shadow = createFastDomNode(document.createElement('div'));\n        this._shadow.setClassName('minimap-shadow-hidden');\n        this._domNode.appendChild(this._shadow);\n        this._canvas = createFastDomNode(document.createElement('canvas'));\n        this._canvas.setPosition('absolute');\n        this._canvas.setLeft(0);\n        this._domNode.appendChild(this._canvas);\n        this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n        this._decorationsCanvas.setPosition('absolute');\n        this._decorationsCanvas.setClassName('minimap-decorations-layer');\n        this._decorationsCanvas.setLeft(0);\n        this._domNode.appendChild(this._decorationsCanvas);\n        this._slider = createFastDomNode(document.createElement('div'));\n        this._slider.setPosition('absolute');\n        this._slider.setClassName('minimap-slider');\n        this._slider.setLayerHinting(true);\n        this._slider.setContain('strict');\n        this._domNode.appendChild(this._slider);\n        this._sliderHorizontal = createFastDomNode(document.createElement('div'));\n        this._sliderHorizontal.setPosition('absolute');\n        this._sliderHorizontal.setClassName('minimap-slider-horizontal');\n        this._slider.appendChild(this._sliderHorizontal);\n        this._applyLayout();\n        this._pointerDownListener = dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            const renderMinimap = this._model.options.renderMinimap;\n            if (renderMinimap === 0 /* RenderMinimap.None */) {\n                return;\n            }\n            if (!this._lastRenderData) {\n                return;\n            }\n            if (this._model.options.size !== 'proportional') {\n                if (e.button === 0 && this._lastRenderData) {\n                    // pretend the click occurred in the center of the slider\n                    const position = dom.getDomNodePagePosition(this._slider.domNode);\n                    const initialPosY = position.top + position.height / 2;\n                    this._startSliderDragging(e, initialPosY, this._lastRenderData.renderedLayout);\n                }\n                return;\n            }\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const internalOffsetY = (this._model.options.canvasInnerHeight / this._model.options.canvasOuterHeight) * e.offsetY;\n            const lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n            let lineNumber = lineIndex + this._lastRenderData.renderedLayout.startLineNumber - this._lastRenderData.renderedLayout.topPaddingLineCount;\n            lineNumber = Math.min(lineNumber, this._model.getLineCount());\n            this._model.revealLineNumber(lineNumber);\n        });\n        this._sliderPointerMoveMonitor = new GlobalPointerMoveMonitor();\n        this._sliderPointerDownListener = dom.addStandardDisposableListener(this._slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (e.button === 0 && this._lastRenderData) {\n                this._startSliderDragging(e, e.pageY, this._lastRenderData.renderedLayout);\n            }\n        });\n        this._gestureDisposable = Gesture.addTarget(this._domNode.domNode);\n        this._sliderTouchStartListener = dom.addDisposableListener(this._domNode.domNode, EventType.Start, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData) {\n                this._slider.toggleClassName('active', true);\n                this._gestureInProgress = true;\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchMoveListener = dom.addDisposableListener(this._domNode.domNode, EventType.Change, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData && this._gestureInProgress) {\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchEndListener = dom.addStandardDisposableListener(this._domNode.domNode, EventType.End, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this._gestureInProgress = false;\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    _startSliderDragging(e, initialPosY, initialSliderState) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const initialPosX = e.pageX;\n        this._slider.toggleClassName('active', true);\n        const handlePointerMove = (posy, posx) => {\n            const minimapPosition = dom.getDomNodePagePosition(this._domNode.domNode);\n            const pointerOrthogonalDelta = Math.min(Math.abs(posx - initialPosX), Math.abs(posx - minimapPosition.left), Math.abs(posx - minimapPosition.left - minimapPosition.width));\n            if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n                // The pointer has wondered away from the scrollbar => reset dragging\n                this._model.setScrollTop(initialSliderState.scrollTop);\n                return;\n            }\n            const pointerDelta = posy - initialPosY;\n            this._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(pointerDelta));\n        };\n        if (e.pageY !== initialPosY) {\n            handlePointerMove(e.pageY, initialPosX);\n        }\n        this._sliderPointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, pointerMoveData => handlePointerMove(pointerMoveData.pageY, pointerMoveData.pageX), () => {\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    scrollDueToTouchEvent(touch) {\n        const startY = this._domNode.domNode.getBoundingClientRect().top;\n        const scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n        this._model.setScrollTop(scrollTop);\n    }\n    dispose() {\n        this._pointerDownListener.dispose();\n        this._sliderPointerMoveMonitor.dispose();\n        this._sliderPointerDownListener.dispose();\n        this._gestureDisposable.dispose();\n        this._sliderTouchStartListener.dispose();\n        this._sliderTouchMoveListener.dispose();\n        this._sliderTouchEndListener.dispose();\n        super.dispose();\n    }\n    _getMinimapDomNodeClassName() {\n        const class_ = ['minimap'];\n        if (this._model.options.showSlider === 'always') {\n            class_.push('slider-always');\n        }\n        else {\n            class_.push('slider-mouseover');\n        }\n        if (this._model.options.autohide) {\n            class_.push('autohide');\n        }\n        return class_.join(' ');\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _applyLayout() {\n        this._domNode.setLeft(this._model.options.minimapLeft);\n        this._domNode.setWidth(this._model.options.minimapWidth);\n        this._domNode.setHeight(this._model.options.minimapHeight);\n        this._shadow.setHeight(this._model.options.minimapHeight);\n        this._canvas.setWidth(this._model.options.canvasOuterWidth);\n        this._canvas.setHeight(this._model.options.canvasOuterHeight);\n        this._canvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._canvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth);\n        this._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight);\n        this._decorationsCanvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._decorationsCanvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._slider.setWidth(this._model.options.minimapWidth);\n    }\n    _getBuffer() {\n        if (!this._buffers) {\n            if (this._model.options.canvasInnerWidth > 0 && this._model.options.canvasInnerHeight > 0) {\n                this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._model.options.canvasInnerWidth, this._model.options.canvasInnerHeight, this._model.options.backgroundColor);\n            }\n        }\n        return this._buffers ? this._buffers.getBuffer() : null;\n    }\n    // ---- begin view event handlers\n    onDidChangeOptions() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._applyLayout();\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n    }\n    onSelectionChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onDecorationsChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onFlushed() {\n        this._lastRenderData = null;\n        return true;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onLinesChanged(changeFromLineNumber, changeCount);\n        }\n        return false;\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        var _a;\n        (_a = this._lastRenderData) === null || _a === void 0 ? void 0 : _a.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n        return true;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        var _a;\n        (_a = this._lastRenderData) === null || _a === void 0 ? void 0 : _a.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n        return true;\n    }\n    onScrollChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onThemeChanged() {\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._renderDecorations = true;\n        return true;\n    }\n    onTokensChanged(ranges) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onTokensChanged(ranges);\n        }\n        return false;\n    }\n    onTokensColorsChanged() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        return true;\n    }\n    onZonesChanged() {\n        this._lastRenderData = null;\n        return true;\n    }\n    // --- end event handlers\n    render(renderingCtx) {\n        const renderMinimap = this._model.options.renderMinimap;\n        if (renderMinimap === 0 /* RenderMinimap.None */) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n            this._sliderHorizontal.setWidth(0);\n            this._sliderHorizontal.setHeight(0);\n            return;\n        }\n        if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n        }\n        else {\n            this._shadow.setClassName('minimap-shadow-visible');\n        }\n        const layout = MinimapLayout.create(this._model.options, renderingCtx.viewportStartLineNumber, renderingCtx.viewportEndLineNumber, renderingCtx.viewportStartLineNumberVerticalOffset, renderingCtx.viewportHeight, renderingCtx.viewportContainsWhitespaceGaps, this._model.getLineCount(), this._model.getRealLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\n        this._slider.setDisplay(layout.sliderNeeded ? 'block' : 'none');\n        this._slider.setTop(layout.sliderTop);\n        this._slider.setHeight(layout.sliderHeight);\n        // Compute horizontal slider coordinates\n        this._sliderHorizontal.setLeft(0);\n        this._sliderHorizontal.setWidth(this._model.options.minimapWidth);\n        this._sliderHorizontal.setTop(0);\n        this._sliderHorizontal.setHeight(layout.sliderHeight);\n        this.renderDecorations(layout);\n        this._lastRenderData = this.renderLines(layout);\n    }\n    renderDecorations(layout) {\n        if (this._renderDecorations) {\n            this._renderDecorations = false;\n            const selections = this._model.getSelections();\n            selections.sort(Range.compareRangesUsingStarts);\n            const decorations = this._model.getMinimapDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n            decorations.sort((a, b) => (a.options.zIndex || 0) - (b.options.zIndex || 0));\n            const { canvasInnerWidth, canvasInnerHeight } = this._model.options;\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const minimapCharWidth = this._model.options.minimapCharWidth;\n            const tabSize = this._model.getOptions().tabSize;\n            const canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n            canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n            // We first need to render line highlights and then render decorations on top of those.\n            // But we need to pick a single color for each line, and use that as a line highlight.\n            // This needs to be the color of the decoration with the highest `zIndex`, but priority\n            // is given to the selection.\n            const highlightedLines = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, false);\n            this._renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight);\n            this._renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight);\n            const lineOffsetMap = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, null);\n            this._renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n            this._renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n        }\n    }\n    _renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        canvasContext.fillStyle = this._selectionColor.transparent(0.5).toString();\n        let y1 = 0;\n        let y2 = 0;\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                highlightedLines.set(line, true);\n            }\n            const yy1 = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n            const yy2 = layout.getYForLineNumber(endLineNumber, minimapLineHeight);\n            if (y2 >= yy1) {\n                // merge into previous\n                y2 = yy2;\n            }\n            else {\n                if (y2 > y1) {\n                    // flush\n                    canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n                }\n                y1 = yy1;\n                y2 = yy2;\n            }\n        }\n        if (y2 > y1) {\n            // flush\n            canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n        }\n    }\n    _renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight) {\n        const highlightColors = new Map();\n        // Loop backwards to hit first decorations with higher `zIndex`\n        for (let i = decorations.length - 1; i >= 0; i--) {\n            const decoration = decorations[i];\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions || minimapOptions.position !== MinimapPosition.Inline) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            let highlightColor = highlightColors.get(decorationColor.toString());\n            if (!highlightColor) {\n                highlightColor = decorationColor.transparent(0.5).toString();\n                highlightColors.set(decorationColor.toString(), highlightColor);\n            }\n            canvasContext.fillStyle = highlightColor;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                if (highlightedLines.has(line)) {\n                    continue;\n                }\n                highlightedLines.set(line, true);\n                const y = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n                canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, minimapLineHeight);\n            }\n        }\n    }\n    _renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, lineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n            }\n        }\n    }\n    _renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        // Loop forwards to hit first decorations with lower `zIndex`\n        for (const decoration of decorations) {\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                switch (minimapOptions.position) {\n                    case MinimapPosition.Inline:\n                        this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, minimapLineHeight, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth);\n                        continue;\n                    case MinimapPosition.Gutter: {\n                        const y = layout.getYForLineNumber(line, minimapLineHeight);\n                        const x = 2;\n                        this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, minimapLineHeight);\n                        continue;\n                    }\n                }\n            }\n        }\n    }\n    renderDecorationOnLine(canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, minimapLineHeight, tabSize, charWidth, canvasInnerWidth) {\n        const y = layout.getYForLineNumber(lineNumber, minimapLineHeight);\n        // Skip rendering the line if it's vertically outside our viewport\n        if (y + height < 0 || y > this._model.options.canvasInnerHeight) {\n            return;\n        }\n        const { startLineNumber, endLineNumber } = decorationRange;\n        const startColumn = (startLineNumber === lineNumber ? decorationRange.startColumn : 1);\n        const endColumn = (endLineNumber === lineNumber ? decorationRange.endColumn : this._model.getLineMaxColumn(lineNumber));\n        const x1 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, startColumn, tabSize, charWidth, canvasInnerWidth);\n        const x2 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, endColumn, tabSize, charWidth, canvasInnerWidth);\n        this.renderDecoration(canvasContext, decorationColor, x1, y, x2 - x1, height);\n    }\n    getXOffsetForPosition(lineOffsetMap, lineNumber, column, tabSize, charWidth, canvasInnerWidth) {\n        if (column === 1) {\n            return MINIMAP_GUTTER_WIDTH;\n        }\n        const minimumXOffset = (column - 1) * charWidth;\n        if (minimumXOffset >= canvasInnerWidth) {\n            // there is no need to look at actual characters,\n            // as this column is certainly after the minimap width\n            return canvasInnerWidth;\n        }\n        // Cache line offset data so that it is only read once per line\n        let lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n        if (!lineIndexToXOffset) {\n            const lineData = this._model.getLineContent(lineNumber);\n            lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n            let prevx = MINIMAP_GUTTER_WIDTH;\n            for (let i = 1; i < lineData.length + 1; i++) {\n                const charCode = lineData.charCodeAt(i - 1);\n                const dx = charCode === 9 /* CharCode.Tab */\n                    ? tabSize * charWidth\n                    : strings.isFullWidthCharacter(charCode)\n                        ? 2 * charWidth\n                        : charWidth;\n                const x = prevx + dx;\n                if (x >= canvasInnerWidth) {\n                    // no need to keep on going, as we've hit the canvas width\n                    lineIndexToXOffset[i] = canvasInnerWidth;\n                    break;\n                }\n                lineIndexToXOffset[i] = x;\n                prevx = x;\n            }\n            lineOffsetMap.set(lineNumber, lineIndexToXOffset);\n        }\n        if (column - 1 < lineIndexToXOffset.length) {\n            return lineIndexToXOffset[column - 1];\n        }\n        // goes over the canvas width\n        return canvasInnerWidth;\n    }\n    renderDecoration(canvasContext, decorationColor, x, y, width, height) {\n        canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n        canvasContext.fillRect(x, y, width, height);\n    }\n    renderLines(layout) {\n        const startLineNumber = layout.startLineNumber;\n        const endLineNumber = layout.endLineNumber;\n        const minimapLineHeight = this._model.options.minimapLineHeight;\n        // Check if nothing changed w.r.t. lines from last frame\n        if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n            const _lastData = this._lastRenderData._get();\n            // Nice!! Nothing changed from last frame\n            return new RenderData(layout, _lastData.imageData, _lastData.lines);\n        }\n        // Oh well!! We need to repaint some lines...\n        const imageData = this._getBuffer();\n        if (!imageData) {\n            // 0 width or 0 height canvas, nothing to do\n            return null;\n        }\n        // Render untouched lines by using last rendered data.\n        const [_dirtyY1, _dirtyY2, needed] = InnerMinimap._renderUntouchedLines(imageData, layout.topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData);\n        // Fetch rendering info from view model for rest of lines that need rendering.\n        const lineInfo = this._model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n        const tabSize = this._model.getOptions().tabSize;\n        const defaultBackground = this._model.options.defaultBackgroundColor;\n        const background = this._model.options.backgroundColor;\n        const foregroundAlpha = this._model.options.foregroundAlpha;\n        const tokensColorTracker = this._model.tokensColorTracker;\n        const useLighterFont = tokensColorTracker.backgroundIsLight();\n        const renderMinimap = this._model.options.renderMinimap;\n        const charRenderer = this._model.options.charRenderer();\n        const fontScale = this._model.options.fontScale;\n        const minimapCharWidth = this._model.options.minimapCharWidth;\n        const baseCharHeight = (renderMinimap === 1 /* RenderMinimap.Text */ ? 2 /* Constants.BASE_CHAR_HEIGHT */ : 2 /* Constants.BASE_CHAR_HEIGHT */ + 1);\n        const renderMinimapLineHeight = baseCharHeight * fontScale;\n        const innerLinePadding = (minimapLineHeight > renderMinimapLineHeight ? Math.floor((minimapLineHeight - renderMinimapLineHeight) / 2) : 0);\n        // Render the rest of lines\n        const backgroundA = background.a / 255;\n        const renderBackground = new RGBA8(Math.round((background.r - defaultBackground.r) * backgroundA + defaultBackground.r), Math.round((background.g - defaultBackground.g) * backgroundA + defaultBackground.g), Math.round((background.b - defaultBackground.b) * backgroundA + defaultBackground.b), 255);\n        let dy = layout.topPaddingLineCount * minimapLineHeight;\n        const renderedLines = [];\n        for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n            if (needed[lineIndex]) {\n                InnerMinimap._renderLine(imageData, renderBackground, background.a, useLighterFont, renderMinimap, minimapCharWidth, tokensColorTracker, foregroundAlpha, charRenderer, dy, innerLinePadding, tabSize, lineInfo[lineIndex], fontScale, minimapLineHeight);\n            }\n            renderedLines[lineIndex] = new MinimapLine(dy);\n            dy += minimapLineHeight;\n        }\n        const dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\n        const dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\n        const dirtyHeight = dirtyY2 - dirtyY1;\n        // Finally, paint to the canvas\n        const ctx = this._canvas.domNode.getContext('2d');\n        ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n        // Save rendered data for reuse on next frame if possible\n        return new RenderData(layout, imageData, renderedLines);\n    }\n    static _renderUntouchedLines(target, topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\n        const needed = [];\n        if (!lastRenderData) {\n            for (let i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n                needed[i] = true;\n            }\n            return [-1, -1, needed];\n        }\n        const _lastData = lastRenderData._get();\n        const lastTargetData = _lastData.imageData.data;\n        const lastStartLineNumber = _lastData.rendLineNumberStart;\n        const lastLines = _lastData.lines;\n        const lastLinesLength = lastLines.length;\n        const WIDTH = target.width;\n        const targetData = target.data;\n        const maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n        let dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n        let dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n        let copySourceStart = -1;\n        let copySourceEnd = -1;\n        let copyDestStart = -1;\n        let copyDestEnd = -1;\n        let dest_dy = topPaddingLineCount * minimapLineHeight;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - startLineNumber;\n            const lastLineIndex = lineNumber - lastStartLineNumber;\n            const source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\n            if (source_dy === -1) {\n                needed[lineIndex] = true;\n                dest_dy += minimapLineHeight;\n                continue;\n            }\n            const sourceStart = source_dy * WIDTH * 4;\n            const sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n            const destStart = dest_dy * WIDTH * 4;\n            const destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n            if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n                // contiguous zone => extend copy request\n                copySourceEnd = sourceEnd;\n                copyDestEnd = destEnd;\n            }\n            else {\n                if (copySourceStart !== -1) {\n                    // flush existing copy request\n                    targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n                    if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                        dirtyPixel1 = copySourceEnd;\n                    }\n                    if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                        dirtyPixel2 = copySourceStart;\n                    }\n                }\n                copySourceStart = sourceStart;\n                copySourceEnd = sourceEnd;\n                copyDestStart = destStart;\n                copyDestEnd = destEnd;\n            }\n            needed[lineIndex] = false;\n            dest_dy += minimapLineHeight;\n        }\n        if (copySourceStart !== -1) {\n            // flush existing copy request\n            targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n            if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                dirtyPixel1 = copySourceEnd;\n            }\n            if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                dirtyPixel2 = copySourceStart;\n            }\n        }\n        const dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\n        const dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\n        return [dirtyY1, dirtyY2, needed];\n    }\n    static _renderLine(target, backgroundColor, backgroundAlpha, useLighterFont, renderMinimap, charWidth, colorTracker, foregroundAlpha, minimapCharRenderer, dy, innerLinePadding, tabSize, lineData, fontScale, minimapLineHeight) {\n        const content = lineData.content;\n        const tokens = lineData.tokens;\n        const maxDx = target.width - charWidth;\n        const force1pxHeight = (minimapLineHeight === 1);\n        let dx = MINIMAP_GUTTER_WIDTH;\n        let charIndex = 0;\n        let tabsCharDelta = 0;\n        for (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n            const tokenEndIndex = tokens.getEndOffset(tokenIndex);\n            const tokenColorId = tokens.getForeground(tokenIndex);\n            const tokenColor = colorTracker.getColor(tokenColorId);\n            for (; charIndex < tokenEndIndex; charIndex++) {\n                if (dx > maxDx) {\n                    // hit edge of minimap\n                    return;\n                }\n                const charCode = content.charCodeAt(charIndex);\n                if (charCode === 9 /* CharCode.Tab */) {\n                    const insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n                    tabsCharDelta += insertSpacesCount - 1;\n                    // No need to render anything since tab is invisible\n                    dx += insertSpacesCount * charWidth;\n                }\n                else if (charCode === 32 /* CharCode.Space */) {\n                    // No need to render anything since space is invisible\n                    dx += charWidth;\n                }\n                else {\n                    // Render twice for a full width character\n                    const count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n                    for (let i = 0; i < count; i++) {\n                        if (renderMinimap === 2 /* RenderMinimap.Blocks */) {\n                            minimapCharRenderer.blockRenderChar(target, dx, dy + innerLinePadding, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight);\n                        }\n                        else { // RenderMinimap.Text\n                            minimapCharRenderer.renderChar(target, dx, dy + innerLinePadding, charCode, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight);\n                        }\n                        dx += charWidth;\n                        if (dx > maxDx) {\n                            // hit edge of minimap\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nclass ContiguousLineMap {\n    constructor(startLineNumber, endLineNumber, defaultValue) {\n        this._startLineNumber = startLineNumber;\n        this._endLineNumber = endLineNumber;\n        this._defaultValue = defaultValue;\n        this._values = [];\n        for (let i = 0, count = this._endLineNumber - this._startLineNumber + 1; i < count; i++) {\n            this._values[i] = defaultValue;\n        }\n    }\n    has(lineNumber) {\n        return (this.get(lineNumber) !== this._defaultValue);\n    }\n    set(lineNumber, value) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return;\n        }\n        this._values[lineNumber - this._startLineNumber] = value;\n    }\n    get(lineNumber) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return this._defaultValue;\n        }\n        return this._values[lineNumber - this._startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './overlayWidgets.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewOverlayWidgets extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._widgets = {};\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 4 /* PartFingerprint.OverlayWidgets */);\n        this._domNode.setClassName('overlayWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        return true;\n    }\n    // ---- end view event handlers\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: null,\n            domNode: domNode\n        };\n        // This is sync because a widget wants to be in the dom\n        domNode.setPosition('absolute');\n        domNode.setAttribute('widgetId', widget.getId());\n        this._domNode.appendChild(domNode);\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, preference) {\n        const widgetData = this._widgets[widget.getId()];\n        if (widgetData.preference === preference) {\n            return false;\n        }\n        widgetData.preference = preference;\n        this.setShouldRender();\n        return true;\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            domNode.parentNode.removeChild(domNode);\n            this.setShouldRender();\n        }\n    }\n    _renderWidget(widgetData) {\n        const domNode = widgetData.domNode;\n        if (widgetData.preference === null) {\n            domNode.setTop('');\n            return;\n        }\n        if (widgetData.preference === 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */) {\n            domNode.setTop(0);\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */) {\n            const widgetHeight = domNode.domNode.clientHeight;\n            domNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === 2 /* OverlayWidgetPositionPreference.TOP_CENTER */) {\n            domNode.setTop(0);\n            domNode.domNode.style.right = '50%';\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._editorWidth);\n        const keys = Object.keys(this._widgets);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            this._renderWidget(this._widgets[widgetId]);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground } from '../../../common/core/editorColorRegistry.js';\nimport { OverviewRulerDecorationsGroup } from '../../../common/viewModel.js';\nclass Settings {\n    constructor(config, theme) {\n        const options = config.options;\n        this.lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this.pixelRatio = options.get(138 /* EditorOption.pixelRatio */);\n        this.overviewRulerLanes = options.get(80 /* EditorOption.overviewRulerLanes */);\n        this.renderBorder = options.get(79 /* EditorOption.overviewRulerBorder */);\n        const borderColor = theme.getColor(editorOverviewRulerBorder);\n        this.borderColor = borderColor ? borderColor.toString() : null;\n        this.hideCursor = options.get(57 /* EditorOption.hideCursorInOverviewRuler */);\n        const cursorColor = theme.getColor(editorCursorForeground);\n        this.cursorColor = cursorColor ? cursorColor.transparent(0.7).toString() : null;\n        this.themeType = theme.type;\n        const minimapOpts = options.get(70 /* EditorOption.minimap */);\n        const minimapEnabled = minimapOpts.enabled;\n        const minimapSide = minimapOpts.side;\n        const themeColor = theme.getColor(editorOverviewRulerBackground);\n        const defaultBackground = TokenizationRegistry.getDefaultBackground();\n        if (themeColor) {\n            this.backgroundColor = themeColor;\n        }\n        else if (minimapEnabled && minimapSide === 'right') {\n            this.backgroundColor = defaultBackground;\n        }\n        else {\n            this.backgroundColor = null;\n        }\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        const position = layoutInfo.overviewRuler;\n        this.top = position.top;\n        this.right = position.right;\n        this.domWidth = position.width;\n        this.domHeight = position.height;\n        if (this.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this.canvasWidth = 0;\n            this.canvasHeight = 0;\n        }\n        else {\n            this.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\n            this.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\n        }\n        const [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\n        this.x = x;\n        this.w = w;\n    }\n    _initLanes(canvasLeftOffset, canvasWidth, laneCount) {\n        const remainingWidth = canvasWidth - canvasLeftOffset;\n        if (laneCount >= 3) {\n            const leftWidth = Math.floor(remainingWidth / 3);\n            const rightWidth = Math.floor(remainingWidth / 3);\n            const centerWidth = remainingWidth - leftWidth - rightWidth;\n            const leftOffset = canvasLeftOffset;\n            const centerOffset = leftOffset + leftWidth;\n            const rightOffset = leftOffset + leftWidth + centerWidth;\n            return [\n                [\n                    0,\n                    leftOffset,\n                    centerOffset,\n                    leftOffset,\n                    rightOffset,\n                    leftOffset,\n                    centerOffset,\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth,\n                    centerWidth,\n                    leftWidth + centerWidth,\n                    rightWidth,\n                    leftWidth + centerWidth + rightWidth,\n                    centerWidth + rightWidth,\n                    leftWidth + centerWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else if (laneCount === 2) {\n            const leftWidth = Math.floor(remainingWidth / 2);\n            const rightWidth = remainingWidth - leftWidth;\n            const leftOffset = canvasLeftOffset;\n            const rightOffset = leftOffset + leftWidth;\n            return [\n                [\n                    0,\n                    leftOffset,\n                    leftOffset,\n                    leftOffset,\n                    rightOffset,\n                    leftOffset,\n                    leftOffset,\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth,\n                    leftWidth,\n                    leftWidth,\n                    rightWidth,\n                    leftWidth + rightWidth,\n                    leftWidth + rightWidth,\n                    leftWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else {\n            const offset = canvasLeftOffset;\n            const width = remainingWidth;\n            return [\n                [\n                    0,\n                    offset,\n                    offset,\n                    offset,\n                    offset,\n                    offset,\n                    offset,\n                    offset, // Left | Center | Right\n                ], [\n                    0,\n                    width,\n                    width,\n                    width,\n                    width,\n                    width,\n                    width,\n                    width, // Left | Center | Right\n                ]\n            ];\n        }\n    }\n    equals(other) {\n        return (this.lineHeight === other.lineHeight\n            && this.pixelRatio === other.pixelRatio\n            && this.overviewRulerLanes === other.overviewRulerLanes\n            && this.renderBorder === other.renderBorder\n            && this.borderColor === other.borderColor\n            && this.hideCursor === other.hideCursor\n            && this.cursorColor === other.cursorColor\n            && this.themeType === other.themeType\n            && Color.equals(this.backgroundColor, other.backgroundColor)\n            && this.top === other.top\n            && this.right === other.right\n            && this.domWidth === other.domWidth\n            && this.domHeight === other.domHeight\n            && this.canvasWidth === other.canvasWidth\n            && this.canvasHeight === other.canvasHeight);\n    }\n}\nexport class DecorationsOverviewRuler extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName('decorationsOverviewRuler');\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateSettings(false);\n        this._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\n            if (e.changedColorMap) {\n                this._updateSettings(true);\n            }\n        });\n        this._cursorPositions = [];\n    }\n    dispose() {\n        super.dispose();\n        this._tokensColorTrackerListener.dispose();\n    }\n    _updateSettings(renderNow) {\n        const newSettings = new Settings(this._context.configuration, this._context.theme);\n        if (this._settings && this._settings.equals(newSettings)) {\n            // nothing to do\n            return false;\n        }\n        this._settings = newSettings;\n        this._domNode.setTop(this._settings.top);\n        this._domNode.setRight(this._settings.right);\n        this._domNode.setWidth(this._settings.domWidth);\n        this._domNode.setHeight(this._settings.domHeight);\n        this._domNode.domNode.width = this._settings.canvasWidth;\n        this._domNode.domNode.height = this._settings.canvasHeight;\n        if (renderNow) {\n            this._render();\n        }\n        return true;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        return this._updateSettings(false);\n    }\n    onCursorStateChanged(e) {\n        this._cursorPositions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            this._cursorPositions[i] = e.selections[i].getPosition();\n        }\n        this._cursorPositions.sort(Position.compare);\n        return true;\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsOverviewRuler) {\n            return true;\n        }\n        return false;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onThemeChanged(e) {\n        return this._updateSettings(false);\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(editorCtx) {\n        this._render();\n    }\n    _render() {\n        const backgroundColor = this._settings.backgroundColor;\n        if (this._settings.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this._domNode.setBackgroundColor(backgroundColor ? Color.Format.CSS.formatHexA(backgroundColor) : '');\n            this._domNode.setDisplay('none');\n            return;\n        }\n        this._domNode.setDisplay('block');\n        const canvasWidth = this._settings.canvasWidth;\n        const canvasHeight = this._settings.canvasHeight;\n        const lineHeight = this._settings.lineHeight;\n        const viewLayout = this._context.viewLayout;\n        const outerHeight = this._context.viewLayout.getScrollHeight();\n        const heightRatio = canvasHeight / outerHeight;\n        const decorations = this._context.viewModel.getAllOverviewRulerDecorations(this._context.theme);\n        const minDecorationHeight = (6 /* Constants.MIN_DECORATION_HEIGHT */ * this._settings.pixelRatio) | 0;\n        const halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\n        const canvasCtx = this._domNode.domNode.getContext('2d');\n        if (backgroundColor) {\n            if (backgroundColor.isOpaque()) {\n                // We have a background color which is opaque, we can just paint the entire surface with it\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n            else {\n                // We have a background color which is transparent, we need to first clear the surface and\n                // then fill it\n                canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n        }\n        else {\n            // We don't have a background color\n            canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n        }\n        const x = this._settings.x;\n        const w = this._settings.w;\n        decorations.sort(OverviewRulerDecorationsGroup.cmp);\n        for (const decorationGroup of decorations) {\n            const color = decorationGroup.color;\n            const decorationGroupData = decorationGroup.data;\n            canvasCtx.fillStyle = color;\n            let prevLane = 0;\n            let prevY1 = 0;\n            let prevY2 = 0;\n            for (let i = 0, len = decorationGroupData.length / 3; i < len; i++) {\n                const lane = decorationGroupData[3 * i];\n                const startLineNumber = decorationGroupData[3 * i + 1];\n                const endLineNumber = decorationGroupData[3 * i + 2];\n                let y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\n                let y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\n                const height = y2 - y1;\n                if (height < minDecorationHeight) {\n                    let yCenter = ((y1 + y2) / 2) | 0;\n                    if (yCenter < halfMinDecorationHeight) {\n                        yCenter = halfMinDecorationHeight;\n                    }\n                    else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n                        yCenter = canvasHeight - halfMinDecorationHeight;\n                    }\n                    y1 = yCenter - halfMinDecorationHeight;\n                    y2 = yCenter + halfMinDecorationHeight;\n                }\n                if (y1 > prevY2 + 1 || lane !== prevLane) {\n                    // flush prev\n                    if (i !== 0) {\n                        canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n                    }\n                    prevLane = lane;\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n            }\n            canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n        }\n        // Draw cursors\n        if (!this._settings.hideCursor && this._settings.cursorColor) {\n            const cursorHeight = (2 * this._settings.pixelRatio) | 0;\n            const halfCursorHeight = (cursorHeight / 2) | 0;\n            const cursorX = this._settings.x[7 /* OverviewRulerLane.Full */];\n            const cursorW = this._settings.w[7 /* OverviewRulerLane.Full */];\n            canvasCtx.fillStyle = this._settings.cursorColor;\n            let prevY1 = -100;\n            let prevY2 = -100;\n            for (let i = 0, len = this._cursorPositions.length; i < len; i++) {\n                const cursor = this._cursorPositions[i];\n                let yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\n                if (yCenter < halfCursorHeight) {\n                    yCenter = halfCursorHeight;\n                }\n                else if (yCenter + halfCursorHeight > canvasHeight) {\n                    yCenter = canvasHeight - halfCursorHeight;\n                }\n                const y1 = yCenter - halfCursorHeight;\n                const y2 = y1 + cursorHeight;\n                if (y1 > prevY2 + 1) {\n                    // flush prev\n                    if (i !== 0) {\n                        canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n                    }\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n            }\n            canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n        }\n        if (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n            canvasCtx.beginPath();\n            canvasCtx.lineWidth = 1;\n            canvasCtx.strokeStyle = this._settings.borderColor;\n            canvasCtx.moveTo(0, 0);\n            canvasCtx.lineTo(0, canvasHeight);\n            canvasCtx.stroke();\n            canvasCtx.moveTo(0, 0);\n            canvasCtx.lineTo(canvasWidth, 0);\n            canvasCtx.stroke();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { OverviewZoneManager } from '../../../common/viewModel/overviewZoneManager.js';\nimport { ViewEventHandler } from '../../../common/viewEventHandler.js';\nexport class OverviewRuler extends ViewEventHandler {\n    constructor(context, cssClassName) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName(cssClassName);\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._zoneManager = new OverviewZoneManager((lineNumber) => this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber));\n        this._zoneManager.setDOMWidth(0);\n        this._zoneManager.setDOMHeight(0);\n        this._zoneManager.setOuterHeight(this._context.viewLayout.getScrollHeight());\n        this._zoneManager.setLineHeight(options.get(64 /* EditorOption.lineHeight */));\n        this._zoneManager.setPixelRatio(options.get(138 /* EditorOption.pixelRatio */));\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        if (e.hasChanged(64 /* EditorOption.lineHeight */)) {\n            this._zoneManager.setLineHeight(options.get(64 /* EditorOption.lineHeight */));\n            this._render();\n        }\n        if (e.hasChanged(138 /* EditorOption.pixelRatio */)) {\n            this._zoneManager.setPixelRatio(options.get(138 /* EditorOption.pixelRatio */));\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n        return true;\n    }\n    onFlushed(e) {\n        this._render();\n        return true;\n    }\n    onScrollChanged(e) {\n        if (e.scrollHeightChanged) {\n            this._zoneManager.setOuterHeight(e.scrollHeight);\n            this._render();\n        }\n        return true;\n    }\n    onZonesChanged(e) {\n        this._render();\n        return true;\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    setLayout(position) {\n        this._domNode.setTop(position.top);\n        this._domNode.setRight(position.right);\n        let hasChanged = false;\n        hasChanged = this._zoneManager.setDOMWidth(position.width) || hasChanged;\n        hasChanged = this._zoneManager.setDOMHeight(position.height) || hasChanged;\n        if (hasChanged) {\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n    }\n    setZones(zones) {\n        this._zoneManager.setZones(zones);\n        this._render();\n    }\n    _render() {\n        if (this._zoneManager.getOuterHeight() === 0) {\n            return false;\n        }\n        const width = this._zoneManager.getCanvasWidth();\n        const height = this._zoneManager.getCanvasHeight();\n        const colorZones = this._zoneManager.resolveColorZones();\n        const id2Color = this._zoneManager.getId2Color();\n        const ctx = this._domNode.domNode.getContext('2d');\n        ctx.clearRect(0, 0, width, height);\n        if (colorZones.length > 0) {\n            this._renderOneLane(ctx, colorZones, id2Color, width);\n        }\n        return true;\n    }\n    _renderOneLane(ctx, colorZones, id2Color, width) {\n        let currentColorId = 0;\n        let currentFrom = 0;\n        let currentTo = 0;\n        for (const zone of colorZones) {\n            const zoneColorId = zone.colorId;\n            const zoneFrom = zone.from;\n            const zoneTo = zone.to;\n            if (zoneColorId !== currentColorId) {\n                ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                currentColorId = zoneColorId;\n                ctx.fillStyle = id2Color[currentColorId];\n                currentFrom = zoneFrom;\n                currentTo = zoneTo;\n            }\n            else {\n                if (currentTo >= zoneFrom) {\n                    currentTo = Math.max(currentTo, zoneTo);\n                }\n                else {\n                    ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                    currentFrom = zoneFrom;\n                    currentTo = zoneTo;\n                }\n            }\n        }\n        ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './rulers.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Rulers extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('view-rulers');\n        this._renderedRulers = [];\n        const options = this._context.configuration.options;\n        this._rulers = options.get(98 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(48 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._rulers = options.get(98 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(48 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    _ensureRulersCount() {\n        const currentCount = this._renderedRulers.length;\n        const desiredCount = this._rulers.length;\n        if (currentCount === desiredCount) {\n            // Nothing to do\n            return;\n        }\n        if (currentCount < desiredCount) {\n            const { tabSize } = this._context.viewModel.model.getOptions();\n            const rulerWidth = tabSize;\n            let addCount = desiredCount - currentCount;\n            while (addCount > 0) {\n                const node = createFastDomNode(document.createElement('div'));\n                node.setClassName('view-ruler');\n                node.setWidth(rulerWidth);\n                this.domNode.appendChild(node);\n                this._renderedRulers.push(node);\n                addCount--;\n            }\n            return;\n        }\n        let removeCount = currentCount - desiredCount;\n        while (removeCount > 0) {\n            const node = this._renderedRulers.pop();\n            this.domNode.removeChild(node);\n            removeCount--;\n        }\n    }\n    render(ctx) {\n        this._ensureRulersCount();\n        for (let i = 0, len = this._rulers.length; i < len; i++) {\n            const node = this._renderedRulers[i];\n            const ruler = this._rulers[i];\n            node.setBoxShadow(ruler.color ? `1px 0 0 0 ${ruler.color} inset` : ``);\n            node.setHeight(Math.min(ctx.scrollHeight, 1000000));\n            node.setLeft(ruler.column * this._typicalHalfwidthCharacterWidth);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class ScrollDecorationViewPart extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._scrollTop = 0;\n        this._width = 0;\n        this._updateWidth();\n        this._shouldShow = false;\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(99 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n    }\n    dispose() {\n        super.dispose();\n    }\n    _updateShouldShow() {\n        const newShouldShow = (this._useShadows && this._scrollTop > 0);\n        if (this._shouldShow !== newShouldShow) {\n            this._shouldShow = newShouldShow;\n            return true;\n        }\n        return false;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _updateWidth() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        if (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n            this._width = layoutInfo.width;\n        }\n        else {\n            this._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(99 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._updateWidth();\n        this._updateShouldShow();\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollTop = e.scrollTop;\n        return this._updateShouldShow();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._width);\n        this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nclass HorizontalRangeWithStyle {\n    constructor(other) {\n        this.left = other.left;\n        this.width = other.width;\n        this.startStyle = null;\n        this.endStyle = null;\n    }\n}\nclass LineVisibleRangesWithStyle {\n    constructor(lineNumber, ranges) {\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nfunction toStyledRange(item) {\n    return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\nexport class SelectionsOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._previousFrameVisibleRangesWithStyle = [];\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._roundedSelection = options.get(97 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(48 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._selections = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._roundedSelection = options.get(97 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(48 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true; //e.inlineDecorationsChanged;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _visibleRangesHaveGaps(linesVisibleRanges) {\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = linesVisibleRanges[i];\n            if (lineVisibleRanges.ranges.length > 1) {\n                // There are two ranges on the same line\n                return true;\n            }\n        }\n        return false;\n    }\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n        const epsilon = this._typicalHalfwidthCharacterWidth / 4;\n        let previousFrameTop = null;\n        let previousFrameBottom = null;\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n            const topLineNumber = linesVisibleRanges[0].lineNumber;\n            if (topLineNumber === viewport.startLineNumber) {\n                for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n                    if (previousFrame[i].lineNumber === topLineNumber) {\n                        previousFrameTop = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n            if (bottomLineNumber === viewport.endLineNumber) {\n                for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\n                        previousFrameBottom = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            if (previousFrameTop && !previousFrameTop.startStyle) {\n                previousFrameTop = null;\n            }\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\n                previousFrameBottom = null;\n            }\n        }\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            // We know for a fact that there is precisely one range on each line\n            const curLineRange = linesVisibleRanges[i].ranges[0];\n            const curLeft = curLineRange.left;\n            const curRight = curLineRange.left + curLineRange.width;\n            const startStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            const endStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            if (i > 0) {\n                // Look above\n                const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n                const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n                if (abs(curLeft - prevLeft) < epsilon) {\n                    startStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curLeft > prevLeft) {\n                    startStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - prevRight) < epsilon) {\n                    endStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (prevLeft < curRight && curRight < prevRight) {\n                    endStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameTop) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.top = previousFrameTop.startStyle.top;\n                endStyle.top = previousFrameTop.endStyle.top;\n            }\n            if (i + 1 < len) {\n                // Look below\n                const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n                const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n                if (abs(curLeft - nextLeft) < epsilon) {\n                    startStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (nextLeft < curLeft && curLeft < nextRight) {\n                    startStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - nextRight) < epsilon) {\n                    endStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curRight < nextRight) {\n                    endStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameBottom) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\n            }\n            curLineRange.startStyle = startStyle;\n            curLineRange.endStyle = endStyle;\n        }\n    }\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n        const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n        const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n        const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n        if (!visibleRangesHaveGaps && this._roundedSelection) {\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n        }\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n        return linesVisibleRanges;\n    }\n    _createSelectionPiece(top, height, className, left, width) {\n        return ('<div class=\"cslr '\n            + className\n            + '\" style=\"top:'\n            + top.toString()\n            + 'px;left:'\n            + left.toString()\n            + 'px;width:'\n            + width.toString()\n            + 'px;height:'\n            + height\n            + 'px;\"></div>');\n    }\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n        if (visibleRanges.length === 0) {\n            return;\n        }\n        const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n        const fullLineHeight = (this._lineHeight).toString();\n        const reducedLineHeight = (this._lineHeight - 1).toString();\n        const firstLineNumber = visibleRanges[0].lineNumber;\n        const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n        for (let i = 0, len = visibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = visibleRanges[i];\n            const lineNumber = lineVisibleRanges.lineNumber;\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const lineHeight = hasMultipleSelections ? (lineNumber === lastLineNumber || lineNumber === firstLineNumber ? reducedLineHeight : fullLineHeight) : fullLineHeight;\n            const top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n            let innerCornerOutput = '';\n            let restOfSelectionOutput = '';\n            for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n                const visibleRange = lineVisibleRanges.ranges[j];\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 1 /* CornerStyle.INTERN */ || startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the left\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (startStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                        }\n                        if (startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                    if (endStyle.top === 1 /* CornerStyle.INTERN */ || endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the right\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (endStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                        }\n                        if (endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                }\n                let className = SelectionsOverlay.SELECTION_CLASS_NAME;\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                    }\n                    if (startStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                    }\n                    if (endStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                    }\n                    if (endStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                    }\n                }\n                restOfSelectionOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left, visibleRange.width);\n            }\n            output2[lineIndex][0] += innerCornerOutput;\n            output2[lineIndex][1] += restOfSelectionOutput;\n        }\n    }\n    prepareRender(ctx) {\n        // Build HTML for inner corners separate from HTML for the rest of selections,\n        // as the inner corner HTML can interfere with that of other selections.\n        // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n        const output = [];\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = ['', ''];\n        }\n        const thisFrameVisibleRangesWithStyle = [];\n        for (let i = 0, len = this._selections.length; i < len; i++) {\n            const selection = this._selections[i];\n            if (selection.isEmpty()) {\n                thisFrameVisibleRangesWithStyle[i] = null;\n                continue;\n            }\n            const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n        }\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n        this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nSelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\nSelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\nSelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\nSelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\nSelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\nSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\nSelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\nregisterThemingParticipant((theme, collector) => {\n    const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n    if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n        collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n    }\n});\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass ViewCursorRenderData {\n    constructor(top, left, paddingLeft, width, height, textContent, textContentClassName) {\n        this.top = top;\n        this.left = left;\n        this.paddingLeft = paddingLeft;\n        this.width = width;\n        this.height = height;\n        this.textContent = textContent;\n        this.textContentClassName = textContentClassName;\n    }\n}\nexport class ViewCursor {\n    constructor(context) {\n        this._context = context;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(26 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(29 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        this._isVisible = true;\n        // Create the dom node\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this._domNode.setHeight(this._lineHeight);\n        this._domNode.setTop(0);\n        this._domNode.setLeft(0);\n        applyFontInfo(this._domNode, fontInfo);\n        this._domNode.setDisplay('none');\n        this._position = new Position(1, 1);\n        this._lastRenderedContent = '';\n        this._renderData = null;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return this._position;\n    }\n    show() {\n        if (!this._isVisible) {\n            this._domNode.setVisibility('inherit');\n            this._isVisible = true;\n        }\n    }\n    hide() {\n        if (this._isVisible) {\n            this._domNode.setVisibility('hidden');\n            this._isVisible = false;\n        }\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(26 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(29 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        applyFontInfo(this._domNode, fontInfo);\n        return true;\n    }\n    onCursorPositionChanged(position, pauseAnimation) {\n        if (pauseAnimation) {\n            this._domNode.domNode.style.transitionProperty = 'none';\n        }\n        else {\n            this._domNode.domNode.style.transitionProperty = '';\n        }\n        this._position = position;\n        return true;\n    }\n    /**\n     * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n     * Also returns the next grapheme.\n     */\n    _getGraphemeAwarePosition() {\n        const { lineNumber, column } = this._position;\n        const lineContent = this._context.viewModel.getLineContent(lineNumber);\n        const [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n        return [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n    }\n    _prepareRender(ctx) {\n        let textContent = '';\n        let textContentClassName = '';\n        const [position, nextGrapheme] = this._getGraphemeAwarePosition();\n        if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n            const visibleRange = ctx.visibleRangeForPosition(position);\n            if (!visibleRange || visibleRange.outsideRenderedLine) {\n                // Outside viewport\n                return null;\n            }\n            let width;\n            if (this._cursorStyle === TextEditorCursorStyle.Line) {\n                width = dom.computeScreenAwareSize(this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n                if (width > 2) {\n                    textContent = nextGrapheme;\n                    textContentClassName = this._getTokenClassName(position);\n                }\n            }\n            else {\n                width = dom.computeScreenAwareSize(1);\n            }\n            let left = visibleRange.left;\n            let paddingLeft = 0;\n            if (width >= 2 && left >= 1) {\n                // shift the cursor a bit between the characters\n                paddingLeft = 1;\n                left -= paddingLeft;\n            }\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n            return new ViewCursorRenderData(top, left, paddingLeft, width, this._lineHeight, textContent, textContentClassName);\n        }\n        const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n        if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n        if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const range = firstVisibleRangeForCharacter.ranges[0];\n        const width = (nextGrapheme === '\\t'\n            ? this._typicalHalfwidthCharacterWidth\n            : (range.width < 1\n                ? this._typicalHalfwidthCharacterWidth\n                : range.width));\n        if (this._cursorStyle === TextEditorCursorStyle.Block) {\n            textContent = nextGrapheme;\n            textContentClassName = this._getTokenClassName(position);\n        }\n        let top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n        let height = this._lineHeight;\n        // Underline might interfere with clicking\n        if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n            top += this._lineHeight - 2;\n            height = 2;\n        }\n        return new ViewCursorRenderData(top, range.left, 0, width, height, textContent, textContentClassName);\n    }\n    _getTokenClassName(position) {\n        const lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n        const tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n        return lineData.tokens.getClassName(tokenIndex);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRender(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            this._domNode.setDisplay('none');\n            return null;\n        }\n        if (this._lastRenderedContent !== this._renderData.textContent) {\n            this._lastRenderedContent = this._renderData.textContent;\n            this._domNode.domNode.textContent = this._lastRenderedContent;\n        }\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n        this._domNode.setDisplay('block');\n        this._domNode.setTop(this._renderData.top);\n        this._domNode.setLeft(this._renderData.left);\n        this._domNode.setPaddingLeft(this._renderData.paddingLeft);\n        this._domNode.setWidth(this._renderData.width);\n        this._domNode.setLineHeight(this._renderData.height);\n        this._domNode.setHeight(this._renderData.height);\n        return {\n            domNode: this._domNode.domNode,\n            position: this._position,\n            contentLeft: this._renderData.left,\n            height: this._renderData.height,\n            width: 2\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewCursors.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewCursor } from './viewCursor.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { editorCursorBackground, editorCursorForeground } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nexport class ViewCursors extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(88 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(24 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(26 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(25 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._selectionIsEmpty = true;\n        this._isComposingInput = false;\n        this._isVisible = false;\n        this._primaryCursor = new ViewCursor(this._context);\n        this._secondaryCursors = [];\n        this._renderData = [];\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateDomClassName();\n        this._domNode.appendChild(this._primaryCursor.getDomNode());\n        this._startCursorBlinkAnimation = new TimeoutTimer();\n        this._cursorFlatBlinkInterval = new IntervalTimer();\n        this._blinkingEnabled = false;\n        this._editorHasFocus = false;\n        this._updateBlinking();\n    }\n    dispose() {\n        super.dispose();\n        this._startCursorBlinkAnimation.dispose();\n        this._cursorFlatBlinkInterval.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        this._isComposingInput = true;\n        this._updateBlinking();\n        return true;\n    }\n    onCompositionEnd(e) {\n        this._isComposingInput = false;\n        this._updateBlinking();\n        return true;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(88 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(24 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(26 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(25 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._updateBlinking();\n        this._updateDomClassName();\n        this._primaryCursor.onConfigurationChanged(e);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    _onCursorPositionChanged(position, secondaryPositions, reason) {\n        const pauseAnimation = (this._secondaryCursors.length !== secondaryPositions.length\n            || (this._cursorSmoothCaretAnimation === 'explicit' && reason !== 3 /* CursorChangeReason.Explicit */));\n        this._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n        this._updateBlinking();\n        if (this._secondaryCursors.length < secondaryPositions.length) {\n            // Create new cursors\n            const addCnt = secondaryPositions.length - this._secondaryCursors.length;\n            for (let i = 0; i < addCnt; i++) {\n                const newCursor = new ViewCursor(this._context);\n                this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n                this._secondaryCursors.push(newCursor);\n            }\n        }\n        else if (this._secondaryCursors.length > secondaryPositions.length) {\n            // Remove some cursors\n            const removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n            for (let i = 0; i < removeCnt; i++) {\n                this._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n                this._secondaryCursors.splice(0, 1);\n            }\n        }\n        for (let i = 0; i < secondaryPositions.length; i++) {\n            this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n        }\n    }\n    onCursorStateChanged(e) {\n        const positions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            positions[i] = e.selections[i].getPosition();\n        }\n        this._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n        const selectionIsEmpty = e.selections[0].isEmpty();\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            this._updateDomClassName();\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        this._editorHasFocus = e.isFocused;\n        this._updateBlinking();\n        return false;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onTokensChanged(e) {\n        const shouldRender = (position) => {\n            for (let i = 0, len = e.ranges.length; i < len; i++) {\n                if (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        if (shouldRender(this._primaryCursor.getPosition())) {\n            return true;\n        }\n        for (const secondaryCursor of this._secondaryCursors) {\n            if (shouldRender(secondaryCursor.getPosition())) {\n                return true;\n            }\n        }\n        return false;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // ---- blinking logic\n    _getCursorBlinking() {\n        if (this._isComposingInput) {\n            // avoid double cursors\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (!this._editorHasFocus) {\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (this._readOnly) {\n            return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n        }\n        return this._cursorBlinking;\n    }\n    _updateBlinking() {\n        this._startCursorBlinkAnimation.cancel();\n        this._cursorFlatBlinkInterval.cancel();\n        const blinkingStyle = this._getCursorBlinking();\n        // hidden and solid are special as they involve no animations\n        const isHidden = (blinkingStyle === 0 /* TextEditorCursorBlinkingStyle.Hidden */);\n        const isSolid = (blinkingStyle === 5 /* TextEditorCursorBlinkingStyle.Solid */);\n        if (isHidden) {\n            this._hide();\n        }\n        else {\n            this._show();\n        }\n        this._blinkingEnabled = false;\n        this._updateDomClassName();\n        if (!isHidden && !isSolid) {\n            if (blinkingStyle === 1 /* TextEditorCursorBlinkingStyle.Blink */) {\n                // flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n                this._cursorFlatBlinkInterval.cancelAndSet(() => {\n                    if (this._isVisible) {\n                        this._hide();\n                    }\n                    else {\n                        this._show();\n                    }\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n            else {\n                this._startCursorBlinkAnimation.setIfNotSet(() => {\n                    this._blinkingEnabled = true;\n                    this._updateDomClassName();\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n        }\n    }\n    // --- end blinking logic\n    _updateDomClassName() {\n        this._domNode.setClassName(this._getClassName());\n    }\n    _getClassName() {\n        let result = 'cursors-layer';\n        if (!this._selectionIsEmpty) {\n            result += ' has-selection';\n        }\n        switch (this._cursorStyle) {\n            case TextEditorCursorStyle.Line:\n                result += ' cursor-line-style';\n                break;\n            case TextEditorCursorStyle.Block:\n                result += ' cursor-block-style';\n                break;\n            case TextEditorCursorStyle.Underline:\n                result += ' cursor-underline-style';\n                break;\n            case TextEditorCursorStyle.LineThin:\n                result += ' cursor-line-thin-style';\n                break;\n            case TextEditorCursorStyle.BlockOutline:\n                result += ' cursor-block-outline-style';\n                break;\n            case TextEditorCursorStyle.UnderlineThin:\n                result += ' cursor-underline-thin-style';\n                break;\n            default:\n                result += ' cursor-line-style';\n        }\n        if (this._blinkingEnabled) {\n            switch (this._getCursorBlinking()) {\n                case 1 /* TextEditorCursorBlinkingStyle.Blink */:\n                    result += ' cursor-blink';\n                    break;\n                case 2 /* TextEditorCursorBlinkingStyle.Smooth */:\n                    result += ' cursor-smooth';\n                    break;\n                case 3 /* TextEditorCursorBlinkingStyle.Phase */:\n                    result += ' cursor-phase';\n                    break;\n                case 4 /* TextEditorCursorBlinkingStyle.Expand */:\n                    result += ' cursor-expand';\n                    break;\n                case 5 /* TextEditorCursorBlinkingStyle.Solid */:\n                    result += ' cursor-solid';\n                    break;\n                default:\n                    result += ' cursor-solid';\n            }\n        }\n        else {\n            result += ' cursor-solid';\n        }\n        if (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n            result += ' cursor-smooth-caret-animation';\n        }\n        return result;\n    }\n    _show() {\n        this._primaryCursor.show();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].show();\n        }\n        this._isVisible = true;\n    }\n    _hide() {\n        this._primaryCursor.hide();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].hide();\n        }\n        this._isVisible = false;\n    }\n    // ---- IViewPart implementation\n    prepareRender(ctx) {\n        this._primaryCursor.prepareRender(ctx);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const renderData = [];\n        let renderDataLen = 0;\n        const primaryRenderData = this._primaryCursor.render(ctx);\n        if (primaryRenderData) {\n            renderData[renderDataLen++] = primaryRenderData;\n        }\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            const secondaryRenderData = this._secondaryCursors[i].render(ctx);\n            if (secondaryRenderData) {\n                renderData[renderDataLen++] = secondaryRenderData;\n            }\n        }\n        this._renderData = renderData;\n    }\n    getLastRenderData() {\n        return this._renderData;\n    }\n}\nViewCursors.BLINK_INTERVAL = 500;\nregisterThemingParticipant((theme, collector) => {\n    const caret = theme.getColor(editorCursorForeground);\n    if (caret) {\n        let caretBackground = theme.getColor(editorCursorBackground);\n        if (!caretBackground) {\n            caretBackground = caret.opposite();\n        }\n        collector.addRule(`.monaco-editor .cursors-layer .cursor { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n        if (isHighContrast(theme.type)) {\n            collector.addRule(`.monaco-editor .cursors-layer.has-selection .cursor { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\nexport class ViewZones extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('view-zones');\n        this.domNode.setPosition('absolute');\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.marginDomNode = createFastDomNode(document.createElement('div'));\n        this.marginDomNode.setClassName('margin-view-zones');\n        this.marginDomNode.setPosition('absolute');\n        this.marginDomNode.setAttribute('role', 'presentation');\n        this.marginDomNode.setAttribute('aria-hidden', 'true');\n        this._zones = {};\n    }\n    dispose() {\n        super.dispose();\n        this._zones = {};\n    }\n    // ---- begin view event handlers\n    _recomputeWhitespacesProps() {\n        const whitespaces = this._context.viewLayout.getWhitespaces();\n        const oldWhitespaces = new Map();\n        for (const whitespace of whitespaces) {\n            oldWhitespaces.set(whitespace.id, whitespace);\n        }\n        let hadAChange = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const keys = Object.keys(this._zones);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const zone = this._zones[id];\n                const props = this._computeWhitespaceProps(zone.delegate);\n                zone.isInHiddenArea = props.isInHiddenArea;\n                const oldWhitespace = oldWhitespaces.get(id);\n                if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n                    whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n                    this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n                    hadAChange = true;\n                }\n            }\n        });\n        return hadAChange;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        if (e.hasChanged(64 /* EditorOption.lineHeight */)) {\n            this._recomputeWhitespacesProps();\n        }\n        return true;\n    }\n    onLineMappingChanged(e) {\n        return this._recomputeWhitespacesProps();\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _getZoneOrdinal(zone) {\n        var _a, _b;\n        return (_b = (_a = zone.ordinal) !== null && _a !== void 0 ? _a : zone.afterColumn) !== null && _b !== void 0 ? _b : 10000;\n    }\n    _computeWhitespaceProps(zone) {\n        if (zone.afterLineNumber === 0) {\n            return {\n                isInHiddenArea: false,\n                afterViewLineNumber: 0,\n                heightInPx: this._heightInPixels(zone),\n                minWidthInPx: this._minWidthInPixels(zone)\n            };\n        }\n        let zoneAfterModelPosition;\n        if (typeof zone.afterColumn !== 'undefined') {\n            zoneAfterModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: zone.afterColumn\n            });\n        }\n        else {\n            const validAfterLineNumber = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: 1\n            }).lineNumber;\n            zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.viewModel.model.getLineMaxColumn(validAfterLineNumber));\n        }\n        let zoneBeforeModelPosition;\n        if (zoneAfterModelPosition.column === this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber + 1,\n                column: 1\n            });\n        }\n        else {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber,\n                column: zoneAfterModelPosition.column + 1\n            });\n        }\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity);\n        const isVisible = zone.showInHiddenAreas || this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n        return {\n            isInHiddenArea: !isVisible,\n            afterViewLineNumber: viewPosition.lineNumber,\n            heightInPx: (isVisible ? this._heightInPixels(zone) : 0),\n            minWidthInPx: this._minWidthInPixels(zone)\n        };\n    }\n    changeViewZones(callback) {\n        let zonesHaveChanged = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const changeAccessor = {\n                addZone: (zone) => {\n                    zonesHaveChanged = true;\n                    return this._addZone(whitespaceAccessor, zone);\n                },\n                removeZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n                },\n                layoutZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n                }\n            };\n            safeInvoke1Arg(callback, changeAccessor);\n            // Invalidate changeAccessor\n            changeAccessor.addZone = invalidFunc;\n            changeAccessor.removeZone = invalidFunc;\n            changeAccessor.layoutZone = invalidFunc;\n        });\n        return zonesHaveChanged;\n    }\n    _addZone(whitespaceAccessor, zone) {\n        const props = this._computeWhitespaceProps(zone);\n        const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n        const myZone = {\n            whitespaceId: whitespaceId,\n            delegate: zone,\n            isInHiddenArea: props.isInHiddenArea,\n            isVisible: false,\n            domNode: createFastDomNode(zone.domNode),\n            marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n        };\n        this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n        myZone.domNode.setPosition('absolute');\n        myZone.domNode.domNode.style.width = '100%';\n        myZone.domNode.setDisplay('none');\n        myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n        this.domNode.appendChild(myZone.domNode);\n        if (myZone.marginDomNode) {\n            myZone.marginDomNode.setPosition('absolute');\n            myZone.marginDomNode.domNode.style.width = '100%';\n            myZone.marginDomNode.setDisplay('none');\n            myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n            this.marginDomNode.appendChild(myZone.marginDomNode);\n        }\n        this._zones[myZone.whitespaceId] = myZone;\n        this.setShouldRender();\n        return myZone.whitespaceId;\n    }\n    _removeZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            delete this._zones[id];\n            whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\n            zone.domNode.removeAttribute('monaco-view-zone');\n            zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n                zone.marginDomNode.removeAttribute('monaco-view-zone');\n                zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode);\n            }\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    _layoutZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            const props = this._computeWhitespaceProps(zone.delegate);\n            zone.isInHiddenArea = props.isInHiddenArea;\n            // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n            whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n            // TODO@Alex: change `newOrdinal` too\n            this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    shouldSuppressMouseDownOnViewZone(id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            return Boolean(zone.delegate.suppressMouseDown);\n        }\n        return false;\n    }\n    _heightInPixels(zone) {\n        if (typeof zone.heightInPx === 'number') {\n            return zone.heightInPx;\n        }\n        if (typeof zone.heightInLines === 'number') {\n            return this._lineHeight * zone.heightInLines;\n        }\n        return this._lineHeight;\n    }\n    _minWidthInPixels(zone) {\n        if (typeof zone.minWidthInPx === 'number') {\n            return zone.minWidthInPx;\n        }\n        return 0;\n    }\n    _safeCallOnComputedHeight(zone, height) {\n        if (typeof zone.onComputedHeight === 'function') {\n            try {\n                zone.onComputedHeight(height);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    _safeCallOnDomNodeTop(zone, top) {\n        if (typeof zone.onDomNodeTop === 'function') {\n            try {\n                zone.onDomNodeTop(top);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n        const visibleZones = {};\n        let hasVisibleZone = false;\n        for (const visibleWhitespace of visibleWhitespaces) {\n            if (this._zones[visibleWhitespace.id].isInHiddenArea) {\n                continue;\n            }\n            visibleZones[visibleWhitespace.id] = visibleWhitespace;\n            hasVisibleZone = true;\n        }\n        const keys = Object.keys(this._zones);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            const zone = this._zones[id];\n            let newTop = 0;\n            let newHeight = 0;\n            let newDisplay = 'none';\n            if (visibleZones.hasOwnProperty(id)) {\n                newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n                newHeight = visibleZones[id].height;\n                newDisplay = 'block';\n                // zone is visible\n                if (!zone.isVisible) {\n                    zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n                    zone.isVisible = true;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n            }\n            else {\n                if (zone.isVisible) {\n                    zone.domNode.removeAttribute('monaco-visible-view-zone');\n                    zone.isVisible = false;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n            }\n            zone.domNode.setTop(newTop);\n            zone.domNode.setHeight(newHeight);\n            zone.domNode.setDisplay(newDisplay);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.setTop(newTop);\n                zone.marginDomNode.setHeight(newHeight);\n                zone.marginDomNode.setDisplay(newDisplay);\n            }\n        }\n        if (hasVisibleZone) {\n            this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n            this.marginDomNode.setWidth(this._contentLeft);\n        }\n    }\n}\nfunction safeInvoke1Arg(func, arg1) {\n    try {\n        return func(arg1);\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport './blockDecorations.css';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class BlockDecorations extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.blocks = [];\n        this.contentWidth = -1;\n        this.contentLeft = 0;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('blockDecorations-container');\n        this.update();\n    }\n    update() {\n        let didChange = false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        const newContentWidth = layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n        if (this.contentWidth !== newContentWidth) {\n            this.contentWidth = newContentWidth;\n            didChange = true;\n        }\n        const newContentLeft = layoutInfo.contentLeft;\n        if (this.contentLeft !== newContentLeft) {\n            this.contentLeft = newContentLeft;\n            didChange = true;\n        }\n        return didChange;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return this.update();\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollLeftChanged;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        var _a;\n        let count = 0;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const decoration of decorations) {\n            if (!decoration.options.blockClassName) {\n                continue;\n            }\n            let block = this.blocks[count];\n            if (!block) {\n                block = this.blocks[count] = createFastDomNode(document.createElement('div'));\n                this.domNode.appendChild(block);\n            }\n            let top;\n            let bottom;\n            if (decoration.options.blockIsAfterEnd) {\n                // range must be empty\n                top = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, false);\n                bottom = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            else {\n                top = ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, true);\n                bottom = decoration.range.isEmpty() && !decoration.options.blockDoesNotCollapse\n                    ? ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, false)\n                    : ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            const [paddingTop, paddingRight, paddingBottom, paddingLeft] = (_a = decoration.options.blockPadding) !== null && _a !== void 0 ? _a : [0, 0, 0, 0];\n            block.setClassName('blockDecorations-block ' + decoration.options.blockClassName);\n            block.setLeft(this.contentLeft - paddingLeft);\n            block.setWidth(this.contentWidth + paddingLeft + paddingRight);\n            block.setTop(top - ctx.scrollTop - paddingTop);\n            block.setHeight(bottom - top + paddingTop + paddingBottom);\n            count++;\n        }\n        for (let i = count; i < this.blocks.length; i++) {\n            this.blocks[i].domNode.remove();\n        }\n        this.blocks.length = count;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './whitespace.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { LineRange } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorWhitespaces } from '../../../common/core/editorColorRegistry.js';\nexport class WhitespaceOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._options = new WhitespaceOptions(this._context.configuration);\n        this._selection = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const newOptions = new WhitespaceOptions(this._context.configuration);\n        if (this._options.equals(newOptions)) {\n            return e.hasChanged(140 /* EditorOption.layoutInfo */);\n        }\n        this._options = newOptions;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selection = e.selections;\n        if (this._options.renderWhitespace === 'selection') {\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._options.renderWhitespace === 'none') {\n            this._renderResult = null;\n            return;\n        }\n        const startLineNumber = ctx.visibleRange.startLineNumber;\n        const endLineNumber = ctx.visibleRange.endLineNumber;\n        const lineCount = endLineNumber - startLineNumber + 1;\n        const needed = new Array(lineCount);\n        for (let i = 0; i < lineCount; i++) {\n            needed[i] = true;\n        }\n        const viewportData = this._context.viewModel.getMinimapLinesRenderingData(ctx.viewportData.startLineNumber, ctx.viewportData.endLineNumber, needed);\n        this._renderResult = [];\n        for (let lineNumber = ctx.viewportData.startLineNumber; lineNumber <= ctx.viewportData.endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - ctx.viewportData.startLineNumber;\n            const lineData = viewportData.data[lineIndex];\n            let selectionsOnLine = null;\n            if (this._options.renderWhitespace === 'selection') {\n                const selections = this._selection;\n                for (const selection of selections) {\n                    if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                        // Selection does not intersect line\n                        continue;\n                    }\n                    const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                    const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                    if (startColumn < endColumn) {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n            this._renderResult[lineIndex] = this._applyRenderWhitespace(ctx, lineNumber, selectionsOnLine, lineData);\n        }\n    }\n    _applyRenderWhitespace(ctx, lineNumber, selections, lineData) {\n        if (this._options.renderWhitespace === 'selection' && !selections) {\n            return '';\n        }\n        if (this._options.renderWhitespace === 'trailing' && lineData.continuesWithWrappedLine) {\n            return '';\n        }\n        const color = this._context.theme.getColor(editorWhitespaces);\n        const USE_SVG = this._options.renderWithSVG;\n        const lineContent = lineData.content;\n        const len = (this._options.stopRenderingLineAfter === -1 ? lineContent.length : Math.min(this._options.stopRenderingLineAfter, lineContent.length));\n        const continuesWithWrappedLine = lineData.continuesWithWrappedLine;\n        const fauxIndentLength = lineData.minColumn - 1;\n        const onlyBoundary = (this._options.renderWhitespace === 'boundary');\n        const onlyTrailing = (this._options.renderWhitespace === 'trailing');\n        const lineHeight = this._options.lineHeight;\n        const middotWidth = this._options.middotWidth;\n        const wsmiddotWidth = this._options.wsmiddotWidth;\n        const spaceWidth = this._options.spaceWidth;\n        const wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n        const middotDiff = Math.abs(middotWidth - spaceWidth);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        // U+00B7 - MIDDLE DOT\n        const renderSpaceCharCode = (wsmiddotDiff < middotDiff ? 0x2E31 : 0xB7);\n        const canUseHalfwidthRightwardsArrow = this._options.canUseHalfwidthRightwardsArrow;\n        let result = '';\n        let lineIsEmptyOrWhitespace = false;\n        let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n        let lastNonWhitespaceIndex;\n        if (firstNonWhitespaceIndex === -1) {\n            lineIsEmptyOrWhitespace = true;\n            firstNonWhitespaceIndex = len;\n            lastNonWhitespaceIndex = len;\n        }\n        else {\n            lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n        }\n        let currentSelectionIndex = 0;\n        let currentSelection = selections && selections[currentSelectionIndex];\n        let maxLeft = 0;\n        for (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n            const chCode = lineContent.charCodeAt(charIndex);\n            if (currentSelection && charIndex >= currentSelection.endOffset) {\n                currentSelectionIndex++;\n                currentSelection = selections && selections[currentSelectionIndex];\n            }\n            if (chCode !== 9 /* CharCode.Tab */ && chCode !== 32 /* CharCode.Space */) {\n                continue;\n            }\n            if (onlyTrailing && !lineIsEmptyOrWhitespace && charIndex <= lastNonWhitespaceIndex) {\n                // If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n                continue;\n            }\n            if (onlyBoundary && charIndex >= firstNonWhitespaceIndex && charIndex <= lastNonWhitespaceIndex && chCode === 32 /* CharCode.Space */) {\n                // rendering only boundary whitespace\n                const prevChCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n                if (prevChCode !== 32 /* CharCode.Space */ && nextChCode !== 32 /* CharCode.Space */) {\n                    continue;\n                }\n            }\n            if (onlyBoundary && continuesWithWrappedLine && charIndex === len - 1) {\n                const prevCharCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const isSingleTrailingSpace = (chCode === 32 /* CharCode.Space */ && (prevCharCode !== 32 /* CharCode.Space */ && prevCharCode !== 9 /* CharCode.Tab */));\n                if (isSingleTrailingSpace) {\n                    continue;\n                }\n            }\n            if (selections && (!currentSelection || currentSelection.startOffset > charIndex || currentSelection.endOffset <= charIndex)) {\n                // If rendering whitespace on selection, check that the charIndex falls within a selection\n                continue;\n            }\n            const visibleRange = ctx.visibleRangeForPosition(new Position(lineNumber, charIndex + 1));\n            if (!visibleRange) {\n                continue;\n            }\n            if (USE_SVG) {\n                maxLeft = Math.max(maxLeft, visibleRange.left);\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += this._renderArrow(lineHeight, spaceWidth, visibleRange.left);\n                }\n                else {\n                    result += `<circle cx=\"${(visibleRange.left + spaceWidth / 2).toFixed(2)}\" cy=\"${(lineHeight / 2).toFixed(2)}\" r=\"${(spaceWidth / 7).toFixed(2)}\" />`;\n                }\n            }\n            else {\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${canUseHalfwidthRightwardsArrow ? String.fromCharCode(0xFFEB) : String.fromCharCode(0x2192)}</div>`;\n                }\n                else {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${String.fromCharCode(renderSpaceCharCode)}</div>`;\n                }\n            }\n        }\n        if (USE_SVG) {\n            maxLeft = Math.round(maxLeft + spaceWidth);\n            return (`<svg style=\"position:absolute;width:${maxLeft}px;height:${lineHeight}px\" viewBox=\"0 0 ${maxLeft} ${lineHeight}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"${color}\">`\n                + result\n                + `</svg>`);\n        }\n        return result;\n    }\n    _renderArrow(lineHeight, spaceWidth, left) {\n        const strokeWidth = spaceWidth / 7;\n        const width = spaceWidth;\n        const dy = lineHeight / 2;\n        const dx = left;\n        const p1 = { x: 0, y: strokeWidth / 2 };\n        const p2 = { x: 100 / 125 * width, y: p1.y };\n        const p3 = { x: p2.x - 0.2 * p2.x, y: p2.y + 0.2 * p2.x };\n        const p4 = { x: p3.x + 0.1 * p2.x, y: p3.y + 0.1 * p2.x };\n        const p5 = { x: p4.x + 0.35 * p2.x, y: p4.y - 0.35 * p2.x };\n        const p6 = { x: p5.x, y: -p5.y };\n        const p7 = { x: p4.x, y: -p4.y };\n        const p8 = { x: p3.x, y: -p3.y };\n        const p9 = { x: p2.x, y: -p2.y };\n        const p10 = { x: p1.x, y: -p1.y };\n        const p = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10];\n        const parts = p.map((p) => `${(dx + p.x).toFixed(2)} ${(dy + p.y).toFixed(2)}`).join(' L ');\n        return `<path d=\"M ${parts}\" />`;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nclass WhitespaceOptions {\n    constructor(config) {\n        const options = config.options;\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(36 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            // whitespace is rendered in the view line\n            this.renderWhitespace = 'none';\n            this.renderWithSVG = false;\n        }\n        else if (experimentalWhitespaceRendering === 'svg') {\n            this.renderWhitespace = options.get(95 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = true;\n        }\n        else {\n            this.renderWhitespace = options.get(95 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = false;\n        }\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(113 /* EditorOption.stopRenderingLineAfter */);\n    }\n    equals(other) {\n        return (this.renderWhitespace === other.renderWhitespace\n            && this.renderWithSVG === other.renderWithSVG\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { Selection } from '../common/core/selection.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { ViewController } from './view/viewController.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { GlyphMarginOverlay } from './viewParts/glyphMargin/glyphMargin.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { Position } from '../common/core/position.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nimport { inputLatency } from '../../base/browser/performance.js';\nimport { WhitespaceOverlay } from './viewParts/whitespace/whitespace.js';\nexport class View extends ViewEventHandler {\n    constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode) {\n        super();\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderAnimationFrame = null;\n        const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n        this._context = new ViewContext(configuration, colorTheme, model);\n        // Ensure the view is the first event handler in order to update the layout\n        this._context.addEventHandler(this);\n        this._viewParts = [];\n        // Keyboard handler\n        this._textAreaHandler = new TextAreaHandler(this._context, viewController, this._createTextAreaHandlerHelper());\n        this._viewParts.push(this._textAreaHandler);\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n        this._linesContent = createFastDomNode(document.createElement('div'));\n        this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n        this._linesContent.setPosition('absolute');\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName(this._getEditorClassName());\n        // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n        this.domNode.setAttribute('role', 'code');\n        this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n        this._overflowGuardContainer.setClassName('overflow-guard');\n        this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n        this._viewParts.push(this._scrollbar);\n        // View Lines\n        this._viewLines = new ViewLines(this._context, this._linesContent);\n        // View Zones\n        this._viewZones = new ViewZones(this._context);\n        this._viewParts.push(this._viewZones);\n        // Decorations overview ruler\n        const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n        this._viewParts.push(decorationsOverviewRuler);\n        const scrollDecoration = new ScrollDecorationViewPart(this._context);\n        this._viewParts.push(scrollDecoration);\n        const contentViewOverlays = new ContentViewOverlays(this._context);\n        this._viewParts.push(contentViewOverlays);\n        contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new WhitespaceOverlay(this._context));\n        const marginViewOverlays = new MarginViewOverlays(this._context);\n        this._viewParts.push(marginViewOverlays);\n        marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new GlyphMarginOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n        const margin = new Margin(this._context);\n        margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n        this._viewParts.push(margin);\n        // Content widgets\n        this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n        this._viewParts.push(this._contentWidgets);\n        this._viewCursors = new ViewCursors(this._context);\n        this._viewParts.push(this._viewCursors);\n        // Overlay widgets\n        this._overlayWidgets = new ViewOverlayWidgets(this._context);\n        this._viewParts.push(this._overlayWidgets);\n        const rulers = new Rulers(this._context);\n        this._viewParts.push(rulers);\n        const blockOutline = new BlockDecorations(this._context);\n        this._viewParts.push(blockOutline);\n        const minimap = new Minimap(this._context);\n        this._viewParts.push(minimap);\n        // -------------- Wire dom nodes up\n        if (decorationsOverviewRuler) {\n            const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n        }\n        this._linesContent.appendChild(contentViewOverlays.getDomNode());\n        this._linesContent.appendChild(rulers.domNode);\n        this._linesContent.appendChild(this._viewZones.domNode);\n        this._linesContent.appendChild(this._viewLines.getDomNode());\n        this._linesContent.appendChild(this._contentWidgets.domNode);\n        this._linesContent.appendChild(this._viewCursors.getDomNode());\n        this._overflowGuardContainer.appendChild(margin.getDomNode());\n        this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n        this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n        this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n        this._overflowGuardContainer.appendChild(minimap.getDomNode());\n        this._overflowGuardContainer.appendChild(blockOutline.domNode);\n        this.domNode.appendChild(this._overflowGuardContainer);\n        if (overflowWidgetsDomNode) {\n            overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n        }\n        else {\n            this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n        }\n        this._applyLayout();\n        // Pointer handler\n        this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n    }\n    _flushAccumulatedAndRenderNow() {\n        inputLatency.onRenderStart();\n        this._renderNow();\n    }\n    _createPointerHandlerHelper() {\n        return {\n            viewDomNode: this.domNode.domNode,\n            linesContentDomNode: this._linesContent.domNode,\n            viewLinesDomNode: this._viewLines.getDomNode().domNode,\n            focusTextArea: () => {\n                this.focus();\n            },\n            dispatchTextAreaEvent: (event) => {\n                this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n            },\n            getLastRenderData: () => {\n                const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n                const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n                return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n            },\n            renderNow: () => {\n                this.render(true, false);\n            },\n            shouldSuppressMouseDownOnViewZone: (viewZoneId) => {\n                return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n            },\n            shouldSuppressMouseDownOnWidget: (widgetId) => {\n                return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n            },\n            getPositionFromDOMInfo: (spanNode, offset) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n            },\n            visibleRangeForPosition: (lineNumber, column) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n            },\n            getLineWidth: (lineNumber) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getLineWidth(lineNumber);\n            }\n        };\n    }\n    _createTextAreaHandlerHelper() {\n        return {\n            visibleRangeForPosition: (position) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(position);\n            }\n        };\n    }\n    _applyLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this.domNode.setWidth(layoutInfo.width);\n        this.domNode.setHeight(layoutInfo.height);\n        this._overflowGuardContainer.setWidth(layoutInfo.width);\n        this._overflowGuardContainer.setHeight(layoutInfo.height);\n        this._linesContent.setWidth(1000000);\n        this._linesContent.setHeight(1000000);\n    }\n    _getEditorClassName() {\n        const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n        return this._context.configuration.options.get(137 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n    }\n    // --- begin event handlers\n    handleEvents(events) {\n        super.handleEvents(events);\n        this._scheduleRender();\n    }\n    onConfigurationChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        this._applyLayout();\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return false;\n    }\n    onFocusChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    onThemeChanged(e) {\n        this._context.theme.update(e.theme);\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    // --- end event handlers\n    dispose() {\n        if (this._renderAnimationFrame !== null) {\n            this._renderAnimationFrame.dispose();\n            this._renderAnimationFrame = null;\n        }\n        this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n        this._context.removeEventHandler(this);\n        this._viewLines.dispose();\n        // Destroy view parts\n        for (const viewPart of this._viewParts) {\n            viewPart.dispose();\n        }\n        super.dispose();\n    }\n    _scheduleRender() {\n        if (this._renderAnimationFrame === null) {\n            this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n        }\n    }\n    _onRenderScheduled() {\n        this._renderAnimationFrame = null;\n        this._flushAccumulatedAndRenderNow();\n    }\n    _renderNow() {\n        safeInvokeNoArg(() => this._actualRender());\n    }\n    _getViewPartsToRender() {\n        const result = [];\n        let resultLen = 0;\n        for (const viewPart of this._viewParts) {\n            if (viewPart.shouldRender()) {\n                result[resultLen++] = viewPart;\n            }\n        }\n        return result;\n    }\n    _actualRender() {\n        if (!dom.isInDOM(this.domNode.domNode)) {\n            return;\n        }\n        let viewPartsToRender = this._getViewPartsToRender();\n        if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n            // Nothing to render\n            return;\n        }\n        const partialViewportData = this._context.viewLayout.getLinesViewportData();\n        this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n        const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n        if (this._contentWidgets.shouldRender()) {\n            // Give the content widgets a chance to set their max width before a possible synchronous layout\n            this._contentWidgets.onBeforeRender(viewportData);\n        }\n        if (this._viewLines.shouldRender()) {\n            this._viewLines.renderText(viewportData);\n            this._viewLines.onDidRender();\n            // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n            viewPartsToRender = this._getViewPartsToRender();\n        }\n        const renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this._viewLines);\n        // Render the rest of the parts\n        for (const viewPart of viewPartsToRender) {\n            viewPart.prepareRender(renderingContext);\n        }\n        for (const viewPart of viewPartsToRender) {\n            viewPart.render(renderingContext);\n            viewPart.onDidRender();\n        }\n    }\n    // --- BEGIN CodeEditor helpers\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this._scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    restoreState(scrollPosition) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollPosition.scrollTop,\n            scrollLeft: scrollPosition.scrollLeft\n        }, 1 /* ScrollType.Immediate */);\n        this._context.viewModel.visibleLinesStabilized();\n    }\n    getOffsetForColumn(modelLineNumber, modelColumn) {\n        const modelPosition = this._context.viewModel.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        this._flushAccumulatedAndRenderNow();\n        const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n        if (!visibleRange) {\n            return -1;\n        }\n        return visibleRange.left;\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n        if (!mouseTarget) {\n            return null;\n        }\n        return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n    }\n    createOverviewRuler(cssClassName) {\n        return new OverviewRuler(this._context, cssClassName);\n    }\n    change(callback) {\n        this._viewZones.changeViewZones(callback);\n        this._scheduleRender();\n    }\n    render(now, everything) {\n        if (everything) {\n            // Force everything to render...\n            this._viewLines.forceShouldRender();\n            for (const viewPart of this._viewParts) {\n                viewPart.forceShouldRender();\n            }\n        }\n        if (now) {\n            this._flushAccumulatedAndRenderNow();\n        }\n        else {\n            this._scheduleRender();\n        }\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaHandler.writeScreenReaderContent(reason);\n    }\n    focus() {\n        this._textAreaHandler.focusTextArea();\n    }\n    isFocused() {\n        return this._textAreaHandler.isFocused();\n    }\n    setAriaOptions(options) {\n        this._textAreaHandler.setAriaOptions(options);\n    }\n    addContentWidget(widgetData) {\n        this._contentWidgets.addWidget(widgetData.widget);\n        this.layoutContentWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutContentWidget(widgetData) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this._contentWidgets.setWidgetPosition(widgetData.widget, (_b = (_a = widgetData.position) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : null, (_d = (_c = widgetData.position) === null || _c === void 0 ? void 0 : _c.secondaryPosition) !== null && _d !== void 0 ? _d : null, (_f = (_e = widgetData.position) === null || _e === void 0 ? void 0 : _e.preference) !== null && _f !== void 0 ? _f : null, (_h = (_g = widgetData.position) === null || _g === void 0 ? void 0 : _g.positionAffinity) !== null && _h !== void 0 ? _h : null);\n        this._scheduleRender();\n    }\n    removeContentWidget(widgetData) {\n        this._contentWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addOverlayWidget(widgetData) {\n        this._overlayWidgets.addWidget(widgetData.widget);\n        this.layoutOverlayWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutOverlayWidget(widgetData) {\n        const newPreference = widgetData.position ? widgetData.position.preference : null;\n        const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._scheduleRender();\n        }\n    }\n    removeOverlayWidget(widgetData) {\n        this._overlayWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n}\nfunction safeInvokeNoArg(func) {\n    try {\n        return func();\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nimport { ModelLineProjectionData } from '../../common/modelLineProjectionData.js';\nimport { LineInjectedText } from '../../common/textModelEvents.js';\nconst ttPolicy = createTrustedTypesPolicy('domLineBreaksComputer', { createHTML: value => value });\nexport class DOMLineBreaksComputerFactory {\n    static create() {\n        return new DOMLineBreaksComputerFactory();\n    }\n    constructor() {\n    }\n    createLineBreaksComputer(fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak) {\n        const requests = [];\n        const injectedTexts = [];\n        return {\n            addRequest: (lineText, injectedText, previousLineBreakData) => {\n                requests.push(lineText);\n                injectedTexts.push(injectedText);\n            },\n            finalize: () => {\n                return createLineBreaks(requests, fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak, injectedTexts);\n            }\n        };\n    }\n}\nfunction createLineBreaks(requests, fontInfo, tabSize, firstLineBreakColumn, wrappingIndent, wordBreak, injectedTextsPerLine) {\n    var _a;\n    function createEmptyLineBreakWithPossiblyInjectedText(requestIdx) {\n        const injectedTexts = injectedTextsPerLine[requestIdx];\n        if (injectedTexts) {\n            const lineText = LineInjectedText.applyInjectedText(requests[requestIdx], injectedTexts);\n            const injectionOptions = injectedTexts.map(t => t.options);\n            const injectionOffsets = injectedTexts.map(text => text.column - 1);\n            // creating a `LineBreakData` with an invalid `breakOffsetsVisibleColumn` is OK\n            // because `breakOffsetsVisibleColumn` will never be used because it contains injected text\n            return new ModelLineProjectionData(injectionOffsets, injectionOptions, [lineText.length], [], 0);\n        }\n        else {\n            return null;\n        }\n    }\n    if (firstLineBreakColumn === -1) {\n        const result = [];\n        for (let i = 0, len = requests.length; i < len; i++) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n        }\n        return result;\n    }\n    const overallWidth = Math.round(firstLineBreakColumn * fontInfo.typicalHalfwidthCharacterWidth);\n    const additionalIndent = (wrappingIndent === 3 /* WrappingIndent.DeepIndent */ ? 2 : wrappingIndent === 2 /* WrappingIndent.Indent */ ? 1 : 0);\n    const additionalIndentSize = Math.round(tabSize * additionalIndent);\n    const additionalIndentLength = Math.ceil(fontInfo.spaceWidth * additionalIndentSize);\n    const containerDomNode = document.createElement('div');\n    applyFontInfo(containerDomNode, fontInfo);\n    const sb = new StringBuilder(10000);\n    const firstNonWhitespaceIndices = [];\n    const wrappedTextIndentLengths = [];\n    const renderLineContents = [];\n    const allCharOffsets = [];\n    const allVisibleColumns = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineContent = LineInjectedText.applyInjectedText(requests[i], injectedTextsPerLine[i]);\n        let firstNonWhitespaceIndex = 0;\n        let wrappedTextIndentLength = 0;\n        let width = overallWidth;\n        if (wrappingIndent !== 0 /* WrappingIndent.None */) {\n            firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n            if (firstNonWhitespaceIndex === -1) {\n                // all whitespace line\n                firstNonWhitespaceIndex = 0;\n            }\n            else {\n                // Track existing indent\n                for (let i = 0; i < firstNonWhitespaceIndex; i++) {\n                    const charWidth = (lineContent.charCodeAt(i) === 9 /* CharCode.Tab */\n                        ? (tabSize - (wrappedTextIndentLength % tabSize))\n                        : 1);\n                    wrappedTextIndentLength += charWidth;\n                }\n                const indentWidth = Math.ceil(fontInfo.spaceWidth * wrappedTextIndentLength);\n                // Force sticking to beginning of line if no character would fit except for the indentation\n                if (indentWidth + fontInfo.typicalFullwidthCharacterWidth > overallWidth) {\n                    firstNonWhitespaceIndex = 0;\n                    wrappedTextIndentLength = 0;\n                }\n                else {\n                    width = overallWidth - indentWidth;\n                }\n            }\n        }\n        const renderLineContent = lineContent.substr(firstNonWhitespaceIndex);\n        const tmp = renderLine(renderLineContent, wrappedTextIndentLength, tabSize, width, sb, additionalIndentLength);\n        firstNonWhitespaceIndices[i] = firstNonWhitespaceIndex;\n        wrappedTextIndentLengths[i] = wrappedTextIndentLength;\n        renderLineContents[i] = renderLineContent;\n        allCharOffsets[i] = tmp[0];\n        allVisibleColumns[i] = tmp[1];\n    }\n    const html = sb.build();\n    const trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(html)) !== null && _a !== void 0 ? _a : html;\n    containerDomNode.innerHTML = trustedhtml;\n    containerDomNode.style.position = 'absolute';\n    containerDomNode.style.top = '10000';\n    if (wordBreak === 'keepAll') {\n        // word-break: keep-all; overflow-wrap: anywhere\n        containerDomNode.style.wordBreak = 'keep-all';\n        containerDomNode.style.overflowWrap = 'anywhere';\n    }\n    else {\n        // overflow-wrap: break-word\n        containerDomNode.style.wordBreak = 'inherit';\n        containerDomNode.style.overflowWrap = 'break-word';\n    }\n    document.body.appendChild(containerDomNode);\n    const range = document.createRange();\n    const lineDomNodes = Array.prototype.slice.call(containerDomNode.children, 0);\n    const result = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineDomNode = lineDomNodes[i];\n        const breakOffsets = readLineBreaks(range, lineDomNode, renderLineContents[i], allCharOffsets[i]);\n        if (breakOffsets === null) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n            continue;\n        }\n        const firstNonWhitespaceIndex = firstNonWhitespaceIndices[i];\n        const wrappedTextIndentLength = wrappedTextIndentLengths[i] + additionalIndentSize;\n        const visibleColumns = allVisibleColumns[i];\n        const breakOffsetsVisibleColumn = [];\n        for (let j = 0, len = breakOffsets.length; j < len; j++) {\n            breakOffsetsVisibleColumn[j] = visibleColumns[breakOffsets[j]];\n        }\n        if (firstNonWhitespaceIndex !== 0) {\n            // All break offsets are relative to the renderLineContent, make them absolute again\n            for (let j = 0, len = breakOffsets.length; j < len; j++) {\n                breakOffsets[j] += firstNonWhitespaceIndex;\n            }\n        }\n        let injectionOptions;\n        let injectionOffsets;\n        const curInjectedTexts = injectedTextsPerLine[i];\n        if (curInjectedTexts) {\n            injectionOptions = curInjectedTexts.map(t => t.options);\n            injectionOffsets = curInjectedTexts.map(text => text.column - 1);\n        }\n        else {\n            injectionOptions = null;\n            injectionOffsets = null;\n        }\n        result[i] = new ModelLineProjectionData(injectionOffsets, injectionOptions, breakOffsets, breakOffsetsVisibleColumn, wrappedTextIndentLength);\n    }\n    document.body.removeChild(containerDomNode);\n    return result;\n}\nfunction renderLine(lineContent, initialVisibleColumn, tabSize, width, sb, wrappingIndentLength) {\n    if (wrappingIndentLength !== 0) {\n        const hangingOffset = String(wrappingIndentLength);\n        sb.appendString('<div style=\"text-indent: -');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; padding-left: ');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; box-sizing: border-box; width:');\n    }\n    else {\n        sb.appendString('<div style=\"width:');\n    }\n    sb.appendString(String(width));\n    sb.appendString('px;\">');\n    // if (containsRTL) {\n    // \tsb.appendASCIIString('\" dir=\"ltr');\n    // }\n    const len = lineContent.length;\n    let visibleColumn = initialVisibleColumn;\n    let charOffset = 0;\n    const charOffsets = [];\n    const visibleColumns = [];\n    let nextCharCode = (0 < len ? lineContent.charCodeAt(0) : 0 /* CharCode.Null */);\n    sb.appendString('<span>');\n    for (let charIndex = 0; charIndex < len; charIndex++) {\n        if (charIndex !== 0 && charIndex % 16384 /* Constants.SPAN_MODULO_LIMIT */ === 0) {\n            sb.appendString('</span><span>');\n        }\n        charOffsets[charIndex] = charOffset;\n        visibleColumns[charIndex] = visibleColumn;\n        const charCode = nextCharCode;\n        nextCharCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n        let producedCharacters = 1;\n        let charWidth = 1;\n        switch (charCode) {\n            case 9 /* CharCode.Tab */:\n                producedCharacters = (tabSize - (visibleColumn % tabSize));\n                charWidth = producedCharacters;\n                for (let space = 1; space <= producedCharacters; space++) {\n                    if (space < producedCharacters) {\n                        sb.appendCharCode(0xA0); // &nbsp;\n                    }\n                    else {\n                        sb.appendASCIICharCode(32 /* CharCode.Space */);\n                    }\n                }\n                break;\n            case 32 /* CharCode.Space */:\n                if (nextCharCode === 32 /* CharCode.Space */) {\n                    sb.appendCharCode(0xA0); // &nbsp;\n                }\n                else {\n                    sb.appendASCIICharCode(32 /* CharCode.Space */);\n                }\n                break;\n            case 60 /* CharCode.LessThan */:\n                sb.appendString('&lt;');\n                break;\n            case 62 /* CharCode.GreaterThan */:\n                sb.appendString('&gt;');\n                break;\n            case 38 /* CharCode.Ampersand */:\n                sb.appendString('&amp;');\n                break;\n            case 0 /* CharCode.Null */:\n                sb.appendString('&#00;');\n                break;\n            case 65279 /* CharCode.UTF8_BOM */:\n            case 8232 /* CharCode.LINE_SEPARATOR */:\n            case 8233 /* CharCode.PARAGRAPH_SEPARATOR */:\n            case 133 /* CharCode.NEXT_LINE */:\n                sb.appendCharCode(0xFFFD);\n                break;\n            default:\n                if (strings.isFullWidthCharacter(charCode)) {\n                    charWidth++;\n                }\n                if (charCode < 32) {\n                    sb.appendCharCode(9216 + charCode);\n                }\n                else {\n                    sb.appendCharCode(charCode);\n                }\n        }\n        charOffset += producedCharacters;\n        visibleColumn += charWidth;\n    }\n    sb.appendString('</span>');\n    charOffsets[lineContent.length] = charOffset;\n    visibleColumns[lineContent.length] = visibleColumn;\n    sb.appendString('</div>');\n    return [charOffsets, visibleColumns];\n}\nfunction readLineBreaks(range, lineDomNode, lineContent, charOffsets) {\n    if (lineContent.length <= 1) {\n        return null;\n    }\n    const spans = Array.prototype.slice.call(lineDomNode.children, 0);\n    const breakOffsets = [];\n    try {\n        discoverBreaks(range, spans, charOffsets, 0, null, lineContent.length - 1, null, breakOffsets);\n    }\n    catch (err) {\n        console.log(err);\n        return null;\n    }\n    if (breakOffsets.length === 0) {\n        return null;\n    }\n    breakOffsets.push(lineContent.length);\n    return breakOffsets;\n}\nfunction discoverBreaks(range, spans, charOffsets, low, lowRects, high, highRects, result) {\n    if (low === high) {\n        return;\n    }\n    lowRects = lowRects || readClientRect(range, spans, charOffsets[low], charOffsets[low + 1]);\n    highRects = highRects || readClientRect(range, spans, charOffsets[high], charOffsets[high + 1]);\n    if (Math.abs(lowRects[0].top - highRects[0].top) <= 0.1) {\n        // same line\n        return;\n    }\n    // there is at least one line break between these two offsets\n    if (low + 1 === high) {\n        // the two characters are adjacent, so the line break must be exactly between them\n        result.push(high);\n        return;\n    }\n    const mid = low + ((high - low) / 2) | 0;\n    const midRects = readClientRect(range, spans, charOffsets[mid], charOffsets[mid + 1]);\n    discoverBreaks(range, spans, charOffsets, low, lowRects, mid, midRects, result);\n    discoverBreaks(range, spans, charOffsets, mid, midRects, high, highRects, result);\n}\nfunction readClientRect(range, spans, startOffset, endOffset) {\n    range.setStart(spans[(startOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, startOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    range.setEnd(spans[(endOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, endOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    return range.getClientRects();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class DynamicViewOverlay extends ViewEventHandler {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._readConfig();\n        this._lastCursorModelPosition = new Position(1, 1);\n        this._renderResult = null;\n        this._activeLineNumber = 1;\n        this._context.addEventHandler(this);\n    }\n    _readConfig() {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        const lineNumbers = options.get(65 /* EditorOption.lineNumbers */);\n        this._renderLineNumbers = lineNumbers.renderType;\n        this._renderCustomLineNumbers = lineNumbers.renderFn;\n        this._renderFinalNewline = options.get(91 /* EditorOption.renderFinalNewline */);\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n        this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        this._readConfig();\n        return true;\n    }\n    onCursorStateChanged(e) {\n        const primaryViewPosition = e.selections[0].getPosition();\n        this._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n        let shouldRender = false;\n        if (this._activeLineNumber !== primaryViewPosition.lineNumber) {\n            this._activeLineNumber = primaryViewPosition.lineNumber;\n            shouldRender = true;\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */ || this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            shouldRender = true;\n        }\n        return shouldRender;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getLineRenderLineNumber(viewLineNumber) {\n        const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n        if (modelPosition.column !== 1) {\n            return '';\n        }\n        const modelLineNumber = modelPosition.lineNumber;\n        if (this._renderCustomLineNumbers) {\n            return this._renderCustomLineNumbers(modelLineNumber);\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */) {\n            const diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n            if (diff === 0) {\n                return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n            }\n            return String(diff);\n        }\n        if (this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n                return String(modelLineNumber);\n            }\n            if (modelLineNumber % 10 === 0) {\n                return String(modelLineNumber);\n            }\n            return '';\n        }\n        return String(modelLineNumber);\n    }\n    prepareRender(ctx) {\n        if (this._renderLineNumbers === 0 /* RenderLineNumbersType.Off */) {\n            this._renderResult = null;\n            return;\n        }\n        const lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const lineCount = this._context.viewModel.getLineCount();\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n            if (!renderLineNumber) {\n                output[lineIndex] = '';\n                continue;\n            }\n            let extraClassName = '';\n            if (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n                // this is the last line\n                if (this._renderFinalNewline === 'off') {\n                    output[lineIndex] = '';\n                    continue;\n                }\n                if (this._renderFinalNewline === 'dimmed') {\n                    extraClassName = ' dimmed-line-number';\n                }\n            }\n            if (lineNumber === this._activeLineNumber) {\n                extraClassName = ' active-line-number';\n            }\n            output[lineIndex] = (`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassName}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`);\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nLineNumbersOverlay.CLASS_NAME = 'line-numbers';\nregisterThemingParticipant((theme, collector) => {\n    const editorLineNumbersColor = theme.getColor(editorLineNumbers);\n    const editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n    if (editorDimmedLineNumberColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n    }\n    else if (editorLineNumbersColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FloatHorizontalRange } from '../../view/renderingContext.js';\nexport class RangeUtil {\n    static _createRange() {\n        if (!this._handyReadyRange) {\n            this._handyReadyRange = document.createRange();\n        }\n        return this._handyReadyRange;\n    }\n    static _detachRange(range, endNode) {\n        // Move range out of the span node, IE doesn't like having many ranges in\n        // the same spot and will act badly for lines containing dashes ('-')\n        range.selectNodeContents(endNode);\n    }\n    static _readClientRects(startElement, startOffset, endElement, endOffset, endNode) {\n        const range = this._createRange();\n        try {\n            range.setStart(startElement, startOffset);\n            range.setEnd(endElement, endOffset);\n            return range.getClientRects();\n        }\n        catch (e) {\n            // This is life ...\n            return null;\n        }\n        finally {\n            this._detachRange(range, endNode);\n        }\n    }\n    static _mergeAdjacentRanges(ranges) {\n        if (ranges.length === 1) {\n            // There is nothing to merge\n            return ranges;\n        }\n        ranges.sort(FloatHorizontalRange.compare);\n        const result = [];\n        let resultLen = 0;\n        let prev = ranges[0];\n        for (let i = 1, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            if (prev.left + prev.width + 0.9 /* account for browser's rounding errors*/ >= range.left) {\n                prev.width = Math.max(prev.width, range.left + range.width - prev.left);\n            }\n            else {\n                result[resultLen++] = prev;\n                prev = range;\n            }\n        }\n        result[resultLen++] = prev;\n        return result;\n    }\n    static _createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft, clientRectScale) {\n        if (!clientRects || clientRects.length === 0) {\n            return null;\n        }\n        // We go through FloatHorizontalRange because it has been observed in bi-di text\n        // that the clientRects are not coming in sorted from the browser\n        const result = [];\n        for (let i = 0, len = clientRects.length; i < len; i++) {\n            const clientRect = clientRects[i];\n            result[i] = new FloatHorizontalRange(Math.max(0, (clientRect.left - clientRectDeltaLeft) / clientRectScale), clientRect.width / clientRectScale);\n        }\n        return this._mergeAdjacentRanges(result);\n    }\n    static readHorizontalRanges(domNode, startChildIndex, startOffset, endChildIndex, endOffset, context) {\n        // Panic check\n        const min = 0;\n        const max = domNode.children.length - 1;\n        if (min > max) {\n            return null;\n        }\n        startChildIndex = Math.min(max, Math.max(min, startChildIndex));\n        endChildIndex = Math.min(max, Math.max(min, endChildIndex));\n        if (startChildIndex === endChildIndex && startOffset === endOffset && startOffset === 0 && !domNode.children[startChildIndex].firstChild) {\n            // We must find the position at the beginning of a <span>\n            // To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box\n            const clientRects = domNode.children[startChildIndex].getClientRects();\n            context.markDidDomLayout();\n            return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n        }\n        // If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n        // Chrome is buggy and doesn't handle 0 offsets well sometimes.\n        if (startChildIndex !== endChildIndex) {\n            if (endChildIndex > 0 && endOffset === 0) {\n                endChildIndex--;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        let startElement = domNode.children[startChildIndex].firstChild;\n        let endElement = domNode.children[endChildIndex].firstChild;\n        if (!startElement || !endElement) {\n            // When having an empty <span> (without any text content), try to move to the previous <span>\n            if (!startElement && startOffset === 0 && startChildIndex > 0) {\n                startElement = domNode.children[startChildIndex - 1].firstChild;\n                startOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n            if (!endElement && endOffset === 0 && endChildIndex > 0) {\n                endElement = domNode.children[endChildIndex - 1].firstChild;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        if (!startElement || !endElement) {\n            return null;\n        }\n        startOffset = Math.min(startElement.textContent.length, Math.max(0, startOffset));\n        endOffset = Math.min(endElement.textContent.length, Math.max(0, endOffset));\n        const clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, context.endNode);\n        context.markDidDomLayout();\n        return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { FloatHorizontalRange, VisibleRanges } from '../../view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine, LineRange, DomPosition } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nconst canUseFastRenderedViewLine = (function () {\n    if (platform.isNative) {\n        // In VSCode we know very well when the zoom level changes\n        return true;\n    }\n    if (platform.isLinux || browser.isFirefox || browser.isSafari) {\n        // On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n        // --\n        // Even though we read character widths correctly, having read them at a specific zoom level\n        // does not mean they are the same at the current zoom level.\n        // --\n        // This could be improved if we ever figure out how to get an event when browsers zoom,\n        // but until then we have to stick with reading client rects.\n        // --\n        // The same has been observed with Firefox on Windows7\n        // --\n        // The same has been oversved with Safari\n        return false;\n    }\n    return true;\n})();\nlet monospaceAssumptionsAreValid = true;\nexport class ViewLineOptions {\n    constructor(config, themeType) {\n        this.themeType = themeType;\n        const options = config.options;\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(36 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            this.renderWhitespace = options.get(95 /* EditorOption.renderWhitespace */);\n        }\n        else {\n            // whitespace is rendered in a different layer\n            this.renderWhitespace = 'none';\n        }\n        this.renderControlCharacters = options.get(90 /* EditorOption.renderControlCharacters */);\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.useMonospaceOptimizations = (fontInfo.isMonospace\n            && !options.get(31 /* EditorOption.disableMonospaceOptimizations */));\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(64 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(113 /* EditorOption.stopRenderingLineAfter */);\n        this.fontLigatures = options.get(49 /* EditorOption.fontLigatures */);\n    }\n    equals(other) {\n        return (this.themeType === other.themeType\n            && this.renderWhitespace === other.renderWhitespace\n            && this.renderControlCharacters === other.renderControlCharacters\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.useMonospaceOptimizations === other.useMonospaceOptimizations\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\n            && this.fontLigatures === other.fontLigatures);\n    }\n}\nexport class ViewLine {\n    constructor(options) {\n        this._options = options;\n        this._isMaybeInvalid = true;\n        this._renderedViewLine = null;\n    }\n    // --- begin IVisibleLineData\n    getDomNode() {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            return this._renderedViewLine.domNode.domNode;\n        }\n        return null;\n    }\n    setDomNode(domNode) {\n        if (this._renderedViewLine) {\n            this._renderedViewLine.domNode = createFastDomNode(domNode);\n        }\n        else {\n            throw new Error('I have no rendered view line to set the dom node to...');\n        }\n    }\n    onContentChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onTokensChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onDecorationsChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onOptionsChanged(newOptions) {\n        this._isMaybeInvalid = true;\n        this._options = newOptions;\n    }\n    onSelectionChanged() {\n        if (isHighContrast(this._options.themeType) || this._options.renderWhitespace === 'selection') {\n            this._isMaybeInvalid = true;\n            return true;\n        }\n        return false;\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        if (this._isMaybeInvalid === false) {\n            // it appears that nothing relevant has changed\n            return false;\n        }\n        this._isMaybeInvalid = false;\n        const lineData = viewportData.getViewLineRenderingData(lineNumber);\n        const options = this._options;\n        const actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n        // Only send selection information when needed for rendering whitespace\n        let selectionsOnLine = null;\n        if (isHighContrast(options.themeType) || this._options.renderWhitespace === 'selection') {\n            const selections = viewportData.selections;\n            for (const selection of selections) {\n                if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                    // Selection does not intersect line\n                    continue;\n                }\n                const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                if (startColumn < endColumn) {\n                    if (isHighContrast(options.themeType)) {\n                        actualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', 0 /* InlineDecorationType.Regular */));\n                    }\n                    if (this._options.renderWhitespace === 'selection') {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n        }\n        const renderLineInput = new RenderLineInput(options.useMonospaceOptimizations, options.canUseHalfwidthRightwardsArrow, lineData.content, lineData.continuesWithWrappedLine, lineData.isBasicASCII, lineData.containsRTL, lineData.minColumn - 1, lineData.tokens, actualInlineDecorations, lineData.tabSize, lineData.startVisibleColumn, options.spaceWidth, options.middotWidth, options.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, selectionsOnLine);\n        if (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n            // no need to do anything, we have the same render input\n            return false;\n        }\n        sb.appendString('<div style=\"top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;height:');\n        sb.appendString(String(this._options.lineHeight));\n        sb.appendString('px;\" class=\"');\n        sb.appendString(ViewLine.CLASS_NAME);\n        sb.appendString('\">');\n        const output = renderViewLine(renderLineInput, sb);\n        sb.appendString('</div>');\n        let renderedViewLine = null;\n        if (monospaceAssumptionsAreValid && canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === 0 /* ForeignElementType.None */) {\n            renderedViewLine = new FastRenderedViewLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping);\n        }\n        if (!renderedViewLine) {\n            renderedViewLine = createRenderedLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping, output.containsRTL, output.containsForeignElements);\n        }\n        this._renderedViewLine = renderedViewLine;\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            this._renderedViewLine.domNode.setTop(deltaTop);\n            this._renderedViewLine.domNode.setHeight(this._options.lineHeight);\n        }\n    }\n    // --- end IVisibleLineData\n    getWidth(context) {\n        if (!this._renderedViewLine) {\n            return 0;\n        }\n        return this._renderedViewLine.getWidth(context);\n    }\n    getWidthIsFast() {\n        if (!this._renderedViewLine) {\n            return true;\n        }\n        return this._renderedViewLine.getWidthIsFast();\n    }\n    needsMonospaceFontCheck() {\n        if (!this._renderedViewLine) {\n            return false;\n        }\n        return (this._renderedViewLine instanceof FastRenderedViewLine);\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this._renderedViewLine) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this._renderedViewLine instanceof FastRenderedViewLine) {\n            return this._renderedViewLine.monospaceAssumptionsAreValid();\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    onMonospaceAssumptionsInvalidated() {\n        if (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n            this._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n        }\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this._renderedViewLine) {\n            return null;\n        }\n        startColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n        endColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n        const stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter;\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n            // This range is obviously not visible\n            return new VisibleRanges(true, [new FloatHorizontalRange(this.getWidth(context), 0)]);\n        }\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n            startColumn = stopRenderingLineAfter + 1;\n        }\n        if (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n            endColumn = stopRenderingLineAfter + 1;\n        }\n        const horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, context);\n        if (horizontalRanges && horizontalRanges.length > 0) {\n            return new VisibleRanges(false, horizontalRanges);\n        }\n        return null;\n    }\n    getColumnOfNodeOffset(lineNumber, spanNode, offset) {\n        if (!this._renderedViewLine) {\n            return 1;\n        }\n        return this._renderedViewLine.getColumnOfNodeOffset(lineNumber, spanNode, offset);\n    }\n}\nViewLine.CLASS_NAME = 'view-line';\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping) {\n        this._cachedWidth = -1;\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        const keyColumnCount = Math.floor(renderLineInput.lineContent.length / 300 /* Constants.MaxMonospaceDistance */);\n        if (keyColumnCount > 0) {\n            this._keyColumnPixelOffsetCache = new Float32Array(keyColumnCount);\n            for (let i = 0; i < keyColumnCount; i++) {\n                this._keyColumnPixelOffsetCache[i] = -1;\n            }\n        }\n        else {\n            this._keyColumnPixelOffsetCache = null;\n        }\n        this._characterMapping = characterMapping;\n        this._charWidth = renderLineInput.spaceWidth;\n    }\n    getWidth(context) {\n        if (!this.domNode || this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(this._characterMapping.length);\n            return Math.round(this._charWidth * horizontalOffset);\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context === null || context === void 0 ? void 0 : context.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        return (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) || this._cachedWidth !== -1;\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this.domNode) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const expectedWidth = this.getWidth(null);\n            const actualWidth = this.domNode.domNode.firstChild.offsetWidth;\n            if (Math.abs(expectedWidth - actualWidth) >= 2) {\n                // more than 2px off\n                console.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n                monospaceAssumptionsAreValid = false;\n            }\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    toSlowRenderedLine() {\n        return createRenderedLine(this.domNode, this.input, this._characterMapping, false, 0 /* ForeignElementType.None */);\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        const startPosition = this._getColumnPixelOffset(lineNumber, startColumn, context);\n        const endPosition = this._getColumnPixelOffset(lineNumber, endColumn, context);\n        return [new FloatHorizontalRange(startPosition, endPosition - startPosition)];\n    }\n    _getColumnPixelOffset(lineNumber, column, context) {\n        if (column <= 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnOrdinal = Math.floor((column - 1) / 300 /* Constants.MaxMonospaceDistance */) - 1;\n        const keyColumn = (keyColumnOrdinal + 1) * 300 /* Constants.MaxMonospaceDistance */ + 1;\n        let keyColumnPixelOffset = -1;\n        if (this._keyColumnPixelOffsetCache) {\n            keyColumnPixelOffset = this._keyColumnPixelOffsetCache[keyColumnOrdinal];\n            if (keyColumnPixelOffset === -1) {\n                keyColumnPixelOffset = this._actualReadPixelOffset(lineNumber, keyColumn, context);\n                this._keyColumnPixelOffsetCache[keyColumnOrdinal] = keyColumnPixelOffset;\n            }\n        }\n        if (keyColumnPixelOffset === -1) {\n            // Could not read actual key column pixel offset\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnHorizontalOffset = this._characterMapping.getHorizontalOffset(keyColumn);\n        const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n        return keyColumnPixelOffset + this._charWidth * (horizontalOffset - keyColumnHorizontalOffset);\n    }\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    _actualReadPixelOffset(lineNumber, column, context) {\n        if (!this.domNode) {\n            return -1;\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(this.domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        return r[0].left;\n    }\n    getColumnOfNodeOffset(lineNumber, spanNode, offset) {\n        const spanNodeTextContentLength = spanNode.textContent.length;\n        let spanIndex = -1;\n        while (spanNode) {\n            spanNode = spanNode.previousSibling;\n            spanIndex++;\n        }\n        return this._characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n    }\n}\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        this._characterMapping = characterMapping;\n        this._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n        this._containsForeignElements = containsForeignElements;\n        this._cachedWidth = -1;\n        this._pixelOffsetCache = null;\n        if (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\n            this._pixelOffsetCache = new Float32Array(Math.max(2, this._characterMapping.length + 1));\n            for (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n                this._pixelOffsetCache[column] = -1;\n            }\n        }\n    }\n    // --- Reading from the DOM methods\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    /**\n     * Width of the line in pixels\n     */\n    getWidth(context) {\n        if (!this.domNode) {\n            return 0;\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context === null || context === void 0 ? void 0 : context.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        if (this._cachedWidth === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Visible ranges for a model range\n     */\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this.domNode) {\n            return null;\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const startOffset = this._readPixelOffset(this.domNode, lineNumber, startColumn, context);\n            if (startOffset === -1) {\n                return null;\n            }\n            const endOffset = this._readPixelOffset(this.domNode, lineNumber, endColumn, context);\n            if (endOffset === -1) {\n                return null;\n            }\n            return [new FloatHorizontalRange(startOffset, endOffset - startOffset)];\n        }\n        return this._readVisibleRangesForRange(this.domNode, lineNumber, startColumn, endColumn, context);\n    }\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        if (startColumn === endColumn) {\n            const pixelOffset = this._readPixelOffset(domNode, lineNumber, startColumn, context);\n            if (pixelOffset === -1) {\n                return null;\n            }\n            else {\n                return [new FloatHorizontalRange(pixelOffset, 0)];\n            }\n        }\n        else {\n            return this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n        }\n    }\n    _readPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            if (this._containsForeignElements === 0 /* ForeignElementType.None */) {\n                // We can assume the line is really empty\n                return 0;\n            }\n            if (this._containsForeignElements === 2 /* ForeignElementType.After */) {\n                // We have foreign elements after the (empty) line\n                return 0;\n            }\n            if (this._containsForeignElements === 1 /* ForeignElementType.Before */) {\n                // We have foreign elements before the (empty) line\n                return this.getWidth(context);\n            }\n            // We have foreign elements before & after the (empty) line\n            const readingTarget = this._getReadingTarget(domNode);\n            if (readingTarget.firstChild) {\n                context.markDidDomLayout();\n                return readingTarget.firstChild.offsetWidth;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const cachedPixelOffset = this._pixelOffsetCache[column];\n            if (cachedPixelOffset !== -1) {\n                return cachedPixelOffset;\n            }\n            const result = this._actualReadPixelOffset(domNode, lineNumber, column, context);\n            this._pixelOffsetCache[column] = result;\n            return result;\n        }\n        return this._actualReadPixelOffset(domNode, lineNumber, column, context);\n    }\n    _actualReadPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context);\n            if (!r || r.length === 0) {\n                return -1;\n            }\n            return r[0].left;\n        }\n        if (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === 0 /* ForeignElementType.None */) {\n            // This branch helps in the case of whitespace only lines which have a width set\n            return this.getWidth(context);\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        const result = r[0].left;\n        if (this.input.isBasicASCII) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            const expectedResult = Math.round(this.input.spaceWidth * horizontalOffset);\n            if (Math.abs(expectedResult - result) <= 1) {\n                return expectedResult;\n            }\n        }\n        return result;\n    }\n    _readRawVisibleRangesForRange(domNode, startColumn, endColumn, context) {\n        if (startColumn === 1 && endColumn === this._characterMapping.length) {\n            // This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n            return [new FloatHorizontalRange(0, this.getWidth(context))];\n        }\n        const startDomPosition = this._characterMapping.getDomPosition(startColumn);\n        const endDomPosition = this._characterMapping.getDomPosition(endColumn);\n        return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startDomPosition.partIndex, startDomPosition.charIndex, endDomPosition.partIndex, endDomPosition.charIndex, context);\n    }\n    /**\n     * Returns the column for the text found at a specific offset inside a rendered dom node\n     */\n    getColumnOfNodeOffset(lineNumber, spanNode, offset) {\n        const spanNodeTextContentLength = spanNode.textContent.length;\n        let spanIndex = -1;\n        while (spanNode) {\n            spanNode = spanNode.previousSibling;\n            spanIndex++;\n        }\n        return this._characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n    }\n}\nclass WebKitRenderedViewLine extends RenderedViewLine {\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        const output = super._readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context);\n        if (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n            return output;\n        }\n        // WebKit is buggy and returns an expanded range (to contain words in some cases)\n        // The last client rect is enlarged (I think)\n        if (!this.input.containsRTL) {\n            // This is an attempt to patch things up\n            // Find position of last column\n            const endPixelOffset = this._readPixelOffset(domNode, lineNumber, endColumn, context);\n            if (endPixelOffset !== -1) {\n                const lastRange = output[output.length - 1];\n                if (lastRange.left < endPixelOffset) {\n                    // Trim down the width of the last visible range to not go after the last column's position\n                    lastRange.width = endPixelOffset - lastRange.left;\n                }\n            }\n        }\n        return output;\n    }\n}\nconst createRenderedLine = (function () {\n    if (browser.isWebKit) {\n        return createWebKitRenderedLine;\n    }\n    return createNormalRenderedLine;\n})();\nfunction createWebKitRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nfunction createNormalRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './margin.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Margin extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(30 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(Margin.OUTER_CLASS_NAME);\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._glyphMarginBackgroundDomNode = createFastDomNode(document.createElement('div'));\n        this._glyphMarginBackgroundDomNode.setClassName(Margin.CLASS_NAME);\n        this._domNode.appendChild(this._glyphMarginBackgroundDomNode);\n    }\n    dispose() {\n        super.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(30 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollTopChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setLayerHinting(this._canUseLayerHinting);\n        this._domNode.setContain('strict');\n        const adjustedScrollTop = ctx.scrollTop - ctx.bigNumbersDelta;\n        this._domNode.setTop(-adjustedScrollTop);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this._domNode.setHeight(height);\n        this._domNode.setWidth(this._contentLeft);\n        this._glyphMarginBackgroundDomNode.setLeft(this._glyphMarginLeft);\n        this._glyphMarginBackgroundDomNode.setWidth(this._glyphMarginWidth);\n        this._glyphMarginBackgroundDomNode.setHeight(height);\n    }\n}\nMargin.CLASS_NAME = 'glyph-margin';\nMargin.OUTER_CLASS_NAME = 'margin';\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","toVSDataTransfer","dataTransfer","vsDataTransfer","VSDataTransfer","item","items","type","kind","asStringValue","getAsString","append","createStringDataTransferItem","file","getAsFile","createFileDataTransferItemFromFile","uri","path","URI","parse","undefined","createFileDataTransferItem","name","this","Uint8Array","arrayBuffer","INTERNAL_DND_MIME_TYPES","Object","freeze","CodeDataTransfers","EDITORS","FILES","DataTransfers","RESOURCES","INTERNAL_URI_LIST","toExternalVSDataTransfer","sourceDataTransfer","overwriteUriList","arguments","length","uriList","get","replace","Mimes","has","editorData","push","toString","_a","UriList","create","internal","delete","isCodeEditor","thing","getEditorType","editorCommon","ICodeEditor","isDiffEditor","IDiffEditor","getCodeEditor","getModifiedEditor","onDidChangeActiveEditor","isCompositeEditor","activeCodeEditor","PageCoordinates","constructor","x","y","_pageCoordinatesBrand","toClientCoordinates","ClientCoordinates","window","scrollX","scrollY","clientX","clientY","_clientCoordinatesBrand","toPageCoordinates","EditorPagePosition","width","height","_editorPagePositionBrand","CoordinatesRelativeToEditor","_positionRelativeToEditorBrand","createEditorPagePosition","editorViewDomNode","editorPos","dom","left","top","createCoordinatesRelativeToEditor","editorPagePosition","pos","scaleX","offsetWidth","scaleY","offsetHeight","relativeX","relativeY","EditorMouseEvent","StandardMouseEvent","isFromPointerCapture","super","_editorMouseEventBrand","posx","posy","relativePos","EditorMouseEventFactory","_editorViewDomNode","_create","onContextMenu","target","callback","onMouseUp","onMouseDown","MOUSE_DOWN","onPointerDown","POINTER_DOWN","pointerId","onMouseLeave","MOUSE_LEAVE","onMouseMove","EditorPointerEventFactory","onPointerUp","onPointerLeave","POINTER_LEAVE","onPointerMove","GlobalEditorPointerMoveMonitor","Disposable","_globalPointerMoveMonitor","_register","GlobalPointerMoveMonitor","_keydownListener","startMonitoring","initialElement","initialButtons","pointerMoveCallback","onStopCallback","document","toKeyCodeChord","isModifierKey","stopMonitoring","browserEvent","dispose","DynamicCssRules","_editor","_instanceId","_idPool","_counter","_rules","Map","_garbageCollectionScheduler","RunOnceScheduler","garbageCollect","createClassNameRef","options","rule","getOrCreateRule","increaseRefCount","className","decreaseRefCount","schedule","properties","key","computeUniqueKey","existingRule","counter","RefCountedCssRule","concat","getContainerDomNode","set","JSON","stringify","values","hasReferences","_containerElement","_referenceCount","_styleElement","textContent","getCssText","str","prop","cssValue","asCssVariable","id","cssPropName","camelToDashes","remove","_ref","first","toLowerCase","_ref2","letter","EditorExtensionsRegistry","Command","opts","precondition","_kbOpts","kbOpts","_menuOpts","menuOpts","_description","description","register","Array","isArray","forEach","_registerMenuItem","kbOptsArr","kbWhen","kbExpr","ContextKeyExpr","and","desc","weight","args","when","primary","secondary","win","linux","mac","KeybindingsRegistry","registerKeybindingRule","CommandsRegistry","registerCommand","handler","accessor","runCommand","MenuRegistry","appendMenuItem","menuId","group","command","title","icon","order","MultiCommand","_implementations","addImplementation","priority","implementation","sort","a","b","i","splice","logService","ILogService","trace","impl","ProxyCommand","EditorCommand","bindToContribution","controllerGetter","_callback","runEditorCommand","editor","controller","runner","codeEditorService","ICodeEditorService","getFocusedCodeEditor","getActiveCodeEditor","invokeWithinContext","editorAccessor","IContextKeyService","contextMatchesRules","withNullAsUndefined","EditorAction","convertOptions","withDefaults","MenuId","EditorContext","label","contextMenuOpts","map","alias","reportTelemetry","run","ITelemetryService","publicLog2","MultiEditorAction","EditorAction2","Action2","_len","_key","kbService","debug","serialize","registerModelAndPositionCommand","_len2","_key2","instaService","IInstantiationService","resource","position","assertType","isUri","Position","isIPosition","model","IModelService","getModel","editorPosition","lift","invokeFunction","slice","ITextModelService","createModelReference","reference","object","textEditorModel","err","finally","registerEditorCommand","editorCommand","EditorContributionRegistry","INSTANCE","registerEditorAction","ctor","action","registerMultiEditorAction","registerInstantiatedEditorAction","editorAction","registerEditorContribution","instantiation","getEditorCommand","commandId","getEditorActions","getEditorContributions","getSomeEditorContributions","ids","filter","c","indexOf","getDiffEditorContributions","editorContributions","diffEditorContributions","editorActions","editorCommands","Registry","add","UndoCommand","MenubarEditMenu","nls","comment","CommandPalette","RedoCommand","SelectAllCommand","MenubarSelectionMenu","__decorate","decorators","d","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","AbstractCodeEditorService","_themeService","_onWillCreateCodeEditor","Emitter","_onCodeEditorAdd","onCodeEditorAdd","event","_onCodeEditorRemove","onCodeEditorRemove","_onWillCreateDiffEditor","_onDiffEditorAdd","onDiffEditorAdd","_onDiffEditorRemove","onDiffEditorRemove","_decorationOptionProviders","_codeEditorOpenHandlers","LinkedList","_modelProperties","_codeEditors","_diffEditors","_globalStyleSheet","willCreateCodeEditor","fire","addCodeEditor","getId","removeCodeEditor","listCodeEditors","keys","willCreateDiffEditor","addDiffEditor","removeDiffEditor","listDiffEditors","editorWithWidgetFocus","editors","hasTextFocus","hasWidgetFocus","removeDecorationType","provider","refCount","ed","removeDecorationsByType","setModelProperty","key1","dest","getModelProperty","openCodeEditor","input","source","sideBySide","candidate","registerCodeEditorOpenHandler","rm","unshift","toDisposable","IThemeService","IBulkEditService","createDecorator","ResourceEdit","metadata","convert","edit","edits","ResourceTextEdit","is","ResourceFileEdit","Error","isObject","textEdit","versionId","Boolean","newResource","oldResource","STOP_WORKER_DELTA_TIME_MS","canSyncModel","modelService","isTooLargeForSyncing","EditorWorkerService","configurationService","languageConfigurationService","languageFeaturesService","_modelService","_workerManager","WorkerManager","_logService","linkProvider","language","hasAccessToAllModels","provideLinks","token","withWorker","client","computeLinks","links","completionProvider","WordBasedCompletionItemProvider","canComputeUnicodeHighlights","computedUnicodeHighlights","range","computeDiff","original","modified","algorithm","identical","quitEarly","changes","LineRangeMapping","LineRange","RangeMapping","Range","computeMoreMinimalEdits","pretty","isNonEmptyArray","sw","StopWatch","elapsed","race","timeout","canNavigateValueSet","navigateValueSet","up","canComputeWordRanges","computeWordRanges","ITextResourceConfigurationService","ILanguageConfigurationService","ILanguageFeaturesService","workerManager","_debugDisplayName","_configurationService","provideCompletionItems","config","getValue","wordBasedSuggestions","models","wordBasedSuggestionsMode","getModels","getLanguageId","wordDefRegExp","getLanguageConfiguration","getWordDefinition","word","getWordAtPosition","lineNumber","startColumn","endColumn","fromPositions","insert","setEndPosition","column","data","textualSuggest","duration","suggestions","words","insertText","_editorWorkerClient","_lastWorkerUsedTime","Date","getTime","IntervalTimer","cancelAndSet","_checkStopIdleWorker","Math","round","onModelRemoved","_","_checkStopEmptyWorker","EditorWorkerClient","EditorModelManager","proxy","keepIdleModels","_syncedModels","_syncedModelsLastUsedTime","_proxy","timer","_checkStopModelSync","STOP_SYNC_MODEL_DELTA_TIME_MS","modelUrl","ensureSyncedResources","resources","forceLargeModels","resourceStr","_beginModelSync","currentTime","toRemove","_stopModelSync","acceptNewModel","url","lines","getLinesContent","EOL","getEOL","getVersionId","toDispose","DisposableStore","onDidChangeContent","acceptModelChanged","onWillDispose","acceptRemovedModel","SynchronousWorkerClient","instance","_instance","_proxyObj","getProxyObject","EditorWorkerHost","workerClient","_workerClient","fhr","method","_disposed","_keepIdleModels","_workerFactory","DefaultWorkerFactory","_worker","_modelManager","_getOrCreateWorker","SimpleWorkerClient","logOnceWebWorkerWarning","EditorSimpleWorker","_getProxy","_getOrCreateModelManager","_withSyncedResources","canceled","computeUnicodeHighlights","computeDefaultDocumentColors","leadingWord","wordDef","wordDefFlags","regExpFlags","MarkerDecorationsContribution","_markerDecorationsService","ID","IMarkerDecorationsService","CommandOpener","_commandService","open","matchesScheme","Schemas","allowCommands","includes","decodeURIComponent","query","_b","executeCommand","ICommandService","EditorOpener","_editorService","selection","extractSelection","scheme","normalizePath","assign","fromUserGesture","EditorOpenSource","USER","API","editorOptions","openToSide","OpenerService","editorService","commandService","_openers","_validators","_resolvers","_resolvedUriTargets","ResourceMap","with","fragment","_externalOpeners","_defaultExternalOpener","openExternal","href","matchesSomeScheme","http","https","location","mailto","vsls","_doOpenExternal","registerOpener","opener","targetURI","validationTarget","validator","shouldOpen","resolveExternalUri","resolver","resolved","externalUri","encodeURI","allowContributedOpeners","preferredOpenerId","sourceUri","CancellationToken","None","clear","createWebWorker","MonacoWebWorkerImpl","_foreignModuleId","moduleId","_foreignModuleCreateData","createData","_foreignModuleHost","host","_foreignProxy","_getForeignProxy","foreignHostMethods","getAllMethodNames","loadForeignModule","foreignMethods","proxyMethodRequest","fmr","createProxyMethod","prototype","call","foreignProxy","foreignMethod","getProxy","withSyncedResources","StableEditorScrollState","capture","getScrollTop","hasPendingScrollAnimation","getContentHeight","visiblePosition","visiblePositionScrollDelta","visibleRanges","getVisibleRanges","getStartPosition","visiblePositionScrollTop","getTopForPosition","getPosition","_initialScrollTop","_initialContentHeight","_visiblePosition","_visiblePositionScrollDelta","_cursorPosition","restore","setScrollTop","restoreRelativeVerticalPositionOfCursor","currentCursorPosition","offset","getTopForLineNumber","ViewContentWidgets","ViewPart","context","viewDomNode","_viewDomNode","_widgets","domNode","createFastDomNode","createElement","PartFingerprints","write","setClassName","setPosition","setTop","overflowingContentWidgetsDomNode","onConfigurationChanged","widgetId","onDecorationsChanged","onFlushed","onLineMappingChanged","_updateAnchorsViewPositions","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","onZonesChanged","updateAnchorViewPosition","addWidget","_widget","myWidget","Widget","_context","allowEditorOverflow","appendChild","setShouldRender","setWidgetPosition","widget","primaryAnchor","secondaryAnchor","preference","affinity","removeWidget","hasOwnProperty","parentNode","removeChild","removeAttribute","shouldSuppressMouseDownOnWidget","suppressMouseDown","onBeforeRender","viewportData","prepareRender","ctx","render","actual","_primaryAnchor","PositionPair","_secondaryAnchor","_actual","getDomNode","configuration","layoutInfo","_fixedOverflowWidgets","_contentWidth","contentWidth","_contentLeft","contentLeft","_lineHeight","_affinity","_preference","_cachedDomNodeOffsetWidth","_cachedDomNodeOffsetHeight","_maxWidth","_getMaxWidth","_isVisible","_renderData","setDisplay","setVisibility","setAttribute","setMaxWidth","hasChanged","_setPosition","modelPosition","getValidPositionPair","viewModel","validModelPosition","validatePosition","coordinatesConverter","modelPositionIsVisible","viewPosition","convertModelPositionToViewPosition","innerWidth","documentElement","body","_layoutBoxInViewport","anchor","aboveLineTop","heightAvailableAboveLine","underLineTop","aboveTop","fitsAbove","belowTop","fitsBelow","viewportHeight","scrollLeft","viewportWidth","_layoutHorizontalSegmentInPage","windowSize","domNodePosition","MIN_LIMIT","max","MAX_LIMIT","min","absoluteLeft","delta","_layoutBoxInPage","absoluteAboveTop","absoluteBelowTop","absoluteAboveLeft","_prepareRenderWidgetAtExactPositionOverflowing","topLeft","Coordinate","_getAnchorsCoordinates","getCoordinates","lineHeight","horizontalPosition","visibleRangeForPosition","getVerticalOffsetForLineNumber","scrollTop","AnchorCoordinate","_reduceAnchorCoordinates","fontInfo","typicalFullwidthCharacterWidth","_prepareRenderWidget","preferredDimensions","beforeRender","safeInvoke","clientRect","getBoundingClientRect","placement","pass","pref","coordinate","startLineNumber","endLineNumber","afterRender","setLeft","bigNumbersDelta","_coordinateBrand","_anchorCoordinateBrand","fn","AbstractLineHighlightOverlay","DynamicViewOverlay","_renderLineHighlight","_renderLineHighlightOnlyWhenFocus","_selectionIsEmpty","_focused","_cursorLineNumbers","_selections","Selection","addEventHandler","removeEventHandler","_readFromSelections","cursorsLineNumbers","s","positionLineNumber","arrays","selectionIsEmpty","every","isEmpty","onThemeChanged","onCursorStateChanged","selections","scrollWidthChanged","scrollTopChanged","onFocusChanged","isFocused","_shouldRenderThis","renderedLine","_renderOne","visibleStartLineNumber","visibleRange","visibleEndLineNumber","len","index","renderData","lineIndex","_shouldRenderInMargin","_shouldRenderInContent","CurrentLineHighlightOverlay","_shouldRenderOther","scrollWidth","CurrentLineMarginHighlightOverlay","registerThemingParticipant","theme","collector","lineHighlight","getColor","editorLineHighlight","addRule","isTransparent","defines","editorLineHighlightBorder","lineHighlightBorder","isHighContrast","DecorationsOverlay","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_renderResult","_decorations","getDecorationsInViewport","decorations","decorationsLen","zIndex","aClassName","bClassName","compareRangesUsingStarts","output","_renderWholeLineDecorations","_renderNormalDecorations","String","lenI","isWholeLine","decorationOutput","j","prevClassName","prevShowIfCollapsed","prevRange","showIfCollapsed","getLineMaxColumn","areIntersectingOrTouching","plusRange","_renderNormalDecoration","linesVisibleRanges","linesVisibleRangesForRange","lenJ","lineVisibleRanges","outsideRenderedLine","ranges","singleVisibleRange","center","HorizontalRange","k","lenK","EditorScrollbar","linesContent","overflowGuardDomNode","scrollbar","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollPredominantAxis","scrollbarOptions","listenOnDomNode","getThemeTypeSelector","useShadows","lazyRender","vertical","horizontal","verticalHasArrows","horizontalHasArrows","verticalScrollbarSize","verticalSliderSize","horizontalScrollbarSize","horizontalSliderSize","handleMouseWheel","alwaysConsumeMouseWheel","arrowSize","scrollByPage","SmoothScrollableElement","viewLayout","getScrollable","scrollbarDomNode","_setLayout","onBrowserDesperateReveal","lookAtScrollTop","lookAtScrollLeft","newScrollPosition","deltaTop","getCurrentScrollTop","deltaLeft","getCurrentScrollLeft","setScrollPosition","side","setWidth","minimap","minimapWidth","setHeight","getOverviewRulerLayoutInfo","delegateVerticalScrollbarPointerDown","delegateScrollFromMouseWheelEvent","newOpts","updateOptions","updateClassName","renderNow","DecorationToRender","decorationLane","_decorationToRenderBrand","RenderedDecoration","LineRenderedDecorations","lanes","lane","decoration","getLaneDecorations","laneIndex","DedupOverlay","_render","decorationLaneCount","prevEndLineIndex","startLineIndex","endLineIndex","GlyphMarginOverlay","_glyphMargin","_glyphMarginLeft","glyphMarginLeft","_glyphMarginWidth","glyphMarginWidth","_glyphMarginDecorationLaneCount","glyphMarginDecorationLaneCount","_getDecorations","rLen","glyphMarginClassName","glyphMargin","decorationsToRender","toRender","common","renderInfo","css","winningDecoration","winningDecorationClassNames","join","IndentGuidesOverlay","_primaryPosition","wrappingInfo","_spaceWidth","spaceWidth","_maxIndentLeft","wrappingColumn","_bracketPairGuideOptions","newPosition","equals","onLanguageConfigurationChanged","_c","_d","indentation","bracketPairs","activeCursorPosition","indents","getGuidesByLine","getLineCount","indent","leftOffset","guide","visibleColumn","horizontalLine","bracketGuides","getBracketGuidesInRangeByLine","highlightActive","highlightActiveBracketPair","horizontalGuides","bracketPairsHorizontal","HorizontalGuidesState","Enabled","EnabledForActive","Disabled","includeInactive","indentGuides","getLinesIndentGuides","activeIndentStartLineNumber","activeIndentEndLineNumber","activeIndentLevel","highlightActiveIndentation","activeIndentInfo","getActiveIndentGuide","indentSize","getOptions","lineGuides","bracketGuidesInLine","bracketGuidesInLineQueue","ArrayQueue","indentGuidesInLine","indentLvl","indentGuide","isActive","takeWhile","g","peeked","peek","IndentGuide","transparentToUndefined","color","colors","bracketColor","editorBracketHighlightingForeground1","guideColor","editorBracketPairGuideBackground1","guideColorActive","editorBracketPairGuideActiveBackground1","editorBracketHighlightingForeground2","editorBracketPairGuideBackground2","editorBracketPairGuideActiveBackground2","editorBracketHighlightingForeground3","editorBracketPairGuideBackground3","editorBracketPairGuideActiveBackground3","editorBracketHighlightingForeground4","editorBracketPairGuideBackground4","editorBracketPairGuideActiveBackground4","editorBracketHighlightingForeground5","editorBracketPairGuideBackground5","editorBracketPairGuideActiveBackground5","editorBracketHighlightingForeground6","editorBracketPairGuideBackground6","editorBracketPairGuideActiveBackground6","colorProvider","BracketPairGuidesClassNames","colorValues","effectiveGuideColor","transparent","effectiveGuideColorActive","isDefined","level","getInlineClassNameOfLevel","activeClassName","DomReadingContext","didDomLayout","_didDomLayout","readClientRect","_clientRectRead","rect","_domNode","markDidDomLayout","_clientRectDeltaLeft","_clientRectScale","clientRectDeltaLeft","clientRectScale","endNode","LastRenderedData","_currentVisibleRange","getCurrentVisibleRange","setCurrentVisibleRange","currentVisibleRange","HorizontalRevealRangeRequest","minimalReveal","startScrollTop","stopScrollTop","scrollType","minLineNumber","maxLineNumber","HorizontalRevealSelectionsRequest","ViewLines","_linesContent","_textRangeRestingSpot","_visibleLines","VisibleLinesCollection","conf","_isViewportWrapping","isViewportWrapping","_revealHorizontalRightPadding","_cursorSurroundingLines","_cursorSurroundingLinesStyle","_canUseLayerHinting","_viewLineOptions","ViewLineOptions","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","applyFontInfo","_maxLineWidth","_asyncUpdateLineWidths","_updateLineWidthsSlow","_asyncCheckMonospaceFontAssumptions","_checkMonospaceFontAssumptions","_lastRenderedData","_horizontalRevealRequest","_stickyScrollEnabled","enabled","_maxNumberStickyLines","maxLineCount","createVisibleLine","ViewLine","_onOptionsMaybeChanged","newViewLineOptions","getStartLineNumber","getEndLineNumber","getVisibleLine","onOptionsChanged","rendStartLineNumber","rendEndLineNumber","onSelectionChanged","shouldRender","onRevealRangeRequest","desiredScrollTop","_computeScrollTopToRevealRange","getFutureViewport","verticalType","validateScrollPosition","revealHorizontal","abs","scrollLeftChanged","onTokensChanged","setMaxLineWidth","getPositionFromDOMInfo","spanNode","viewLineDomNode","_getViewLineDomNode","_getLineNumberFor","getColumnOfNodeOffset","minColumn","getLineMinColumn","node","nodeType","CLASS_NAME","parentElement","getLineWidth","getWidth","_updateLineWidthsSlowIfDomDidLayout","_range","includeNewLines","originalEndLineNumber","intersectRanges","visibleRangesLen","domReadingContext","nextLineModelLineNumber","convertViewPositionToModelPosition","visibleRangesForLine","getVisibleRangesForRange","currentLineModelLineNumber","LineVisibleRanges","from","_visibleRangesForLineRange","HorizontalPosition","_updateLineWidthsFast","_updateLineWidths","isScheduled","cancel","fast","localMaxLineWidth","allWidthsComputed","visibleLine","getWidthIsFast","_ensureMaxLineWidth","longestLineNumber","longestWidth","needsMonospaceFontCheck","lineWidth","monospaceAssumptionsAreValid","onMonospaceAssumptionsInvalidated","renderText","renderLines","getScrollWidth","getScrollHeight","horizontalRevealRequest","onDidRender","newScrollLeft","_computeScrollLeftToReveal","maxHorizontalOffset","platform","setLayerHinting","setContain","adjustedScrollTop","iLineWidth","ceil","viewport","viewportStartY","viewportEndY","boxIsSingleRange","boxStartY","boxEndY","newScrollTop","paddingTop","paddingBottom","minScrollTop","boxMiddleY","_computeMinimumScrolling","getCurrentViewport","viewportStartX","viewportEndX","verticalScrollbarWidth","boxStartX","boxEndX","HORIZONTAL_EXTRA_PX","viewportStart","viewportEnd","boxStart","boxEnd","revealAtStart","revealAtEnd","viewportLength","LinesDecorationsOverlay","_decorationsLeft","decorationsLeft","_decorationsWidth","decorationsWidth","linesDecorationsClassName","firstLineDecorationClassName","lineOutput","MarginViewLineDecorationsOverlay","marginClassName","allCharCodes","v","MinimapCharRenderer","charData","scale","_minimapCharRendererBrand","charDataNormal","soften","charDataLight","ratio","Uint8ClampedArray","toUint8","renderChar","dx","dy","chCode","foregroundAlpha","backgroundColor","backgroundAlpha","fontScale","useLighterFont","force1pxHeight","charWidth","charHeight","renderHeight","console","warn","charIndex","getCharIndex","destWidth","backgroundR","backgroundG","backgroundB","deltaR","deltaG","deltaB","destAlpha","sourceOffset","row","blockRenderChar","colorR","colorG","colorB","charTable","A","B","C","D","E","F","decodeData","prebakedMiniMaps","once","MinimapCharRendererFactory","fontFamily","lastCreated","lastFontFamily","factory","createFromSampleData","createSampleData","canvas","getContext","style","fillStyle","font","textBaseline","code","fillText","fromCharCode","getImageData","_downsample","_downsampleChar","destOffset","targetIndex","brightest","sourceY1","sourceY2","sourceX1","sourceX2","samples","sy","sourceRow","floor","yBalance","sx","xBalance","sourceIndex","final","pixelsPerCharacter","resultLen","resultOffset","adjust","MinimapOptions","tokensColorTracker","pixelRatio","minimapLayout","minimapOpts","renderMinimap","size","minimapHeightIsEditorHeight","scrollBeyondLastLine","bottom","showSlider","autohide","minimapLeft","minimapHeight","canvasInnerWidth","minimapCanvasInnerWidth","canvasInnerHeight","minimapCanvasInnerHeight","canvasOuterWidth","minimapCanvasOuterWidth","canvasOuterHeight","minimapCanvasOuterHeight","isSampling","minimapIsSampling","editorHeight","minimapScale","minimapLineHeight","minimapCharWidth","charRenderer","defaultBackgroundColor","_getMinimapBackground","_getMinimapForegroundOpacity","themeColor","minimapBackground","RGBA8","rgba","minimapForegroundOpacity","_clamp","other","MinimapLayout","scrollHeight","sliderNeeded","_computedSliderRatio","sliderTop","sliderHeight","topPaddingLineCount","getDesiredScrollTopFromDelta","getDesiredScrollTopFromTouchLocation","pageY","intersectWithViewport","getYForLineNumber","viewportStartLineNumber","viewportEndLineNumber","viewportStartLineNumberVerticalOffset","viewportContainsWhitespaceGaps","lineCount","realLineCount","previousLayout","minimapLinesFitting","logicalScrollHeight","maxMinimapSliderTop","computedSliderRatio","maxLinesFitting","viewportLineCount","expectedViewportLineCount","extraLinesAtTheTop","extraLinesAtTheBottom","consideringStartLineNumber","partialLine","sliderTopAligned","MinimapLine","onContentChanged","INVALID","RenderData","renderedLayout","imageData","_imageData","_renderedLines","RenderedLinesCollection","_set","linesEquals","layout","scrollEquals","_get","tmp","rendLineNumberStart","changeFromLineNumber","changeCount","deleteFromLineNumber","deleteToLineNumber","insertFromLineNumber","insertToLineNumber","MinimapBuffers","WIDTH","HEIGHT","background","_backgroundFillData","_createBackgroundFillData","_buffers","createImageData","_lastUsedBuffer","getBuffer","backgroundA","MinimapSamplingState","compute","viewLineCount","oldSamplingState","minimapLineCount","EditorLayoutInfoComputer","computeContainedMinimapLineCount","halfRatio","minimapLines","lastIndex","oldMinimapLines","oldLength","oldIndex","oldDeltaLineCount","minViewLineNumber","events","lastEvent","fromViewLineNumber","toViewLineNumber","oldMinimapLineNumber","_oldIndex","selectedViewLineNumber","_i","samplingRatio","modelLineToMinimapLine","modelLineRangeToMinimapLineRange","fromLineNumber","toLineNumber","fromLineIndex","toLineIndex","sampledLineNumber","decorationLineRangeToMinimapLineRange","minimapLineStart","minimapLineEnd","deletedLineCount","changeStartIndex","changeEndIndex","insertedLineCount","Minimap","MinimapTokensColorTracker","getInstance","_minimapSelections","samplingState","_samplingState","_shouldCheckSampling","InnerMinimap","_recreateLineSampling","onDidChangeOptions","affectsMinimap","minimapLineRange","count","onTokensColorsChanged","minimapCtx","whitespaceViewportData","wasSampling","getRealLineCount","getLineContent","getMinimapLinesRenderingData","needed","getViewLineData","getSelections","getMinimapDecorationsInViewport","modelStartLineNumber","modelEndLineNumber","getMinimapDecorationsInRange","minimapStartLineNumber","minimapEndLineNumber","ViewModelDecoration","revealLineNumber","revealRange","_renderDecorations","_gestureInProgress","_theme","_model","_lastRenderData","_selectionColor","minimapSelection","_getMinimapDomNodeClassName","_shadow","_canvas","_decorationsCanvas","_slider","_sliderHorizontal","_applyLayout","_pointerDownListener","preventDefault","button","initialPosY","_startSliderDragging","internalOffsetY","offsetY","_sliderPointerMoveMonitor","_sliderPointerDownListener","stopPropagation","_gestureDisposable","Gesture","addTarget","_sliderTouchStartListener","EventType","Start","toggleClassName","scrollDueToTouchEvent","passive","_sliderTouchMoveListener","Change","_sliderTouchEndListener","End","initialSliderState","Element","initialPosX","pageX","handlePointerMove","minimapPosition","pointerOrthogonalDelta","pointerDelta","buttons","pointerMoveData","touch","startY","class_","_getBuffer","renderingCtx","renderDecorations","tabSize","canvasContext","clearRect","highlightedLines","ContiguousLineMap","_renderSelectionLineHighlights","_renderDecorationsLineHighlights","lineOffsetMap","_renderSelectionsHighlights","_renderDecorationsHighlights","y1","y2","intersection","line","yy1","yy2","fillRect","MINIMAP_GUTTER_WIDTH","highlightColors","minimapOptions","MinimapPosition","Inline","decorationColor","highlightColor","characterWidth","renderDecorationOnLine","Gutter","renderDecoration","decorationRange","x1","getXOffsetForPosition","x2","lineIndexToXOffset","lineData","prevx","charCode","charCodeAt","strings","_lastData","_dirtyY1","_dirtyY2","_renderUntouchedLines","lineInfo","defaultBackground","backgroundIsLight","renderMinimapLineHeight","innerLinePadding","renderBackground","renderedLines","_renderLine","dirtyY1","dirtyHeight","putImageData","lastRenderData","lastTargetData","lastStartLineNumber","lastLines","lastLinesLength","targetData","maxDestPixel","dirtyPixel1","dirtyPixel2","copySourceStart","copySourceEnd","copyDestStart","copyDestEnd","dest_dy","lastLineIndex","source_dy","sourceStart","sourceEnd","destStart","destEnd","subarray","colorTracker","minimapCharRenderer","content","tokens","maxDx","tabsCharDelta","tokenIndex","tokensLen","getCount","tokenEndIndex","getEndOffset","tokenColorId","getForeground","tokenColor","insertSpacesCount","defaultValue","_startLineNumber","_endLineNumber","_defaultValue","_values","ViewOverlayWidgets","_verticalScrollbarWidth","_minimapWidth","_horizontalScrollbarHeight","horizontalScrollbarHeight","_editorHeight","_editorWidth","widgetData","_renderWidget","setRight","widgetHeight","clientHeight","right","Settings","overviewRulerLanes","renderBorder","borderColor","editorOverviewRulerBorder","hideCursor","cursorColor","editorCursorForeground","themeType","minimapEnabled","minimapSide","editorOverviewRulerBackground","TokenizationRegistry","getDefaultBackground","overviewRuler","domWidth","domHeight","canvasWidth","canvasHeight","w","_initLanes","canvasLeftOffset","laneCount","remainingWidth","leftWidth","rightWidth","centerWidth","centerOffset","Color","DecorationsOverviewRuler","_updateSettings","_tokensColorTrackerListener","onDidChange","changedColorMap","_cursorPositions","newSettings","_settings","compare","affectsOverviewRuler","scrollHeightChanged","editorCtx","setBackgroundColor","Format","CSS","formatHexA","heightRatio","getAllOverviewRulerDecorations","minDecorationHeight","halfMinDecorationHeight","canvasCtx","isOpaque","OverviewRulerDecorationsGroup","cmp","decorationGroup","decorationGroupData","prevLane","prevY1","prevY2","yCenter","cursorHeight","halfCursorHeight","cursorX","cursorW","cursor","beginPath","strokeStyle","moveTo","lineTo","stroke","OverviewRuler","ViewEventHandler","cssClassName","_zoneManager","OverviewZoneManager","setDOMWidth","setDOMHeight","setOuterHeight","setLineHeight","setPixelRatio","getDOMWidth","getDOMHeight","getCanvasWidth","getCanvasHeight","setLayout","setZones","zones","getOuterHeight","colorZones","resolveColorZones","id2Color","getId2Color","_renderOneLane","currentColorId","currentFrom","currentTo","zone","zoneColorId","colorId","zoneFrom","zoneTo","to","Rulers","_renderedRulers","_rulers","_ensureRulersCount","currentCount","desiredCount","rulerWidth","addCount","removeCount","pop","ruler","setBoxShadow","ScrollDecorationViewPart","_scrollTop","_width","_updateWidth","_shouldShow","_useShadows","_updateShouldShow","newShouldShow","HorizontalRangeWithStyle","startStyle","endStyle","LineVisibleRangesWithStyle","toStyledRange","toStyled","SelectionsOverlay","_previousFrameVisibleRangesWithStyle","_roundedSelection","_visibleRangesHaveGaps","_enrichVisibleRangesWithStyle","previousFrame","epsilon","previousFrameTop","previousFrameBottom","topLineNumber","bottomLineNumber","curLineRange","curLeft","curRight","prevLeft","prevRight","nextLeft","nextRight","_getVisibleRangesWithStyle","_createSelectionPiece","_actualRenderOneSelection","output2","hasMultipleSelections","visibleRangesHaveStyle","fullLineHeight","reducedLineHeight","firstLineNumber","lastLineNumber","innerCornerOutput","restOfSelectionOutput","SELECTION_CLASS_NAME","ROUNDED_PIECE_WIDTH","EDITOR_BACKGROUND_CLASS_NAME","SELECTION_TOP_RIGHT","SELECTION_BOTTOM_RIGHT","SELECTION_TOP_LEFT","SELECTION_BOTTOM_LEFT","thisFrameVisibleRangesWithStyle","visibleRangesWithStyle","internalCorners","restOfSelection","n","editorSelectionForegroundColor","editorSelectionForeground","ViewCursorRenderData","paddingLeft","textContentClassName","ViewCursor","_cursorStyle","_lineCursorWidth","_position","_lastRenderedContent","show","hide","onCursorPositionChanged","pauseAnimation","transitionProperty","_getGraphemeAwarePosition","lineContent","startOffset","endOffset","substring","_prepareRender","nextGrapheme","TextEditorCursorStyle","Line","LineThin","_getTokenClassName","visibleRangeForCharacter","firstVisibleRangeForCharacter","Block","Underline","UnderlineThin","findTokenIndexAtOffset","getClassName","setPaddingLeft","ViewCursors","_readOnly","_cursorBlinking","_cursorSmoothCaretAnimation","_isComposingInput","_primaryCursor","_secondaryCursors","_updateDomClassName","_startCursorBlinkAnimation","TimeoutTimer","_cursorFlatBlinkInterval","_blinkingEnabled","_editorHasFocus","_updateBlinking","onCompositionStart","onCompositionEnd","_onCursorPositionChanged","secondaryPositions","reason","addCnt","newCursor","insertBefore","nextSibling","removeCnt","positions","secondaryCursor","_getCursorBlinking","blinkingStyle","isHidden","isSolid","_hide","_show","BLINK_INTERVAL","setIfNotSet","_getClassName","BlockOutline","renderDataLen","primaryRenderData","secondaryRenderData","getLastRenderData","caret","caretBackground","editorCursorBackground","opposite","invalidFunc","ViewZones","marginDomNode","_zones","_recomputeWhitespacesProps","whitespaces","getWhitespaces","oldWhitespaces","whitespace","hadAChange","changeWhitespace","whitespaceAccessor","props","_computeWhitespaceProps","delegate","isInHiddenArea","oldWhitespace","afterLineNumber","afterViewLineNumber","heightInPx","changeOneWhitespace","_safeCallOnComputedHeight","_getZoneOrdinal","ordinal","afterColumn","_heightInPixels","minWidthInPx","_minWidthInPixels","zoneAfterModelPosition","zoneBeforeModelPosition","validAfterLineNumber","afterColumnAffinity","isVisible","showInHiddenAreas","changeViewZones","zonesHaveChanged","changeAccessor","addZone","_addZone","removeZone","_removeZone","layoutZone","_layoutZone","func","arg1","onUnexpectedError","safeInvoke1Arg","myZone","whitespaceId","insertWhitespace","removeWhitespace","shouldSuppressMouseDownOnViewZone","heightInLines","onComputedHeight","_safeCallOnDomNodeTop","onDomNodeTop","visibleWhitespaces","visibleZones","hasVisibleZone","visibleWhitespace","newTop","newHeight","newDisplay","verticalOffset","getScrolledTopFromAbsoluteTop","BlockDecorations","blocks","update","didChange","newContentWidth","newContentLeft","blockClassName","block","blockIsAfterEnd","getVerticalOffsetAfterLineNumber","blockDoesNotCollapse","paddingRight","blockPadding","WhitespaceOverlay","_options","WhitespaceOptions","_selection","newOptions","renderWhitespace","selectionsOnLine","maxColumn","_applyRenderWhitespace","continuesWithWrappedLine","editorWhitespaces","USE_SVG","renderWithSVG","stopRenderingLineAfter","fauxIndentLength","onlyBoundary","onlyTrailing","middotWidth","wsmiddotWidth","renderSpaceCharCode","canUseHalfwidthRightwardsArrow","lastNonWhitespaceIndex","lineIsEmptyOrWhitespace","firstNonWhitespaceIndex","currentSelectionIndex","currentSelection","maxLeft","prevChCode","nextChCode","prevCharCode","_renderArrow","toFixed","p1","p2","p3","p4","p5","parts","p","experimentalWhitespaceRendering","View","commandDelegate","colorTheme","userInputEvents","overflowWidgetsDomNode","_renderAnimationFrame","viewController","ViewController","ViewContext","_viewParts","_textAreaHandler","TextAreaHandler","_createTextAreaHandlerHelper","_getEditorClassName","_overflowGuardContainer","_scrollbar","_viewLines","_viewZones","decorationsOverviewRuler","scrollDecoration","contentViewOverlays","ContentViewOverlays","addDynamicOverlay","marginViewOverlays","MarginViewOverlays","LineNumbersOverlay","margin","Margin","_contentWidgets","_viewCursors","_overlayWidgets","rulers","blockOutline","overviewRulerData","parent","textArea","textAreaCover","_pointerHandler","PointerHandler","_createPointerHandlerHelper","_flushAccumulatedAndRenderNow","inputLatency","onRenderStart","_renderNow","linesContentDomNode","viewLinesDomNode","focusTextArea","focus","dispatchTextAreaEvent","dispatchEvent","lastViewCursorsRenderData","lastTextareaPosition","PointerHandlerLastRenderData","viewZoneId","focused","handleEvents","_scheduleRender","viewPart","_onRenderScheduled","bind","safeInvokeNoArg","_actualRender","_getViewPartsToRender","viewPartsToRender","partialViewportData","getLinesViewportData","setViewport","centeredLineNumber","ViewportData","getWhitespaceViewportData","renderingContext","RenderingContext","restoreState","scrollPosition","visibleLinesStabilized","getOffsetForColumn","modelLineNumber","modelColumn","getTargetAtClientPoint","mouseTarget","ViewUserInputEvents","convertViewToModelMouseTarget","createOverviewRuler","change","now","everything","forceShouldRender","writeScreenReaderContent","setAriaOptions","addContentWidget","layoutContentWidget","_e","_f","_g","_h","secondaryPosition","positionAffinity","removeContentWidget","addOverlayWidget","layoutOverlayWidget","newPreference","removeOverlayWidget","ttPolicy","createTrustedTypesPolicy","createHTML","DOMLineBreaksComputerFactory","createLineBreaksComputer","wrappingIndent","wordBreak","requests","injectedTexts","addRequest","lineText","injectedText","previousLineBreakData","finalize","firstLineBreakColumn","injectedTextsPerLine","createEmptyLineBreakWithPossiblyInjectedText","requestIdx","LineInjectedText","applyInjectedText","injectionOptions","t","injectionOffsets","text","ModelLineProjectionData","overallWidth","additionalIndent","additionalIndentSize","additionalIndentLength","containerDomNode","sb","StringBuilder","firstNonWhitespaceIndices","wrappedTextIndentLengths","renderLineContents","allCharOffsets","allVisibleColumns","wrappedTextIndentLength","indentWidth","renderLineContent","substr","renderLine","html","build","trustedhtml","innerHTML","overflowWrap","createRange","lineDomNodes","children","breakOffsets","readLineBreaks","visibleColumns","breakOffsetsVisibleColumn","curInjectedTexts","createLineBreaks","initialVisibleColumn","wrappingIndentLength","hangingOffset","appendString","charOffset","charOffsets","nextCharCode","producedCharacters","space","appendCharCode","appendASCIICharCode","lineDomNode","spans","discoverBreaks","log","low","lowRects","high","highRects","mid","midRects","setStart","firstChild","setEnd","getClientRects","_readConfig","_lastCursorModelPosition","_activeLineNumber","lineNumbers","_renderLineNumbers","renderType","_renderCustomLineNumbers","renderFn","_renderFinalNewline","_lineNumbersLeft","lineNumbersLeft","_lineNumbersWidth","lineNumbersWidth","primaryViewPosition","_getLineRenderLineNumber","viewLineNumber","diff","lineHeightClassName","renderLineNumber","extraClassName","getLineLength","editorLineNumbersColor","editorLineNumbers","editorDimmedLineNumberColor","editorDimmedLineNumber","RangeUtil","_createRange","_handyReadyRange","_detachRange","selectNodeContents","_readClientRects","startElement","endElement","_mergeAdjacentRanges","FloatHorizontalRange","prev","_createHorizontalRangesFromClientRects","clientRects","readHorizontalRanges","startChildIndex","endChildIndex","canUseFastRenderedViewLine","browser","isFirefox","isSafari","renderControlCharacters","useMonospaceOptimizations","isMonospace","fontLigatures","_isMaybeInvalid","_renderedViewLine","setDomNode","getViewLineRenderingData","actualInlineDecorations","LineDecoration","inlineDecorations","renderLineInput","RenderLineInput","isBasicASCII","containsRTL","startVisibleColumn","EditorFontLigatures","OFF","renderViewLine","renderedViewLine","containsForeignElements","FastRenderedViewLine","characterMapping","createRenderedLine","layoutLine","toSlowRenderedLine","VisibleRanges","horizontalRanges","_cachedWidth","keyColumnCount","_keyColumnPixelOffsetCache","Float32Array","_characterMapping","_charWidth","horizontalOffset","getHorizontalOffset","_getReadingTarget","expectedWidth","actualWidth","startPosition","_getColumnPixelOffset","endPosition","keyColumnOrdinal","keyColumn","keyColumnPixelOffset","_actualReadPixelOffset","keyColumnHorizontalOffset","myDomNode","domPosition","getDomPosition","partIndex","spanNodeTextContentLength","spanIndex","previousSibling","getColumn","DomPosition","RenderedViewLine","_isWhitespaceOnly","test","_containsForeignElements","_pixelOffsetCache","_readPixelOffset","_readVisibleRangesForRange","pixelOffset","_readRawVisibleRangesForRange","readingTarget","cachedPixelOffset","expectedResult","startDomPosition","endDomPosition","WebKitRenderedViewLine","endPixelOffset","lastRange","isWebKit","createWebKitRenderedLine","createNormalRenderedLine","OUTER_CLASS_NAME","_glyphMarginBackgroundDomNode"],"sourceRoot":""}