{"version":3,"file":"static/js/monaco-editor-vendor.55a95165.f7e471fd.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/editor/browser/view/renderingContext.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewController.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewLayer.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js","../../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorContributions.js","../../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js","../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js","../../node_modules/monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js","../../node_modules/monaco-editor/esm/vs/editor/browser/widget/workerBasedDocumentDiffProvider.js","../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js","../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js","../../node_modules/monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n    constructor(viewLayout, viewportData) {\n        this._restrictedRenderingContextBrand = undefined;\n        this._viewLayout = viewLayout;\n        this.viewportData = viewportData;\n        this.scrollWidth = this._viewLayout.getScrollWidth();\n        this.scrollHeight = this._viewLayout.getScrollHeight();\n        this.visibleRange = this.viewportData.visibleRange;\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n        const vInfo = this._viewLayout.getCurrentViewport();\n        this.scrollTop = vInfo.top;\n        this.scrollLeft = vInfo.left;\n        this.viewportWidth = vInfo.width;\n        this.viewportHeight = vInfo.height;\n    }\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\n        return absoluteTop - this.scrollTop;\n    }\n    getVerticalOffsetForLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber, includeViewZones);\n    }\n    getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones);\n    }\n    getDecorationsInViewport() {\n        return this.viewportData.getDecorationsInViewport();\n    }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n    constructor(viewLayout, viewportData, viewLines) {\n        super(viewLayout, viewportData);\n        this._renderingContextBrand = undefined;\n        this._viewLines = viewLines;\n    }\n    linesVisibleRangesForRange(range, includeNewLines) {\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n    visibleRangeForPosition(position) {\n        return this._viewLines.visibleRangeForPosition(position);\n    }\n}\nexport class LineVisibleRanges {\n    constructor(outsideRenderedLine, lineNumber, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nexport class HorizontalRange {\n    static from(ranges) {\n        const result = new Array(ranges.length);\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            result[i] = new HorizontalRange(range.left, range.width);\n        }\n        return result;\n    }\n    constructor(left, width) {\n        this._horizontalRangeBrand = undefined;\n        this.left = Math.round(left);\n        this.width = Math.round(width);\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n}\nexport class FloatHorizontalRange {\n    constructor(left, width) {\n        this._floatHorizontalRangeBrand = undefined;\n        this.left = left;\n        this.width = width;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n    static compare(a, b) {\n        return a.left - b.left;\n    }\n}\nexport class HorizontalPosition {\n    constructor(outsideRenderedLine, left) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.originalLeft = left;\n        this.left = Math.round(this.originalLeft);\n    }\n}\nexport class VisibleRanges {\n    constructor(outsideRenderedLine, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.ranges = ranges;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CoreNavigationCommands } from '../coreCommands.js';\nimport { Position } from '../../common/core/position.js';\nimport * as platform from '../../../base/common/platform.js';\nexport class ViewController {\n    constructor(configuration, viewModel, userInputEvents, commandDelegate) {\n        this.configuration = configuration;\n        this.viewModel = viewModel;\n        this.userInputEvents = userInputEvents;\n        this.commandDelegate = commandDelegate;\n    }\n    paste(text, pasteOnNewLine, multicursorText, mode) {\n        this.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n    }\n    type(text) {\n        this.commandDelegate.type(text);\n    }\n    compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        this.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n    }\n    compositionStart() {\n        this.commandDelegate.startComposition();\n    }\n    compositionEnd() {\n        this.commandDelegate.endComposition();\n    }\n    cut() {\n        this.commandDelegate.cut();\n    }\n    setSelection(modelSelection) {\n        CoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n            source: 'keyboard',\n            selection: modelSelection\n        });\n    }\n    _validateViewColumn(viewPosition) {\n        const minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n        if (viewPosition.column < minColumn) {\n            return new Position(viewPosition.lineNumber, minColumn);\n        }\n        return viewPosition;\n    }\n    _hasMulticursorModifier(data) {\n        switch (this.configuration.options.get(75 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.altKey;\n            case 'ctrlKey':\n                return data.ctrlKey;\n            case 'metaKey':\n                return data.metaKey;\n            default:\n                return false;\n        }\n    }\n    _hasNonMulticursorModifier(data) {\n        switch (this.configuration.options.get(75 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.ctrlKey || data.metaKey;\n            case 'ctrlKey':\n                return data.altKey || data.metaKey;\n            case 'metaKey':\n                return data.ctrlKey || data.altKey;\n            default:\n                return false;\n        }\n    }\n    dispatchMouse(data) {\n        const options = this.configuration.options;\n        const selectionClipboardIsOn = (platform.isLinux && options.get(103 /* EditorOption.selectionClipboard */));\n        const columnSelection = options.get(20 /* EditorOption.columnSelection */);\n        if (data.middleButton && !selectionClipboardIsOn) {\n            this._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n        }\n        else if (data.startedOnLineNumbers) {\n            // If the dragging started on the gutter, then have operations work on the entire line\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n                else {\n                    this._createCursor(data.position, true);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount >= 4) {\n            this._selectAll();\n        }\n        else if (data.mouseDownCount === 3) {\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount === 2) {\n            if (!data.onInjectedText) {\n                if (this._hasMulticursorModifier(data)) {\n                    this._lastCursorWordSelect(data.position, data.revealType);\n                }\n                else {\n                    if (data.inSelectionMode) {\n                        this._wordSelectDrag(data.position, data.revealType);\n                    }\n                    else {\n                        this._wordSelect(data.position, data.revealType);\n                    }\n                }\n            }\n        }\n        else {\n            if (this._hasMulticursorModifier(data)) {\n                if (!this._hasNonMulticursorModifier(data)) {\n                    if (data.shiftKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        // Do multi-cursor operations only when purely alt is pressed\n                        if (data.inSelectionMode) {\n                            this._lastCursorMoveToSelect(data.position, data.revealType);\n                        }\n                        else {\n                            this._createCursor(data.position, false);\n                        }\n                    }\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    if (data.altKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        if (columnSelection) {\n                            this._columnSelect(data.position, data.mouseColumn, true);\n                        }\n                        else {\n                            this._moveToSelect(data.position, data.revealType);\n                        }\n                    }\n                }\n                else {\n                    this.moveTo(data.position, data.revealType);\n                }\n            }\n        }\n    }\n    _usualArgs(viewPosition, revealType) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        return {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition,\n            revealType\n        };\n    }\n    moveTo(viewPosition, revealType) {\n        CoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _moveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _columnSelect(viewPosition, mouseColumn, doColumnSelect) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            mouseColumn: mouseColumn,\n            doColumnSelect: doColumnSelect\n        });\n    }\n    _createCursor(viewPosition, wholeLine) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            wholeLine: wholeLine\n        });\n    }\n    _lastCursorMoveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorWordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _selectAll() {\n        CoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n    }\n    // ----------------------\n    _convertViewToModelPosition(viewPosition) {\n        return this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n    }\n    emitKeyDown(e) {\n        this.userInputEvents.emitKeyDown(e);\n    }\n    emitKeyUp(e) {\n        this.userInputEvents.emitKeyUp(e);\n    }\n    emitContextMenu(e) {\n        this.userInputEvents.emitContextMenu(e);\n    }\n    emitMouseMove(e) {\n        this.userInputEvents.emitMouseMove(e);\n    }\n    emitMouseLeave(e) {\n        this.userInputEvents.emitMouseLeave(e);\n    }\n    emitMouseUp(e) {\n        this.userInputEvents.emitMouseUp(e);\n    }\n    emitMouseDown(e) {\n        this.userInputEvents.emitMouseDown(e);\n    }\n    emitMouseDrag(e) {\n        this.userInputEvents.emitMouseDrag(e);\n    }\n    emitMouseDrop(e) {\n        this.userInputEvents.emitMouseDrop(e);\n    }\n    emitMouseDropCanceled() {\n        this.userInputEvents.emitMouseDropCanceled();\n    }\n    emitMouseWheel(e) {\n        this.userInputEvents.emitMouseWheel(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nexport class RenderedLinesCollection {\n    constructor(createLine) {\n        this._createLine = createLine;\n        this._set(1, []);\n    }\n    flush() {\n        this._set(1, []);\n    }\n    _set(rendLineNumberStart, lines) {\n        this._lines = lines;\n        this._rendLineNumberStart = rendLineNumberStart;\n    }\n    _get() {\n        return {\n            rendLineNumberStart: this._rendLineNumberStart,\n            lines: this._lines\n        };\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getStartLineNumber() {\n        return this._rendLineNumberStart;\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getEndLineNumber() {\n        return this._rendLineNumberStart + this._lines.length - 1;\n    }\n    getCount() {\n        return this._lines.length;\n    }\n    getLine(lineNumber) {\n        const lineIndex = lineNumber - this._rendLineNumberStart;\n        if (lineIndex < 0 || lineIndex >= this._lines.length) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        return this._lines[lineIndex];\n    }\n    /**\n     * @returns Lines that were removed from this collection\n     */\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (deleteToLineNumber < startLineNumber) {\n            // deleting above the viewport\n            const deleteCnt = deleteToLineNumber - deleteFromLineNumber + 1;\n            this._rendLineNumberStart -= deleteCnt;\n            return null;\n        }\n        if (deleteFromLineNumber > endLineNumber) {\n            // deleted below the viewport\n            return null;\n        }\n        // Record what needs to be deleted\n        let deleteStartIndex = 0;\n        let deleteCount = 0;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - this._rendLineNumberStart;\n            if (deleteFromLineNumber <= lineNumber && lineNumber <= deleteToLineNumber) {\n                // this is a line to be deleted\n                if (deleteCount === 0) {\n                    // this is the first line to be deleted\n                    deleteStartIndex = lineIndex;\n                    deleteCount = 1;\n                }\n                else {\n                    deleteCount++;\n                }\n            }\n        }\n        // Adjust this._rendLineNumberStart for lines deleted above\n        if (deleteFromLineNumber < startLineNumber) {\n            // Something was deleted above\n            let deleteAboveCount = 0;\n            if (deleteToLineNumber < startLineNumber) {\n                // the entire deleted lines are above\n                deleteAboveCount = deleteToLineNumber - deleteFromLineNumber + 1;\n            }\n            else {\n                deleteAboveCount = startLineNumber - deleteFromLineNumber;\n            }\n            this._rendLineNumberStart -= deleteAboveCount;\n        }\n        const deleted = this._lines.splice(deleteStartIndex, deleteCount);\n        return deleted;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        const changeToLineNumber = changeFromLineNumber + changeCount - 1;\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let someoneNotified = false;\n        for (let changedLineNumber = changeFromLineNumber; changedLineNumber <= changeToLineNumber; changedLineNumber++) {\n            if (changedLineNumber >= startLineNumber && changedLineNumber <= endLineNumber) {\n                // Notify the line\n                this._lines[changedLineNumber - this._rendLineNumberStart].onContentChanged();\n                someoneNotified = true;\n            }\n        }\n        return someoneNotified;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const insertCnt = insertToLineNumber - insertFromLineNumber + 1;\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (insertFromLineNumber <= startLineNumber) {\n            // inserting above the viewport\n            this._rendLineNumberStart += insertCnt;\n            return null;\n        }\n        if (insertFromLineNumber > endLineNumber) {\n            // inserting below the viewport\n            return null;\n        }\n        if (insertCnt + insertFromLineNumber > endLineNumber) {\n            // insert inside the viewport in such a way that all remaining lines are pushed outside\n            const deleted = this._lines.splice(insertFromLineNumber - this._rendLineNumberStart, endLineNumber - insertFromLineNumber + 1);\n            return deleted;\n        }\n        // insert inside the viewport, push out some lines, but not all remaining lines\n        const newLines = [];\n        for (let i = 0; i < insertCnt; i++) {\n            newLines[i] = this._createLine();\n        }\n        const insertIndex = insertFromLineNumber - this._rendLineNumberStart;\n        const beforeLines = this._lines.slice(0, insertIndex);\n        const afterLines = this._lines.slice(insertIndex, this._lines.length - insertCnt);\n        const deletedLines = this._lines.slice(this._lines.length - insertCnt, this._lines.length);\n        this._lines = beforeLines.concat(newLines).concat(afterLines);\n        return deletedLines;\n    }\n    onTokensChanged(ranges) {\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let notifiedSomeone = false;\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const rng = ranges[i];\n            if (rng.toLineNumber < startLineNumber || rng.fromLineNumber > endLineNumber) {\n                // range outside viewport\n                continue;\n            }\n            const from = Math.max(startLineNumber, rng.fromLineNumber);\n            const to = Math.min(endLineNumber, rng.toLineNumber);\n            for (let lineNumber = from; lineNumber <= to; lineNumber++) {\n                const lineIndex = lineNumber - this._rendLineNumberStart;\n                this._lines[lineIndex].onTokensChanged();\n                notifiedSomeone = true;\n            }\n        }\n        return notifiedSomeone;\n    }\n}\nexport class VisibleLinesCollection {\n    constructor(host) {\n        this._host = host;\n        this.domNode = this._createDomNode();\n        this._linesCollection = new RenderedLinesCollection(() => this._host.createVisibleLine());\n    }\n    _createDomNode() {\n        const domNode = createFastDomNode(document.createElement('div'));\n        domNode.setClassName('view-layer');\n        domNode.setPosition('absolute');\n        domNode.domNode.setAttribute('role', 'presentation');\n        domNode.domNode.setAttribute('aria-hidden', 'true');\n        return domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(140 /* EditorOption.layoutInfo */)) {\n            return true;\n        }\n        return false;\n    }\n    onFlushed(e) {\n        this._linesCollection.flush();\n        // No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._linesCollection.onLinesChanged(e.fromLineNumber, e.count);\n    }\n    onLinesDeleted(e) {\n        const deleted = this._linesCollection.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onLinesInserted(e) {\n        const deleted = this._linesCollection.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onTokensChanged(e) {\n        return this._linesCollection.onTokensChanged(e.ranges);\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    getStartLineNumber() {\n        return this._linesCollection.getStartLineNumber();\n    }\n    getEndLineNumber() {\n        return this._linesCollection.getEndLineNumber();\n    }\n    getVisibleLine(lineNumber) {\n        return this._linesCollection.getLine(lineNumber);\n    }\n    renderLines(viewportData) {\n        const inp = this._linesCollection._get();\n        const renderer = new ViewLayerRenderer(this.domNode.domNode, this._host, viewportData);\n        const ctx = {\n            rendLineNumberStart: inp.rendLineNumberStart,\n            lines: inp.lines,\n            linesLength: inp.lines.length\n        };\n        // Decide if this render will do a single update (single large .innerHTML) or many updates (inserting/removing dom nodes)\n        const resCtx = renderer.render(ctx, viewportData.startLineNumber, viewportData.endLineNumber, viewportData.relativeVerticalOffset);\n        this._linesCollection._set(resCtx.rendLineNumberStart, resCtx.lines);\n    }\n}\nclass ViewLayerRenderer {\n    constructor(domNode, host, viewportData) {\n        this.domNode = domNode;\n        this.host = host;\n        this.viewportData = viewportData;\n    }\n    render(inContext, startLineNumber, stopLineNumber, deltaTop) {\n        const ctx = {\n            rendLineNumberStart: inContext.rendLineNumberStart,\n            lines: inContext.lines.slice(0),\n            linesLength: inContext.linesLength\n        };\n        if ((ctx.rendLineNumberStart + ctx.linesLength - 1 < startLineNumber) || (stopLineNumber < ctx.rendLineNumberStart)) {\n            // There is no overlap whatsoever\n            ctx.rendLineNumberStart = startLineNumber;\n            ctx.linesLength = stopLineNumber - startLineNumber + 1;\n            ctx.lines = [];\n            for (let x = startLineNumber; x <= stopLineNumber; x++) {\n                ctx.lines[x - startLineNumber] = this.host.createVisibleLine();\n            }\n            this._finishRendering(ctx, true, deltaTop);\n            return ctx;\n        }\n        // Update lines which will remain untouched\n        this._renderUntouchedLines(ctx, Math.max(startLineNumber - ctx.rendLineNumberStart, 0), Math.min(stopLineNumber - ctx.rendLineNumberStart, ctx.linesLength - 1), deltaTop, startLineNumber);\n        if (ctx.rendLineNumberStart > startLineNumber) {\n            // Insert lines before\n            const fromLineNumber = startLineNumber;\n            const toLineNumber = Math.min(stopLineNumber, ctx.rendLineNumberStart - 1);\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart < startLineNumber) {\n            // Remove lines before\n            const removeCnt = Math.min(ctx.linesLength, startLineNumber - ctx.rendLineNumberStart);\n            if (removeCnt > 0) {\n                this._removeLinesBefore(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        ctx.rendLineNumberStart = startLineNumber;\n        if (ctx.rendLineNumberStart + ctx.linesLength - 1 < stopLineNumber) {\n            // Insert lines after\n            const fromLineNumber = ctx.rendLineNumberStart + ctx.linesLength;\n            const toLineNumber = stopLineNumber;\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart + ctx.linesLength - 1 > stopLineNumber) {\n            // Remove lines after\n            const fromLineNumber = Math.max(0, stopLineNumber - ctx.rendLineNumberStart + 1);\n            const toLineNumber = ctx.linesLength - 1;\n            const removeCnt = toLineNumber - fromLineNumber + 1;\n            if (removeCnt > 0) {\n                this._removeLinesAfter(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        this._finishRendering(ctx, false, deltaTop);\n        return ctx;\n    }\n    _renderUntouchedLines(ctx, startIndex, endIndex, deltaTop, deltaLN) {\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const lines = ctx.lines;\n        for (let i = startIndex; i <= endIndex; i++) {\n            const lineNumber = rendLineNumberStart + i;\n            lines[i].layoutLine(lineNumber, deltaTop[lineNumber - deltaLN]);\n        }\n    }\n    _insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = newLines.concat(ctx.lines);\n    }\n    _removeLinesBefore(ctx, removeCount) {\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(0, removeCount);\n    }\n    _insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = ctx.lines.concat(newLines);\n    }\n    _removeLinesAfter(ctx, removeCount) {\n        const removeIndex = ctx.linesLength - removeCount;\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[removeIndex + i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(removeIndex, removeCount);\n    }\n    _finishRenderingNewLines(ctx, domNodeIsEmpty, newLinesHTML, wasNew) {\n        if (ViewLayerRenderer._ttPolicy) {\n            newLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(newLinesHTML);\n        }\n        const lastChild = this.domNode.lastChild;\n        if (domNodeIsEmpty || !lastChild) {\n            this.domNode.innerHTML = newLinesHTML; // explains the ugly casts -> https://github.com/microsoft/vscode/issues/106396#issuecomment-692625393;\n        }\n        else {\n            lastChild.insertAdjacentHTML('afterend', newLinesHTML);\n        }\n        let currChild = this.domNode.lastChild;\n        for (let i = ctx.linesLength - 1; i >= 0; i--) {\n            const line = ctx.lines[i];\n            if (wasNew[i]) {\n                line.setDomNode(currChild);\n                currChild = currChild.previousSibling;\n            }\n        }\n    }\n    _finishRenderingInvalidLines(ctx, invalidLinesHTML, wasInvalid) {\n        const hugeDomNode = document.createElement('div');\n        if (ViewLayerRenderer._ttPolicy) {\n            invalidLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(invalidLinesHTML);\n        }\n        hugeDomNode.innerHTML = invalidLinesHTML;\n        for (let i = 0; i < ctx.linesLength; i++) {\n            const line = ctx.lines[i];\n            if (wasInvalid[i]) {\n                const source = hugeDomNode.firstChild;\n                const lineDomNode = line.getDomNode();\n                lineDomNode.parentNode.replaceChild(source, lineDomNode);\n                line.setDomNode(source);\n            }\n        }\n    }\n    _finishRendering(ctx, domNodeIsEmpty, deltaTop) {\n        const sb = ViewLayerRenderer._sb;\n        const linesLength = ctx.linesLength;\n        const lines = ctx.lines;\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const wasNew = [];\n        {\n            sb.reset();\n            let hadNewLine = false;\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasNew[i] = false;\n                const lineDomNode = line.getDomNode();\n                if (lineDomNode) {\n                    // line is not new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasNew[i] = true;\n                hadNewLine = true;\n            }\n            if (hadNewLine) {\n                this._finishRenderingNewLines(ctx, domNodeIsEmpty, sb.build(), wasNew);\n            }\n        }\n        {\n            sb.reset();\n            let hadInvalidLine = false;\n            const wasInvalid = [];\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasInvalid[i] = false;\n                if (wasNew[i]) {\n                    // line was new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasInvalid[i] = true;\n                hadInvalidLine = true;\n            }\n            if (hadInvalidLine) {\n                this._finishRenderingInvalidLines(ctx, sb.build(), wasInvalid);\n            }\n        }\n    }\n}\nViewLayerRenderer._ttPolicy = createTrustedTypesPolicy('editorViewLayer', { createHTML: value => value });\nViewLayerRenderer._sb = new StringBuilder(100000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport class ViewOverlays extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        this._dynamicOverlays = [];\n        this._isFocused = false;\n        this.domNode.setClassName('view-overlays');\n    }\n    shouldRender() {\n        if (super.shouldRender()) {\n            return true;\n        }\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            if (dynamicOverlay.shouldRender()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        super.dispose();\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            dynamicOverlay.dispose();\n        }\n        this._dynamicOverlays = [];\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewOverlayLine(this._context.configuration, this._dynamicOverlays);\n    }\n    // ---- end IVisibleLinesHost\n    addDynamicOverlay(overlay) {\n        this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            line.onConfigurationChanged(e);\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        return true;\n    }\n    onFlushed(e) {\n        return this._visibleLines.onFlushed(e);\n    }\n    onFocusChanged(e) {\n        this._isFocused = e.isFocused;\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onScrollChanged(e) {\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n    prepareRender(ctx) {\n        const toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n        for (let i = 0, len = toRender.length; i < len; i++) {\n            const dynamicOverlay = toRender[i];\n            dynamicOverlay.prepareRender(ctx);\n            dynamicOverlay.onDidRender();\n        }\n    }\n    render(ctx) {\n        // Overwriting to bypass `shouldRender` flag\n        this._viewOverlaysRender(ctx);\n        this.domNode.toggleClassName('focused', this._isFocused);\n    }\n    _viewOverlaysRender(ctx) {\n        this._visibleLines.renderLines(ctx.viewportData);\n    }\n}\nexport class ViewOverlayLine {\n    constructor(configuration, dynamicOverlays) {\n        this._configuration = configuration;\n        this._lineHeight = this._configuration.options.get(64 /* EditorOption.lineHeight */);\n        this._dynamicOverlays = dynamicOverlays;\n        this._domNode = null;\n        this._renderedContent = null;\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            return null;\n        }\n        return this._domNode.domNode;\n    }\n    setDomNode(domNode) {\n        this._domNode = createFastDomNode(domNode);\n    }\n    onContentChanged() {\n        // Nothing\n    }\n    onTokensChanged() {\n        // Nothing\n    }\n    onConfigurationChanged(e) {\n        this._lineHeight = this._configuration.options.get(64 /* EditorOption.lineHeight */);\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        let result = '';\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n        }\n        if (this._renderedContent === result) {\n            // No rendering needed\n            return false;\n        }\n        this._renderedContent = result;\n        sb.appendString('<div style=\"position:absolute;top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;width:100%;height:');\n        sb.appendString(String(this._lineHeight));\n        sb.appendString('px;\">');\n        sb.appendString(result);\n        sb.appendString('</div>');\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._domNode) {\n            this._domNode.setTop(deltaTop);\n            this._domNode.setHeight(this._lineHeight);\n        }\n    }\n}\nexport class ContentViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this.domNode.setHeight(0);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n}\nexport class MarginViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode.setClassName('margin-view-overlays');\n        this.domNode.setWidth(1);\n        applyFontInfo(this.domNode, options.get(48 /* EditorOption.fontInfo */));\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        applyFontInfo(this.domNode, options.get(48 /* EditorOption.fontInfo */));\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollHeightChanged;\n    }\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this.domNode.setHeight(height);\n        this.domNode.setWidth(this._contentLeft);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* PartFingerprint.None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== document.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../../common/core/position.js';\nexport class ViewUserInputEvents {\n    constructor(coordinatesConverter) {\n        this.onKeyDown = null;\n        this.onKeyUp = null;\n        this.onContextMenu = null;\n        this.onMouseMove = null;\n        this.onMouseLeave = null;\n        this.onMouseDown = null;\n        this.onMouseUp = null;\n        this.onMouseDrag = null;\n        this.onMouseDrop = null;\n        this.onMouseDropCanceled = null;\n        this.onMouseWheel = null;\n        this._coordinatesConverter = coordinatesConverter;\n    }\n    emitKeyDown(e) {\n        var _a;\n        (_a = this.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitKeyUp(e) {\n        var _a;\n        (_a = this.onKeyUp) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitContextMenu(e) {\n        var _a;\n        (_a = this.onContextMenu) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseMove(e) {\n        var _a;\n        (_a = this.onMouseMove) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseLeave(e) {\n        var _a;\n        (_a = this.onMouseLeave) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDown(e) {\n        var _a;\n        (_a = this.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseUp(e) {\n        var _a;\n        (_a = this.onMouseUp) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrag(e) {\n        var _a;\n        (_a = this.onMouseDrag) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrop(e) {\n        var _a;\n        (_a = this.onMouseDrop) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDropCanceled() {\n        var _a;\n        (_a = this.onMouseDropCanceled) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    emitMouseWheel(e) {\n        var _a;\n        (_a = this.onMouseWheel) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    _convertViewToModelMouseEvent(e) {\n        if (e.target) {\n            return {\n                event: e.event,\n                target: this._convertViewToModelMouseTarget(e.target)\n            };\n        }\n        return e;\n    }\n    _convertViewToModelMouseTarget(target) {\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\n        const result = Object.assign({}, target);\n        if (result.position) {\n            result.position = coordinatesConverter.convertViewPositionToModelPosition(result.position);\n        }\n        if (result.range) {\n            result.range = coordinatesConverter.convertViewRangeToModelRange(result.range);\n        }\n        if (result.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */ || result.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            result.detail = this.convertViewToModelViewZoneData(result.detail, coordinatesConverter);\n        }\n        return result;\n    }\n    static convertViewToModelViewZoneData(data, coordinatesConverter) {\n        return {\n            viewZoneId: data.viewZoneId,\n            positionBefore: data.positionBefore ? coordinatesConverter.convertViewPositionToModelPosition(data.positionBefore) : data.positionBefore,\n            positionAfter: data.positionAfter ? coordinatesConverter.convertViewPositionToModelPosition(data.positionAfter) : data.positionAfter,\n            position: coordinatesConverter.convertViewPositionToModelPosition(data.position),\n            afterLineNumber: coordinatesConverter.convertViewPositionToModelPosition(new Position(data.afterLineNumber, 1)).lineNumber,\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { runWhenIdle } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, DisposableMap } from '../../../base/common/lifecycle.js';\nexport class CodeEditorContributions extends Disposable {\n    constructor() {\n        super();\n        this._editor = null;\n        this._instantiationService = null;\n        /**\n         * Contains all instantiated contributions.\n         */\n        this._instances = this._register(new DisposableMap());\n        /**\n         * Contains contributions which are not yet instantiated.\n         */\n        this._pending = new Map();\n        /**\n         * Tracks which instantiation kinds are still left in `_pending`.\n         */\n        this._finishedInstantiation = [];\n        this._finishedInstantiation[0 /* EditorContributionInstantiation.Eager */] = false;\n        this._finishedInstantiation[1 /* EditorContributionInstantiation.AfterFirstRender */] = false;\n        this._finishedInstantiation[2 /* EditorContributionInstantiation.BeforeFirstInteraction */] = false;\n        this._finishedInstantiation[3 /* EditorContributionInstantiation.Eventually */] = false;\n    }\n    initialize(editor, contributions, instantiationService) {\n        this._editor = editor;\n        this._instantiationService = instantiationService;\n        for (const desc of contributions) {\n            if (this._pending.has(desc.id)) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            this._pending.set(desc.id, desc);\n        }\n        this._instantiateSome(0 /* EditorContributionInstantiation.Eager */);\n        // AfterFirstRender\n        // - these extensions will be instantiated at the latest 50ms after the first render.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }));\n        // BeforeFirstInteraction\n        // - these extensions will be instantiated at the latest before a mouse or a keyboard event.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n        }));\n        // Eventually\n        // - these extensions will only be instantiated when there is idle time.\n        // - since there is no guarantee that there will ever be idle time, we set a timeout of 5s here.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(3 /* EditorContributionInstantiation.Eventually */);\n        }, 5000));\n    }\n    saveViewState() {\n        const contributionsState = {};\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        return contributionsState;\n    }\n    restoreViewState(contributionsState) {\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.restoreViewState === 'function') {\n                contribution.restoreViewState(contributionsState[id]);\n            }\n        }\n    }\n    get(id) {\n        this._instantiateById(id);\n        return this._instances.get(id) || null;\n    }\n    onBeforeInteractionEvent() {\n        // this method is called very often by the editor!\n        this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n    }\n    onAfterModelAttached() {\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }, 50));\n    }\n    _instantiateSome(instantiation) {\n        if (this._finishedInstantiation[instantiation]) {\n            // already done with this instantiation!\n            return;\n        }\n        this._finishedInstantiation[instantiation] = true;\n        const contribs = this._findPendingContributionsByInstantiation(instantiation);\n        for (const contrib of contribs) {\n            this._instantiateById(contrib.id);\n        }\n    }\n    _findPendingContributionsByInstantiation(instantiation) {\n        const result = [];\n        for (const [, desc] of this._pending) {\n            if (desc.instantiation === instantiation) {\n                result.push(desc);\n            }\n        }\n        return result;\n    }\n    _instantiateById(id) {\n        const desc = this._pending.get(id);\n        if (!desc) {\n            return;\n        }\n        this._pending.delete(id);\n        if (!this._instantiationService || !this._editor) {\n            throw new Error(`Cannot instantiate contributions before being initialized!`);\n        }\n        try {\n            const instance = this._instantiationService.createInstance(desc.ctor, this._editor);\n            this._instances.set(desc.id, instance);\n            if (typeof instance.restoreViewState === 'function' && desc.instantiation !== 0 /* EditorContributionInstantiation.Eager */) {\n                console.warn(`Editor contribution '${desc.id}' should be eager instantiated because it uses saveViewState / restoreViewState.`);\n            }\n        }\n        catch (err) {\n            onUnexpectedError(err);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport '../services/markerDecorations.js';\nimport './media/editor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter, EventDeliveryQueue } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { EditorConfiguration } from '../config/editorConfiguration.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { View } from '../view.js';\nimport { ViewUserInputEvents } from '../view/viewUserInputEvents.js';\nimport { filterValidationDecorations } from '../../common/config/editorOptions.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { editorUnnecessaryCodeOpacity } from '../../common/core/editorColorRegistry.js';\nimport { editorErrorForeground, editorHintForeground, editorInfoForeground, editorWarningForeground } from '../../../platform/theme/common/colorRegistry.js';\nimport { ViewModel } from '../../common/viewModel/viewModelImpl.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService, Severity } from '../../../platform/notification/common/notification.js';\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { withNullAsUndefined } from '../../../base/common/types.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { DOMLineBreaksComputerFactory } from '../view/domLineBreaksComputer.js';\nimport { WordOperations } from '../../common/cursor/cursorWordOperations.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { CodeEditorContributions } from './codeEditorContributions.js';\nimport { TabFocus } from '../config/tabFocus.js';\nlet EDITOR_ID = 0;\nclass ModelData {\n    constructor(model, viewModel, view, hasRealView, listenersToRemove, attachedView) {\n        this.model = model;\n        this.viewModel = viewModel;\n        this.view = view;\n        this.hasRealView = hasRealView;\n        this.listenersToRemove = listenersToRemove;\n        this.attachedView = attachedView;\n    }\n    dispose() {\n        dispose(this.listenersToRemove);\n        this.model.onBeforeDetached(this.attachedView);\n        if (this.hasRealView) {\n            this.view.dispose();\n        }\n        this.viewModel.dispose();\n    }\n}\nexport let CodeEditorWidget = class CodeEditorWidget extends Disposable {\n    //#endregion\n    get isSimpleWidget() {\n        return this._configuration.isSimpleWidget;\n    }\n    constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        //#region Eventing\n        this._deliveryQueue = new EventDeliveryQueue();\n        this._contributions = this._register(new CodeEditorContributions());\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModelContent = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n        this._onDidChangeModelLanguage = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n        this._onDidChangeModelLanguageConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n        this._onDidChangeModelOptions = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n        this._onDidChangeModelDecorations = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._onDidChangeModelTokens = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelTokens = this._onDidChangeModelTokens.event;\n        this._onDidChangeConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._onDidChangeModel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidChangeCursorPosition = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n        this._onDidChangeCursorSelection = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n        this._onDidAttemptReadOnlyEdit = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n        this._onDidLayoutChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._editorTextFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n        this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n        this._editorWidgetFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n        this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n        this._onWillType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onWillType = this._onWillType.event;\n        this._onDidType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidType = this._onDidType.event;\n        this._onDidCompositionStart = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionStart = this._onDidCompositionStart.event;\n        this._onDidCompositionEnd = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n        this._onDidPaste = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidPaste = this._onDidPaste.event;\n        this._onMouseUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseUp = this._onMouseUp.event;\n        this._onMouseDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDown = this._onMouseDown.event;\n        this._onMouseDrag = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrag = this._onMouseDrag.event;\n        this._onMouseDrop = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrop = this._onMouseDrop.event;\n        this._onMouseDropCanceled = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n        this._onDropIntoEditor = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDropIntoEditor = this._onDropIntoEditor.event;\n        this._onContextMenu = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onContextMenu = this._onContextMenu.event;\n        this._onMouseMove = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseMove = this._onMouseMove.event;\n        this._onMouseLeave = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseLeave = this._onMouseLeave.event;\n        this._onMouseWheel = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseWheel = this._onMouseWheel.event;\n        this._onKeyUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyUp = this._onKeyUp.event;\n        this._onKeyDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyDown = this._onKeyDown.event;\n        this._onDidContentSizeChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n        this._onDidScrollChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidScrollChange = this._onDidScrollChange.event;\n        this._onDidChangeViewZones = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n        this._onDidChangeHiddenAreas = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n        this._actions = new Map();\n        this._bannerDomNode = null;\n        this._dropIntoEditorDecorations = this.createDecorationsCollection();\n        codeEditorService.willCreateCodeEditor();\n        const options = Object.assign({}, _options);\n        this._domElement = domElement;\n        this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n        delete options.overflowWidgetsDomNode;\n        this._id = (++EDITOR_ID);\n        this._decorationTypeKeysToIds = {};\n        this._decorationTypeSubtypes = {};\n        this._telemetryData = codeEditorWidgetOptions.telemetryData;\n        this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, options, accessibilityService));\n        this._register(this._configuration.onDidChange((e) => {\n            this._onDidChangeConfiguration.fire(e);\n            const options = this._configuration.options;\n            if (e.hasChanged(140 /* EditorOption.layoutInfo */)) {\n                const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n                this._onDidLayoutChange.fire(layoutInfo);\n            }\n        }));\n        this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n        this._notificationService = notificationService;\n        this._codeEditorService = codeEditorService;\n        this._commandService = commandService;\n        this._themeService = themeService;\n        this._register(new EditorContextKeysManager(this, this._contextKeyService));\n        this._register(new EditorModeContext(this, this._contextKeyService, languageFeaturesService));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._modelData = null;\n        this._focusTracker = new CodeEditorWidgetFocusTracker(domElement);\n        this._register(this._focusTracker.onChange(() => {\n            this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n        }));\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        let contributions;\n        if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n            contributions = codeEditorWidgetOptions.contributions;\n        }\n        else {\n            contributions = EditorExtensionsRegistry.getEditorContributions();\n        }\n        this._contributions.initialize(this, contributions, this._instantiationService);\n        for (const action of EditorExtensionsRegistry.getEditorActions()) {\n            if (this._actions.has(action.id)) {\n                onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n                continue;\n            }\n            const internalAction = new InternalEditorAction(action.id, action.label, action.alias, withNullAsUndefined(action.precondition), () => {\n                return this._instantiationService.invokeFunction((accessor) => {\n                    return Promise.resolve(action.runEditorCommand(accessor, this, null));\n                });\n            }, this._contextKeyService);\n            this._actions.set(internalAction.id, internalAction);\n        }\n        const isDropIntoEnabled = () => {\n            return !this._configuration.options.get(88 /* EditorOption.readOnly */)\n                && this._configuration.options.get(34 /* EditorOption.dropIntoEditor */).enabled;\n        };\n        this._register(new dom.DragAndDropObserver(this._domElement, {\n            onDragEnter: () => undefined,\n            onDragOver: e => {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this.showDropIndicatorAt(target.position);\n                }\n            },\n            onDrop: (e) => __awaiter(this, void 0, void 0, function* () {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                this.removeDropIndicator();\n                if (!e.dataTransfer) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this._onDropIntoEditor.fire({ position: target.position, event: e });\n                }\n            }),\n            onDragLeave: () => {\n                this.removeDropIndicator();\n            },\n            onDragEnd: () => {\n                this.removeDropIndicator();\n            },\n        }));\n        this._codeEditorService.addCodeEditor(this);\n    }\n    writeScreenReaderContent(reason) {\n        var _a;\n        (_a = this._modelData) === null || _a === void 0 ? void 0 : _a.view.writeScreenReaderContent(reason);\n    }\n    _createConfiguration(isSimpleWidget, options, accessibilityService) {\n        return new EditorConfiguration(isSimpleWidget, options, this._domElement, accessibilityService);\n    }\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.ICodeEditor;\n    }\n    dispose() {\n        this._codeEditorService.removeCodeEditor(this);\n        this._focusTracker.dispose();\n        this._actions.clear();\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._removeDecorationTypes();\n        this._postDetachModelCleanup(this._detachModel());\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    invokeWithinContext(fn) {\n        return this._instantiationService.invokeFunction(fn);\n    }\n    updateOptions(newOptions) {\n        this._configuration.updateOptions(newOptions || {});\n    }\n    getOptions() {\n        return this._configuration.options;\n    }\n    getOption(id) {\n        return this._configuration.options.get(id);\n    }\n    getRawOptions() {\n        return this._configuration.getRawOptions();\n    }\n    getOverflowWidgetsDomNode() {\n        return this._overflowWidgetsDomNode;\n    }\n    getConfiguredWordAtPosition(position) {\n        if (!this._modelData) {\n            return null;\n        }\n        return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(126 /* EditorOption.wordSeparators */), position);\n    }\n    getValue(options = null) {\n        if (!this._modelData) {\n            return '';\n        }\n        const preserveBOM = (options && options.preserveBOM) ? true : false;\n        let eolPreference = 0 /* EndOfLinePreference.TextDefined */;\n        if (options && options.lineEnding && options.lineEnding === '\\n') {\n            eolPreference = 1 /* EndOfLinePreference.LF */;\n        }\n        else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n            eolPreference = 2 /* EndOfLinePreference.CRLF */;\n        }\n        return this._modelData.model.getValue(eolPreference, preserveBOM);\n    }\n    setValue(newValue) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.model.setValue(newValue);\n    }\n    getModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model;\n    }\n    setModel(_model = null) {\n        const model = _model;\n        if (this._modelData === null && model === null) {\n            // Current model is the new model\n            return;\n        }\n        if (this._modelData && this._modelData.model === model) {\n            // Current model is the new model\n            return;\n        }\n        const hasTextFocus = this.hasTextFocus();\n        const detachedModel = this._detachModel();\n        this._attachModel(model);\n        if (hasTextFocus && this.hasModel()) {\n            this.focus();\n        }\n        const e = {\n            oldModelUrl: detachedModel ? detachedModel.uri : null,\n            newModelUrl: model ? model.uri : null\n        };\n        this._removeDecorationTypes();\n        this._onDidChangeModel.fire(e);\n        this._postDetachModelCleanup(detachedModel);\n        this._contributions.onAfterModelAttached();\n    }\n    _removeDecorationTypes() {\n        this._decorationTypeKeysToIds = {};\n        if (this._decorationTypeSubtypes) {\n            for (const decorationType in this._decorationTypeSubtypes) {\n                const subTypes = this._decorationTypeSubtypes[decorationType];\n                for (const subType in subTypes) {\n                    this._removeDecorationType(decorationType + '-' + subType);\n                }\n            }\n            this._decorationTypeSubtypes = {};\n        }\n    }\n    getVisibleRanges() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRanges();\n    }\n    getVisibleRangesPlusViewportAboveBelow() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n    }\n    getWhitespaces() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.viewLayout.getWhitespaces();\n    }\n    static _getVerticalOffsetAfterPosition(modelData, modelLineNumber, modelColumn, includeViewZones) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetAfterLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getTopForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    getTopForPosition(lineNumber, column) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, column, false);\n    }\n    static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn, includeViewZones = false) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getBottomForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetAfterPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    setHiddenAreas(ranges, source) {\n        var _a;\n        (_a = this._modelData) === null || _a === void 0 ? void 0 : _a.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)), source);\n    }\n    getVisibleColumnFromPosition(rawPosition) {\n        if (!this._modelData) {\n            return rawPosition.column;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const tabSize = this._modelData.model.getOptions().tabSize;\n        return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n    }\n    getPosition() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setSelections(source, [{\n                selectionStartLineNumber: position.lineNumber,\n                selectionStartColumn: position.column,\n                positionLineNumber: position.lineNumber,\n                positionColumn: position.column\n            }]);\n    }\n    _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Range.isIRange(modelRange)) {\n            throw new Error('Invalid arguments');\n        }\n        const validatedModelRange = this._modelData.model.validateRange(modelRange);\n        const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n        this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLine(lineNumber, revealType, scrollType) {\n        if (typeof lineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 0 /* VerticalRevealType.Simple */, true, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n    }\n    getSelection() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelection();\n    }\n    getSelections() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        const isSelection = Selection.isISelection(something);\n        const isRange = Range.isIRange(something);\n        if (!isSelection && !isRange) {\n            throw new Error('Invalid arguments');\n        }\n        if (isSelection) {\n            this._setSelectionImpl(something, source);\n        }\n        else if (isRange) {\n            // act as if it was an IRange\n            const selection = {\n                selectionStartLineNumber: something.startLineNumber,\n                selectionStartColumn: something.startColumn,\n                positionLineNumber: something.endLineNumber,\n                positionColumn: something.endColumn\n            };\n            this._setSelectionImpl(selection, source);\n        }\n    }\n    _setSelectionImpl(sel, source) {\n        if (!this._modelData) {\n            return;\n        }\n        const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        this._modelData.viewModel.setSelections(source, [selection]);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n        if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._revealRange(range, revealVerticalInCenter ? 1 /* VerticalRevealType.Center */ : 0 /* VerticalRevealType.Simple */, revealHorizontal, scrollType);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 6 /* VerticalRevealType.NearTopIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 3 /* VerticalRevealType.Top */, true, scrollType);\n    }\n    _revealRange(range, verticalType, revealHorizontal, scrollType) {\n        if (!Range.isIRange(range)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n    }\n    setSelections(ranges, source = 'api', reason = 0 /* CursorChangeReason.NotSet */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!ranges || ranges.length === 0) {\n            throw new Error('Invalid arguments');\n        }\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (!Selection.isISelection(ranges[i])) {\n                throw new Error('Invalid arguments');\n            }\n        }\n        this._modelData.viewModel.setSelections(source, ranges, reason);\n    }\n    getContentWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentWidth();\n    }\n    getScrollWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollWidth();\n    }\n    getScrollLeft() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n    }\n    getContentHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentHeight();\n    }\n    getScrollHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollHeight();\n    }\n    getScrollTop() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n    }\n    setScrollLeft(newScrollLeft, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollLeft !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollLeft: newScrollLeft\n        }, scrollType);\n    }\n    setScrollTop(newScrollTop, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollTop !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollTop: newScrollTop\n        }, scrollType);\n    }\n    setScrollPosition(position, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition(position, scrollType);\n    }\n    hasPendingScrollAnimation() {\n        if (!this._modelData) {\n            return false;\n        }\n        return this._modelData.viewModel.viewLayout.hasPendingScrollAnimation();\n    }\n    saveViewState() {\n        if (!this._modelData) {\n            return null;\n        }\n        const contributionsState = this._contributions.saveViewState();\n        const cursorState = this._modelData.viewModel.saveCursorState();\n        const viewState = this._modelData.viewModel.saveState();\n        return {\n            cursorState: cursorState,\n            viewState: viewState,\n            contributionsState: contributionsState\n        };\n    }\n    restoreViewState(s) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        const codeEditorState = s;\n        if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n            const cursorState = codeEditorState.cursorState;\n            if (Array.isArray(cursorState)) {\n                if (cursorState.length > 0) {\n                    this._modelData.viewModel.restoreCursorState(cursorState);\n                }\n            }\n            else {\n                // Backwards compatibility\n                this._modelData.viewModel.restoreCursorState([cursorState]);\n            }\n            this._contributions.restoreViewState(codeEditorState.contributionsState || {});\n            const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n            this._modelData.view.restoreState(reducedState);\n        }\n    }\n    getContribution(id) {\n        return this._contributions.get(id);\n    }\n    getActions() {\n        return Array.from(this._actions.values());\n    }\n    getSupportedActions() {\n        let result = this.getActions();\n        result = result.filter(action => action.isSupported());\n        return result;\n    }\n    getAction(id) {\n        return this._actions.get(id) || null;\n    }\n    trigger(source, handlerId, payload) {\n        payload = payload || {};\n        switch (handlerId) {\n            case \"compositionStart\" /* editorCommon.Handler.CompositionStart */:\n                this._startComposition();\n                return;\n            case \"compositionEnd\" /* editorCommon.Handler.CompositionEnd */:\n                this._endComposition(source);\n                return;\n            case \"type\" /* editorCommon.Handler.Type */: {\n                const args = payload;\n                this._type(source, args.text || '');\n                return;\n            }\n            case \"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n                return;\n            }\n            case \"compositionType\" /* editorCommon.Handler.CompositionType */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n                return;\n            }\n            case \"paste\" /* editorCommon.Handler.Paste */: {\n                const args = payload;\n                this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null);\n                return;\n            }\n            case \"cut\" /* editorCommon.Handler.Cut */:\n                this._cut(source);\n                return;\n        }\n        const action = this.getAction(handlerId);\n        if (action) {\n            Promise.resolve(action.run(payload)).then(undefined, onUnexpectedError);\n            return;\n        }\n        if (!this._modelData) {\n            return;\n        }\n        if (this._triggerEditorCommand(source, handlerId, payload)) {\n            return;\n        }\n        this._triggerCommand(handlerId, payload);\n    }\n    _triggerCommand(handlerId, payload) {\n        this._commandService.executeCommand(handlerId, payload);\n    }\n    _startComposition() {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.startComposition();\n        this._onDidCompositionStart.fire();\n    }\n    _endComposition(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.endComposition(source);\n        this._onDidCompositionEnd.fire();\n    }\n    _type(source, text) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        if (source === 'keyboard') {\n            this._onWillType.fire(text);\n        }\n        this._modelData.viewModel.type(text, source);\n        if (source === 'keyboard') {\n            this._onDidType.fire(text);\n        }\n    }\n    _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n    }\n    _paste(source, text, pasteOnNewLine, multicursorText, mode) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        const viewModel = this._modelData.viewModel;\n        const startPosition = viewModel.getSelection().getStartPosition();\n        viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n        const endPosition = viewModel.getSelection().getStartPosition();\n        if (source === 'keyboard') {\n            this._onDidPaste.fire({\n                range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n                languageId: mode\n            });\n        }\n    }\n    _cut(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.cut(source);\n    }\n    _triggerEditorCommand(source, handlerId, payload) {\n        const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n        if (command) {\n            payload = payload || {};\n            payload.source = source;\n            this._instantiationService.invokeFunction((accessor) => {\n                Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n            });\n            return true;\n        }\n        return false;\n    }\n    _getViewModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel;\n    }\n    pushUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(88 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.pushStackElement();\n        return true;\n    }\n    popUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(88 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.popStackElement();\n        return true;\n    }\n    executeEdits(source, edits, endCursorState) {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(88 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        let cursorStateComputer;\n        if (!endCursorState) {\n            cursorStateComputer = () => null;\n        }\n        else if (Array.isArray(endCursorState)) {\n            cursorStateComputer = () => endCursorState;\n        }\n        else {\n            cursorStateComputer = endCursorState;\n        }\n        this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n        return true;\n    }\n    executeCommand(source, command) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommand(command, source);\n    }\n    executeCommands(source, commands) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommands(commands, source);\n    }\n    createDecorationsCollection(decorations) {\n        return new EditorDecorationsCollection(this, decorations);\n    }\n    changeDecorations(callback) {\n        if (!this._modelData) {\n            // callback will not be called\n            return null;\n        }\n        return this._modelData.model.changeDecorations(callback, this._id);\n    }\n    getLineDecorations(lineNumber) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    getDecorationsInRange(range) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    /**\n     * @deprecated\n     */\n    deltaDecorations(oldDecorations, newDecorations) {\n        if (!this._modelData) {\n            return [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            return oldDecorations;\n        }\n        return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n    }\n    removeDecorations(decorationIds) {\n        if (!this._modelData || decorationIds.length === 0) {\n            return;\n        }\n        this._modelData.model.changeDecorations((changeAccessor) => {\n            changeAccessor.deltaDecorations(decorationIds, []);\n        });\n    }\n    removeDecorationsByType(decorationTypeKey) {\n        // remove decorations for type and sub type\n        const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n        if (oldDecorationsIds) {\n            this.deltaDecorations(oldDecorationsIds, []);\n        }\n        if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeKeysToIds[decorationTypeKey];\n        }\n        if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeSubtypes[decorationTypeKey];\n        }\n    }\n    getLayoutInfo() {\n        const options = this._configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        return layoutInfo;\n    }\n    createOverviewRuler(cssClassName) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.createOverviewRuler(cssClassName);\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getDomNode() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.domNode.domNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    layout(dimension) {\n        this._configuration.observeContainer(dimension);\n        this.render();\n    }\n    focus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.focus();\n    }\n    hasTextFocus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return false;\n        }\n        return this._modelData.view.isFocused();\n    }\n    hasWidgetFocus() {\n        return this._focusTracker && this._focusTracker.hasFocus();\n    }\n    addContentWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a content widget with the same id.');\n        }\n        this._contentWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addContentWidget(widgetData);\n        }\n    }\n    layoutContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutContentWidget(widgetData);\n            }\n        }\n    }\n    removeContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            delete this._contentWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeContentWidget(widgetData);\n            }\n        }\n    }\n    addOverlayWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting an overlay widget with the same id.');\n        }\n        this._overlayWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addOverlayWidget(widgetData);\n        }\n    }\n    layoutOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutOverlayWidget(widgetData);\n            }\n        }\n    }\n    removeOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            delete this._overlayWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeOverlayWidget(widgetData);\n            }\n        }\n    }\n    changeViewZones(callback) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.change(callback);\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n    }\n    getScrolledVisiblePosition(rawPosition) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const options = this._configuration.options;\n        const layoutInfo = options.get(140 /* EditorOption.layoutInfo */);\n        const top = CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n        const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n        return {\n            top: top,\n            left: left,\n            height: options.get(64 /* EditorOption.lineHeight */)\n        };\n    }\n    getOffsetForColumn(lineNumber, column) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return -1;\n        }\n        return this._modelData.view.getOffsetForColumn(lineNumber, column);\n    }\n    render(forceRedraw = false) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.render(true, forceRedraw);\n    }\n    setAriaOptions(options) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.setAriaOptions(options);\n    }\n    applyFontInfo(target) {\n        applyFontInfo(target, this._configuration.options.get(48 /* EditorOption.fontInfo */));\n    }\n    setBanner(domNode, domNodeHeight) {\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        this._bannerDomNode = domNode;\n        this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n        if (this._bannerDomNode) {\n            this._domElement.prepend(this._bannerDomNode);\n        }\n    }\n    _attachModel(model) {\n        if (!model) {\n            this._modelData = null;\n            return;\n        }\n        const listenersToRemove = [];\n        this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n        this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n        this._configuration.setModelLineCount(model.getLineCount());\n        const attachedView = model.onBeforeAttached();\n        const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(), MonospaceLineBreaksComputerFactory.create(this._configuration.options), (callback) => dom.scheduleAtNextAnimationFrame(callback), this.languageConfigurationService, this._themeService, attachedView);\n        // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n        listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n        listenersToRemove.push(viewModel.onEvent((e) => {\n            switch (e.kind) {\n                case 0 /* OutgoingViewModelEventKind.ContentSizeChanged */:\n                    this._onDidContentSizeChange.fire(e);\n                    break;\n                case 1 /* OutgoingViewModelEventKind.FocusChanged */:\n                    this._editorTextFocus.setValue(e.hasFocus);\n                    break;\n                case 2 /* OutgoingViewModelEventKind.ScrollChanged */:\n                    this._onDidScrollChange.fire(e);\n                    break;\n                case 3 /* OutgoingViewModelEventKind.ViewZonesChanged */:\n                    this._onDidChangeViewZones.fire();\n                    break;\n                case 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */:\n                    this._onDidChangeHiddenAreas.fire();\n                    break;\n                case 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */:\n                    this._onDidAttemptReadOnlyEdit.fire();\n                    break;\n                case 6 /* OutgoingViewModelEventKind.CursorStateChanged */: {\n                    if (e.reachedMaxCursorCount) {\n                        const multiCursorLimit = this.getOption(77 /* EditorOption.multiCursorLimit */);\n                        const message = nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}. Consider using [find and replace](https://code.visualstudio.com/docs/editor/codebasics#_find-and-replace) for larger changes or increase the editor multi cursor limit setting.\", multiCursorLimit);\n                        this._notificationService.prompt(Severity.Warning, message, [\n                            {\n                                label: 'Find and Replace',\n                                run: () => {\n                                    this._commandService.executeCommand('editor.action.startFindReplaceAction');\n                                }\n                            },\n                            {\n                                label: nls.localize('goToSetting', 'Increase Multi Cursor Limit'),\n                                run: () => {\n                                    this._commandService.executeCommand('workbench.action.openSettings2', {\n                                        query: 'editor.multiCursorLimit'\n                                    });\n                                }\n                            }\n                        ]);\n                    }\n                    const positions = [];\n                    for (let i = 0, len = e.selections.length; i < len; i++) {\n                        positions[i] = e.selections[i].getPosition();\n                    }\n                    const e1 = {\n                        position: positions[0],\n                        secondaryPositions: positions.slice(1),\n                        reason: e.reason,\n                        source: e.source\n                    };\n                    this._onDidChangeCursorPosition.fire(e1);\n                    const e2 = {\n                        selection: e.selections[0],\n                        secondarySelections: e.selections.slice(1),\n                        modelVersionId: e.modelVersionId,\n                        oldSelections: e.oldSelections,\n                        oldModelVersionId: e.oldModelVersionId,\n                        source: e.source,\n                        reason: e.reason\n                    };\n                    this._onDidChangeCursorSelection.fire(e2);\n                    break;\n                }\n                case 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */:\n                    this._onDidChangeModelDecorations.fire(e.event);\n                    break;\n                case 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */:\n                    this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n                    this._onDidChangeModelLanguage.fire(e.event);\n                    break;\n                case 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */:\n                    this._onDidChangeModelLanguageConfiguration.fire(e.event);\n                    break;\n                case 10 /* OutgoingViewModelEventKind.ModelContentChanged */:\n                    this._onDidChangeModelContent.fire(e.event);\n                    break;\n                case 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */:\n                    this._onDidChangeModelOptions.fire(e.event);\n                    break;\n                case 12 /* OutgoingViewModelEventKind.ModelTokensChanged */:\n                    this._onDidChangeModelTokens.fire(e.event);\n                    break;\n            }\n        }));\n        const [view, hasRealView] = this._createView(viewModel);\n        if (hasRealView) {\n            this._domElement.appendChild(view.domNode.domNode);\n            let keys = Object.keys(this._contentWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addContentWidget(this._contentWidgets[widgetId]);\n            }\n            keys = Object.keys(this._overlayWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addOverlayWidget(this._overlayWidgets[widgetId]);\n            }\n            view.render(false, true);\n            view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n        }\n        this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove, attachedView);\n    }\n    _createView(viewModel) {\n        let commandDelegate;\n        if (this.isSimpleWidget) {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n                },\n                type: (text) => {\n                    this._type('keyboard', text);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n                },\n                startComposition: () => {\n                    this._startComposition();\n                },\n                endComposition: () => {\n                    this._endComposition('keyboard');\n                },\n                cut: () => {\n                    this._cut('keyboard');\n                }\n            };\n        }\n        else {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    const payload = { text, pasteOnNewLine, multicursorText, mode };\n                    this._commandService.executeCommand(\"paste\" /* editorCommon.Handler.Paste */, payload);\n                },\n                type: (text) => {\n                    const payload = { text };\n                    this._commandService.executeCommand(\"type\" /* editorCommon.Handler.Type */, payload);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    // Try if possible to go through the existing `replacePreviousChar` command\n                    if (replaceNextCharCnt || positionDelta) {\n                        // must be handled through the new command\n                        const payload = { text, replacePrevCharCnt, replaceNextCharCnt, positionDelta };\n                        this._commandService.executeCommand(\"compositionType\" /* editorCommon.Handler.CompositionType */, payload);\n                    }\n                    else {\n                        const payload = { text, replaceCharCnt: replacePrevCharCnt };\n                        this._commandService.executeCommand(\"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */, payload);\n                    }\n                },\n                startComposition: () => {\n                    this._commandService.executeCommand(\"compositionStart\" /* editorCommon.Handler.CompositionStart */, {});\n                },\n                endComposition: () => {\n                    this._commandService.executeCommand(\"compositionEnd\" /* editorCommon.Handler.CompositionEnd */, {});\n                },\n                cut: () => {\n                    this._commandService.executeCommand(\"cut\" /* editorCommon.Handler.Cut */, {});\n                }\n            };\n        }\n        const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n        viewUserInputEvents.onKeyDown = (e) => this._onKeyDown.fire(e);\n        viewUserInputEvents.onKeyUp = (e) => this._onKeyUp.fire(e);\n        viewUserInputEvents.onContextMenu = (e) => this._onContextMenu.fire(e);\n        viewUserInputEvents.onMouseMove = (e) => this._onMouseMove.fire(e);\n        viewUserInputEvents.onMouseLeave = (e) => this._onMouseLeave.fire(e);\n        viewUserInputEvents.onMouseDown = (e) => this._onMouseDown.fire(e);\n        viewUserInputEvents.onMouseUp = (e) => this._onMouseUp.fire(e);\n        viewUserInputEvents.onMouseDrag = (e) => this._onMouseDrag.fire(e);\n        viewUserInputEvents.onMouseDrop = (e) => this._onMouseDrop.fire(e);\n        viewUserInputEvents.onMouseDropCanceled = (e) => this._onMouseDropCanceled.fire(e);\n        viewUserInputEvents.onMouseWheel = (e) => this._onMouseWheel.fire(e);\n        const view = new View(commandDelegate, this._configuration, this._themeService.getColorTheme(), viewModel, viewUserInputEvents, this._overflowWidgetsDomNode);\n        return [view, true];\n    }\n    _postDetachModelCleanup(detachedModel) {\n        detachedModel === null || detachedModel === void 0 ? void 0 : detachedModel.removeAllDecorationsWithOwnerId(this._id);\n    }\n    _detachModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        const model = this._modelData.model;\n        const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n        this._modelData.dispose();\n        this._modelData = null;\n        this._domElement.removeAttribute('data-mode-id');\n        if (removeDomNode && this._domElement.contains(removeDomNode)) {\n            this._domElement.removeChild(removeDomNode);\n        }\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        return model;\n    }\n    _removeDecorationType(key) {\n        this._codeEditorService.removeDecorationType(key);\n    }\n    hasModel() {\n        return (this._modelData !== null);\n    }\n    showDropIndicatorAt(position) {\n        const newDecorations = [{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: CodeEditorWidget.dropIntoEditorDecorationOptions\n            }];\n        this._dropIntoEditorDecorations.set(newDecorations);\n        this.revealPosition(position, 1 /* editorCommon.ScrollType.Immediate */);\n    }\n    removeDropIndicator() {\n        this._dropIntoEditorDecorations.clear();\n    }\n};\nCodeEditorWidget.dropIntoEditorDecorationOptions = ModelDecorationOptions.register({\n    description: 'workbench-dnd-target',\n    className: 'dnd-target'\n});\nCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], CodeEditorWidget);\nexport class BooleanEventEmitter extends Disposable {\n    constructor(_emitterOptions) {\n        super();\n        this._emitterOptions = _emitterOptions;\n        this._onDidChangeToTrue = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n        this._onDidChangeToFalse = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n        this._value = 0 /* BooleanEventValue.NotSet */;\n    }\n    setValue(_value) {\n        const value = (_value ? 2 /* BooleanEventValue.True */ : 1 /* BooleanEventValue.False */);\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n        if (this._value === 2 /* BooleanEventValue.True */) {\n            this._onDidChangeToTrue.fire();\n        }\n        else if (this._value === 1 /* BooleanEventValue.False */) {\n            this._onDidChangeToFalse.fire();\n        }\n    }\n}\n/**\n * A regular event emitter that also makes sure contributions are instantiated if necessary\n */\nclass InteractionEmitter extends Emitter {\n    constructor(_contributions, deliveryQueue) {\n        super({ deliveryQueue });\n        this._contributions = _contributions;\n    }\n    fire(event) {\n        this._contributions.onBeforeInteractionEvent();\n        super.fire(event);\n    }\n}\nclass EditorContextKeysManager extends Disposable {\n    constructor(editor, contextKeyService) {\n        super();\n        this._editor = editor;\n        contextKeyService.createKey('editorId', editor.getId());\n        this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n        this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n        this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n        this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n        this._editorTabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n        this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n        this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n        this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n        this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n        this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n        this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n        this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n        this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n        this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n        this._register(TabFocus.onDidChangeTabFocus(() => this._editorTabMovesFocus.set(TabFocus.getTabFocusMode(\"editorFocus\" /* TabFocusContext.Editor */))));\n        this._updateFromConfig();\n        this._updateFromSelection();\n        this._updateFromFocus();\n        this._updateFromModel();\n        this._editorSimpleInput.set(this._editor.isSimpleWidget);\n    }\n    _updateFromConfig() {\n        const options = this._editor.getOptions();\n        this._editorTabMovesFocus.set(TabFocus.getTabFocusMode(\"editorFocus\" /* TabFocusContext.Editor */));\n        this._editorReadonly.set(options.get(88 /* EditorOption.readOnly */));\n        this._inDiffEditor.set(options.get(59 /* EditorOption.inDiffEditor */));\n        this._editorColumnSelection.set(options.get(20 /* EditorOption.columnSelection */));\n    }\n    _updateFromSelection() {\n        const selections = this._editor.getSelections();\n        if (!selections) {\n            this._hasMultipleSelections.reset();\n            this._hasNonEmptySelection.reset();\n        }\n        else {\n            this._hasMultipleSelections.set(selections.length > 1);\n            this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n        }\n    }\n    _updateFromFocus() {\n        this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n        this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n        this._textInputFocus.set(this._editor.hasTextFocus());\n    }\n    _updateFromModel() {\n        const model = this._editor.getModel();\n        this._canUndo.set(Boolean(model && model.canUndo()));\n        this._canRedo.set(Boolean(model && model.canRedo()));\n    }\n}\nexport class EditorModeContext extends Disposable {\n    constructor(_editor, _contextKeyService, _languageFeaturesService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n        this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n        this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n        this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n        this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n        this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n        this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n        this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n        this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n        this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n        this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n        this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n        this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n        this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n        this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n        this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._isInWalkThrough = EditorContextKeys.isInWalkThroughSnippet.bindTo(_contextKeyService);\n        const update = () => this._update();\n        // update when model/mode changes\n        this._register(_editor.onDidChangeModel(update));\n        this._register(_editor.onDidChangeModelLanguage(update));\n        // update when registries change\n        this._register(_languageFeaturesService.completionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeActionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeLensProvider.onDidChange(update));\n        this._register(_languageFeaturesService.definitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.declarationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.implementationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.typeDefinitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.hoverProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentHighlightProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentSymbolProvider.onDidChange(update));\n        this._register(_languageFeaturesService.referenceProvider.onDidChange(update));\n        this._register(_languageFeaturesService.renameProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.signatureHelpProvider.onDidChange(update));\n        this._register(_languageFeaturesService.inlayHintsProvider.onDidChange(update));\n        update();\n    }\n    dispose() {\n        super.dispose();\n    }\n    reset() {\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.reset();\n            this._hasCompletionItemProvider.reset();\n            this._hasCodeActionsProvider.reset();\n            this._hasCodeLensProvider.reset();\n            this._hasDefinitionProvider.reset();\n            this._hasDeclarationProvider.reset();\n            this._hasImplementationProvider.reset();\n            this._hasTypeDefinitionProvider.reset();\n            this._hasHoverProvider.reset();\n            this._hasDocumentHighlightProvider.reset();\n            this._hasDocumentSymbolProvider.reset();\n            this._hasReferenceProvider.reset();\n            this._hasRenameProvider.reset();\n            this._hasDocumentFormattingProvider.reset();\n            this._hasDocumentSelectionFormattingProvider.reset();\n            this._hasSignatureHelpProvider.reset();\n            this._isInWalkThrough.reset();\n        });\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            this.reset();\n            return;\n        }\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.set(model.getLanguageId());\n            this._hasCompletionItemProvider.set(this._languageFeaturesService.completionProvider.has(model));\n            this._hasCodeActionsProvider.set(this._languageFeaturesService.codeActionProvider.has(model));\n            this._hasCodeLensProvider.set(this._languageFeaturesService.codeLensProvider.has(model));\n            this._hasDefinitionProvider.set(this._languageFeaturesService.definitionProvider.has(model));\n            this._hasDeclarationProvider.set(this._languageFeaturesService.declarationProvider.has(model));\n            this._hasImplementationProvider.set(this._languageFeaturesService.implementationProvider.has(model));\n            this._hasTypeDefinitionProvider.set(this._languageFeaturesService.typeDefinitionProvider.has(model));\n            this._hasHoverProvider.set(this._languageFeaturesService.hoverProvider.has(model));\n            this._hasDocumentHighlightProvider.set(this._languageFeaturesService.documentHighlightProvider.has(model));\n            this._hasDocumentSymbolProvider.set(this._languageFeaturesService.documentSymbolProvider.has(model));\n            this._hasReferenceProvider.set(this._languageFeaturesService.referenceProvider.has(model));\n            this._hasRenameProvider.set(this._languageFeaturesService.renameProvider.has(model));\n            this._hasSignatureHelpProvider.set(this._languageFeaturesService.signatureHelpProvider.has(model));\n            this._hasInlayHintsProvider.set(this._languageFeaturesService.inlayHintsProvider.has(model));\n            this._hasDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.has(model) || this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasMultipleDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.all(model).length + this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._hasMultipleDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._isInWalkThrough.set(model.uri.scheme === Schemas.walkThroughSnippet);\n        });\n    }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n    constructor(domElement) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._hasFocus = false;\n        this._domFocusTracker = this._register(dom.trackFocus(domElement));\n        this._register(this._domFocusTracker.onDidFocus(() => {\n            this._hasFocus = true;\n            this._onChange.fire(undefined);\n        }));\n        this._register(this._domFocusTracker.onDidBlur(() => {\n            this._hasFocus = false;\n            this._onChange.fire(undefined);\n        }));\n    }\n    hasFocus() {\n        return this._hasFocus;\n    }\n}\nclass EditorDecorationsCollection {\n    get length() {\n        return this._decorationIds.length;\n    }\n    constructor(_editor, decorations) {\n        this._editor = _editor;\n        this._decorationIds = [];\n        this._isChangingDecorations = false;\n        if (Array.isArray(decorations) && decorations.length > 0) {\n            this.set(decorations);\n        }\n    }\n    onDidChange(listener, thisArgs, disposables) {\n        return this._editor.onDidChangeModelDecorations((e) => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            listener.call(thisArgs, e);\n        }, disposables);\n    }\n    getRange(index) {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (index >= this._decorationIds.length) {\n            return null;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorationIds[index]);\n    }\n    getRanges() {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const result = [];\n        for (const decorationId of this._decorationIds) {\n            const range = model.getDecorationRange(decorationId);\n            if (range) {\n                result.push(range);\n            }\n        }\n        return result;\n    }\n    has(decoration) {\n        return this._decorationIds.includes(decoration.id);\n    }\n    clear() {\n        if (this._decorationIds.length === 0) {\n            // nothing to do\n            return;\n        }\n        this.set([]);\n    }\n    set(newDecorations) {\n        try {\n            this._isChangingDecorations = true;\n            this._editor.changeDecorations((accessor) => {\n                this._decorationIds = accessor.deltaDecorations(this._decorationIds, newDecorations);\n            });\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n        return this._decorationIds;\n    }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n    return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n    return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n    const errorForeground = theme.getColor(editorErrorForeground);\n    if (errorForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n    }\n    const warningForeground = theme.getColor(editorWarningForeground);\n    if (warningForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n    }\n    const infoForeground = theme.getColor(editorInfoForeground);\n    if (infoForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n    }\n    const hintForeground = theme.getColor(editorHintForeground);\n    if (hintForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* ClassName.EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n    }\n    const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n    if (unnecessaryForeground) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './media/diffReview.css';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport * as nls from '../../../nls.js';\nimport { AudioCue, IAudioCueService } from '../../../platform/audioCues/browser/audioCueService.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nconst DIFF_LINES_PADDING = 3;\nclass DiffEntry {\n    constructor(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n        this.originalLineStart = originalLineStart;\n        this.originalLineEnd = originalLineEnd;\n        this.modifiedLineStart = modifiedLineStart;\n        this.modifiedLineEnd = modifiedLineEnd;\n    }\n    getType() {\n        if (this.originalLineStart === 0) {\n            return 1 /* DiffEntryType.Insert */;\n        }\n        if (this.modifiedLineStart === 0) {\n            return 2 /* DiffEntryType.Delete */;\n        }\n        return 0 /* DiffEntryType.Equal */;\n    }\n}\nclass Diff {\n    constructor(entries) {\n        this.entries = entries;\n    }\n}\nconst diffReviewInsertIcon = registerIcon('diff-review-insert', Codicon.add, nls.localize('diffReviewInsertIcon', 'Icon for \\'Insert\\' in diff review.'));\nconst diffReviewRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, nls.localize('diffReviewRemoveIcon', 'Icon for \\'Remove\\' in diff review.'));\nconst diffReviewCloseIcon = registerIcon('diff-review-close', Codicon.close, nls.localize('diffReviewCloseIcon', 'Icon for \\'Close\\' in diff review.'));\nexport let DiffReview = class DiffReview extends Disposable {\n    constructor(diffEditor, _languageService, _audioCueService, _configurationService) {\n        super();\n        this._languageService = _languageService;\n        this._audioCueService = _audioCueService;\n        this._configurationService = _configurationService;\n        this._width = 0;\n        this._diffEditor = diffEditor;\n        this._isVisible = false;\n        this.shadow = createFastDomNode(document.createElement('div'));\n        this.shadow.setClassName('diff-review-shadow');\n        this.actionBarContainer = createFastDomNode(document.createElement('div'));\n        this.actionBarContainer.setClassName('diff-review-actions');\n        this._actionBar = this._register(new ActionBar(this.actionBarContainer.domNode));\n        this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(diffReviewCloseIcon), true, () => __awaiter(this, void 0, void 0, function* () { return this.hide(); })), { label: false, icon: true });\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('diff-review monaco-editor-background');\n        this._content = createFastDomNode(document.createElement('div'));\n        this._content.setClassName('diff-review-content');\n        this._content.setAttribute('role', 'code');\n        this.scrollbar = this._register(new DomScrollableElement(this._content.domNode, {}));\n        this.domNode.domNode.appendChild(this.scrollbar.getDomNode());\n        this._register(diffEditor.onDidUpdateDiff(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._diffs = this._compute();\n            this._render();\n        }));\n        this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._render();\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'click', (e) => {\n            e.preventDefault();\n            const row = dom.findParentWithClass(e.target, 'diff-review-row');\n            if (row) {\n                this._goToRow(row);\n            }\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'keydown', (e) => {\n            if (e.equals(18 /* KeyCode.DownArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getNextRow(), 'next');\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getPrevRow(), 'previous');\n            }\n            if (e.equals(9 /* KeyCode.Escape */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 9 /* KeyCode.Escape */)\n                || e.equals(512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */)\n                || e.equals(1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */)\n                || e.equals(10 /* KeyCode.Space */)\n                || e.equals(3 /* KeyCode.Enter */)) {\n                e.preventDefault();\n                this.accept();\n            }\n        }));\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.verbosity.diffEditor')) {\n                this._diffEditor.updateOptions({ accessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.diffEditor') });\n            }\n        }));\n        this._diffs = [];\n        this._currentDiff = null;\n    }\n    prev() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (this._diffs.length + currentIndex - 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getPrevRow(), 'previous');\n    }\n    next() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (currentIndex + 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow(), 'next');\n    }\n    accept() {\n        let jumpToLineNumber = -1;\n        const current = this._getCurrentFocusedRow();\n        if (current) {\n            const lineNumber = parseInt(current.getAttribute('data-line'), 10);\n            if (!isNaN(lineNumber)) {\n                jumpToLineNumber = lineNumber;\n            }\n        }\n        this.hide();\n        if (jumpToLineNumber !== -1) {\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* ScrollType.Immediate */);\n        }\n    }\n    hide() {\n        this._isVisible = false;\n        this._diffEditor.updateOptions({ readOnly: false });\n        this._diffEditor.focus();\n        this._diffEditor.doLayout();\n        this._render();\n    }\n    _getPrevRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.previousElementSibling) {\n            return current.previousElementSibling;\n        }\n        return current;\n    }\n    _getNextRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.nextElementSibling) {\n            return current.nextElementSibling;\n        }\n        return current;\n    }\n    _getFirstRow() {\n        return this.domNode.domNode.querySelector('.diff-review-row');\n    }\n    _getCurrentFocusedRow() {\n        const result = document.activeElement;\n        if (result && /diff-review-row/.test(result.className)) {\n            return result;\n        }\n        return null;\n    }\n    _goToRow(row, type) {\n        const current = this._getCurrentFocusedRow();\n        row.tabIndex = 0;\n        row.focus();\n        if (current && current !== row) {\n            current.tabIndex = -1;\n        }\n        const element = !type ? current : type === 'next' ? current === null || current === void 0 ? void 0 : current.nextElementSibling : current === null || current === void 0 ? void 0 : current.previousElementSibling;\n        if (element === null || element === void 0 ? void 0 : element.classList.contains(\"line-insert\" /* DiffEditorLineClasses.Insert */)) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineInserted, true);\n        }\n        else if (element === null || element === void 0 ? void 0 : element.classList.contains(\"line-delete\" /* DiffEditorLineClasses.Delete */)) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, true);\n        }\n        this.scrollbar.scanDomNode();\n    }\n    isVisible() {\n        return this._isVisible;\n    }\n    layout(top, width, height) {\n        this._width = width;\n        this.shadow.setTop(top - 6);\n        this.shadow.setWidth(width);\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\n        this.domNode.setTop(top);\n        this.domNode.setWidth(width);\n        this.domNode.setHeight(height);\n        this._content.setHeight(height);\n        this._content.setWidth(width);\n        if (this._isVisible) {\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\n            this.actionBarContainer.setDisplay('block');\n        }\n        else {\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\n            this.actionBarContainer.setDisplay('none');\n        }\n    }\n    _compute() {\n        const lineChanges = this._diffEditor.getLineChanges();\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        if (!originalModel || !modifiedModel) {\n            return [];\n        }\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n    }\n    static _mergeAdjacent(lineChanges, originalLineCount, modifiedLineCount) {\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const diffs = [];\n        let diffsLength = 0;\n        for (let i = 0, len = lineChanges.length; i < len; i++) {\n            const lineChange = lineChanges[i];\n            const originalStart = lineChange.originalStartLineNumber;\n            const originalEnd = lineChange.originalEndLineNumber;\n            const modifiedStart = lineChange.modifiedStartLineNumber;\n            const modifiedEnd = lineChange.modifiedEndLineNumber;\n            const r = [];\n            let rLength = 0;\n            // Emit before anchors\n            {\n                const originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\n                const modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\n                // Make sure we don't step into the previous diff\n                let minOriginal = 1;\n                let minModified = 1;\n                if (i > 0) {\n                    const prevLineChange = lineChanges[i - 1];\n                    if (prevLineChange.originalEndLineNumber === 0) {\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\n                    }\n                    else {\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\n                    }\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\n                    }\n                    else {\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\n                    }\n                }\n                let fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n                let fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n                if (fromOriginal < minOriginal) {\n                    const delta = minOriginal - fromOriginal;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                if (fromModified < minModified) {\n                    const delta = minModified - fromModified;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                r[rLength++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n            }\n            // Emit deleted lines\n            {\n                if (originalEnd !== 0) {\n                    r[rLength++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n                }\n            }\n            // Emit inserted lines\n            {\n                if (modifiedEnd !== 0) {\n                    r[rLength++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n                }\n            }\n            // Emit after anchors\n            {\n                const originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\n                const modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\n                // Make sure we don't step into the next diff\n                let maxOriginal = originalLineCount;\n                let maxModified = modifiedLineCount;\n                if (i + 1 < len) {\n                    const nextLineChange = lineChanges[i + 1];\n                    if (nextLineChange.originalEndLineNumber === 0) {\n                        maxOriginal = nextLineChange.originalStartLineNumber;\n                    }\n                    else {\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\n                    }\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\n                        maxModified = nextLineChange.modifiedStartLineNumber;\n                    }\n                    else {\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\n                    }\n                }\n                let toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n                let toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n                if (toOriginal > maxOriginal) {\n                    const delta = maxOriginal - toOriginal;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                if (toModified > maxModified) {\n                    const delta = maxModified - toModified;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                r[rLength++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n            }\n            diffs[diffsLength++] = new Diff(r);\n        }\n        // Merge adjacent diffs\n        let curr = diffs[0].entries;\n        const r = [];\n        let rLength = 0;\n        for (let i = 1, len = diffs.length; i < len; i++) {\n            const thisDiff = diffs[i].entries;\n            const currLast = curr[curr.length - 1];\n            const thisFirst = thisDiff[0];\n            if (currLast.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n                // We are dealing with equal lines that overlap\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n                curr = curr.concat(thisDiff.slice(1));\n                continue;\n            }\n            r[rLength++] = new Diff(curr);\n            curr = thisDiff;\n        }\n        r[rLength++] = new Diff(curr);\n        return r;\n    }\n    _findDiffIndex(pos) {\n        const lineNumber = pos.lineNumber;\n        for (let i = 0, len = this._diffs.length; i < len; i++) {\n            const diff = this._diffs[i].entries;\n            const lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n            if (lineNumber <= lastModifiedLine) {\n                return i;\n            }\n        }\n        return 0;\n    }\n    _render() {\n        const originalOptions = this._diffEditor.getOriginalEditor().getOptions();\n        const modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        const originalModelOpts = originalModel.getOptions();\n        const modifiedModelOpts = modifiedModel.getOptions();\n        if (!this._isVisible || !originalModel || !modifiedModel) {\n            dom.clearNode(this._content.domNode);\n            this._currentDiff = null;\n            this.scrollbar.scanDomNode();\n            return;\n        }\n        this._diffEditor.updateOptions({ readOnly: true });\n        const diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n        if (this._diffs[diffIndex] === this._currentDiff) {\n            return;\n        }\n        this._currentDiff = this._diffs[diffIndex];\n        const diffs = this._diffs[diffIndex].entries;\n        const container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        container.setAttribute('aria-label', 'Difference review. Use \"Stage | Unstage | Revert Selected Ranges\" commands');\n        applyFontInfo(container, modifiedOptions.get(48 /* EditorOption.fontInfo */));\n        let minOriginalLine = 0;\n        let maxOriginalLine = 0;\n        let minModifiedLine = 0;\n        let maxModifiedLine = 0;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            const originalLineStart = diffEntry.originalLineStart;\n            const originalLineEnd = diffEntry.originalLineEnd;\n            const modifiedLineStart = diffEntry.modifiedLineStart;\n            const modifiedLineEnd = diffEntry.modifiedLineEnd;\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\n                minOriginalLine = originalLineStart;\n            }\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\n                maxOriginalLine = originalLineEnd;\n            }\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\n                minModifiedLine = modifiedLineStart;\n            }\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\n                maxModifiedLine = modifiedLineEnd;\n            }\n        }\n        const header = document.createElement('div');\n        header.className = 'diff-review-row';\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell diff-review-summary';\n        const originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n        const modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n        cell.appendChild(document.createTextNode(`${diffIndex + 1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`));\n        header.setAttribute('data-line', String(minModifiedLine));\n        const getAriaLines = (lines) => {\n            if (lines === 0) {\n                return nls.localize('no_lines_changed', \"no lines changed\");\n            }\n            else if (lines === 1) {\n                return nls.localize('one_line_changed', \"1 line changed\");\n            }\n            else {\n                return nls.localize('more_lines_changed', \"{0} lines changed\", lines);\n            }\n        };\n        const originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n        const modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n        header.setAttribute('aria-label', nls.localize({\n            key: 'header',\n            comment: [\n                'This is the ARIA label for a git diff header.',\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                'Variables 2 and 4 will be numbers (a line number).',\n                'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n            ]\n        }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n        header.appendChild(cell);\n        // @@ -504,7 +517,7 @@\n        header.setAttribute('role', 'listitem');\n        container.appendChild(header);\n        const lineHeight = modifiedOptions.get(64 /* EditorOption.lineHeight */);\n        let modLine = minModifiedLine;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            DiffReview._renderSection(container, diffEntry, modLine, lineHeight, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, this._languageService.languageIdCodec);\n            if (diffEntry.modifiedLineStart !== 0) {\n                modLine = diffEntry.modifiedLineEnd;\n            }\n        }\n        dom.clearNode(this._content.domNode);\n        this._content.domNode.appendChild(container);\n        this.scrollbar.scanDomNode();\n    }\n    static _renderSection(dest, diffEntry, modLine, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, languageIdCodec) {\n        const type = diffEntry.getType();\n        let rowClassName = 'diff-review-row';\n        let lineNumbersExtraClassName = '';\n        const spacerClassName = 'diff-review-spacer';\n        let spacerIcon = null;\n        switch (type) {\n            case 1 /* DiffEntryType.Insert */:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerIcon = diffReviewInsertIcon;\n                break;\n            case 2 /* DiffEntryType.Delete */:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerIcon = diffReviewRemoveIcon;\n                break;\n        }\n        const originalLineStart = diffEntry.originalLineStart;\n        const originalLineEnd = diffEntry.originalLineEnd;\n        const modifiedLineStart = diffEntry.modifiedLineStart;\n        const modifiedLineEnd = diffEntry.modifiedLineEnd;\n        const cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n        const originalLayoutInfo = originalOptions.get(140 /* EditorOption.layoutInfo */);\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n        const modifiedLayoutInfo = modifiedOptions.get(140 /* EditorOption.layoutInfo */);\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n        for (let i = 0; i <= cnt; i++) {\n            const originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\n            const modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\n            const row = document.createElement('div');\n            row.style.minWidth = width + 'px';\n            row.className = rowClassName;\n            row.setAttribute('role', 'listitem');\n            if (modifiedLine !== 0) {\n                modLine = modifiedLine;\n            }\n            row.setAttribute('data-line', String(modLine));\n            const cell = document.createElement('div');\n            cell.className = 'diff-review-cell';\n            cell.style.height = `${lineHeight}px`;\n            row.appendChild(cell);\n            const originalLineNumber = document.createElement('span');\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (originalLine !== 0) {\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n            }\n            else {\n                originalLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(originalLineNumber);\n            const modifiedLineNumber = document.createElement('span');\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.paddingRight = '10px';\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (modifiedLine !== 0) {\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n            }\n            else {\n                modifiedLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(modifiedLineNumber);\n            const spacer = document.createElement('span');\n            spacer.className = spacerClassName;\n            if (spacerIcon) {\n                const spacerCodicon = document.createElement('span');\n                spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n                spacerCodicon.innerText = '\\u00a0\\u00a0';\n                spacer.appendChild(spacerCodicon);\n            }\n            else {\n                spacer.innerText = '\\u00a0\\u00a0';\n            }\n            cell.appendChild(spacer);\n            let lineContent;\n            if (modifiedLine !== 0) {\n                let html = this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = modifiedModel.getLineContent(modifiedLine);\n            }\n            else {\n                let html = this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = originalModel.getLineContent(originalLine);\n            }\n            if (lineContent.length === 0) {\n                lineContent = nls.localize('blankLine', \"blank\");\n            }\n            let ariaLabel = '';\n            switch (type) {\n                case 0 /* DiffEntryType.Equal */:\n                    if (originalLine === modifiedLine) {\n                        ariaLabel = nls.localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, originalLine);\n                    }\n                    else {\n                        ariaLabel = nls.localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, originalLine, modifiedLine);\n                    }\n                    break;\n                case 1 /* DiffEntryType.Insert */:\n                    ariaLabel = nls.localize('insertLine', \"+ {0} modified line {1}\", lineContent, modifiedLine);\n                    break;\n                case 2 /* DiffEntryType.Delete */:\n                    ariaLabel = nls.localize('deleteLine', \"- {0} original line {1}\", lineContent, originalLine);\n                    break;\n            }\n            row.setAttribute('aria-label', ariaLabel);\n            dest.appendChild(row);\n        }\n    }\n    static _renderLine(model, options, tabSize, lineNumber, languageIdCodec) {\n        const lineContent = model.getLineContent(lineNumber);\n        const fontInfo = options.get(48 /* EditorOption.fontInfo */);\n        const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        const r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(31 /* EditorOption.disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(113 /* EditorOption.stopRenderingLineAfter */), options.get(95 /* EditorOption.renderWhitespace */), options.get(90 /* EditorOption.renderControlCharacters */), options.get(49 /* EditorOption.fontLigatures */) !== EditorFontLigatures.OFF, null));\n        return r.html;\n    }\n};\nDiffReview._ttPolicy = createTrustedTypesPolicy('diffReview', { createHTML: value => value });\nDiffReview = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IAudioCueService),\n    __param(3, IConfigurationService)\n], DiffReview);\n// theming\nclass DiffReviewNext extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.next',\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n            alias: 'Go to Next Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor === null || diffEditor === void 0 ? void 0 : diffEditor.diffReviewNext();\n    }\n}\nclass DiffReviewPrev extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.prev',\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n            alias: 'Go to Previous Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor === null || diffEditor === void 0 ? void 0 : diffEditor.diffReviewPrev();\n    }\n}\nfunction findFocusedDiffEditor(accessor) {\n    var _a;\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    const activeCodeEditor = (_a = codeEditorService.getFocusedCodeEditor()) !== null && _a !== void 0 ? _a : codeEditorService.getActiveCodeEditor();\n    if (!activeCodeEditor) {\n        return null;\n    }\n    for (let i = 0, len = diffEditors.length; i < len; i++) {\n        const diffEditor = diffEditors[i];\n        if (diffEditor.getModifiedEditor().getId() === activeCodeEditor.getId() || diffEditor.getOriginalEditor().getId() === activeCodeEditor.getId()) {\n            return diffEditor;\n        }\n    }\n    return null;\n}\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isIOS } from '../../../base/common/platform.js';\nexport class InlineDiffMargin extends Disposable {\n    get visibility() {\n        return this._visibility;\n    }\n    set visibility(_visibility) {\n        if (this._visibility !== _visibility) {\n            this._visibility = _visibility;\n            if (_visibility) {\n                this._diffActions.style.visibility = 'visible';\n            }\n            else {\n                this._diffActions.style.visibility = 'hidden';\n            }\n        }\n    }\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n        super();\n        this._viewZoneId = _viewZoneId;\n        this._marginDomNode = _marginDomNode;\n        this.editor = editor;\n        this.diff = diff;\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._visibility = false;\n        // make sure the diff margin shows above overlay.\n        this._marginDomNode.style.zIndex = '10';\n        this._diffActions = document.createElement('div');\n        this._diffActions.className = ThemeIcon.asClassName(Codicon.lightBulb) + ' lightbulb-glyph';\n        this._diffActions.style.position = 'absolute';\n        const lineHeight = editor.getOption(64 /* EditorOption.lineHeight */);\n        const lineFeed = editor.getModel().getEOL();\n        this._diffActions.style.right = '0px';\n        this._diffActions.style.visibility = 'hidden';\n        this._diffActions.style.height = `${lineHeight}px`;\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\n        this._marginDomNode.appendChild(this._diffActions);\n        const actions = [];\n        const isDeletion = diff.modifiedEndLineNumber === 0;\n        // default action\n        actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion\n            ? (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\n                : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"))\n            : (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\")\n                : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\")), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n            const deletedText = diff.originalModel.getValueInRange(range);\n            yield this._clipboardService.writeText(deletedText);\n        })));\n        let currentLineNumberOffset = 0;\n        let copyLineAction = undefined;\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion\n                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber)\n                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n                if (lineContent === '') {\n                    // empty line\n                    const eof = diff.originalModel.getEndOfLineSequence();\n                    yield this._clipboardService.writeText(eof === 0 /* EndOfLineSequence.LF */ ? '\\n' : '\\r\\n');\n                }\n                else {\n                    yield this._clipboardService.writeText(lineContent);\n                }\n            }));\n            actions.push(copyLineAction);\n        }\n        const readOnly = editor.getOption(88 /* EditorOption.readOnly */);\n        if (!readOnly) {\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n                const deletedText = diff.originalModel.getValueInRange(range);\n                if (diff.modifiedEndLineNumber === 0) {\n                    // deletion only\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n                            text: lineFeed + deletedText\n                        }\n                    ]);\n                }\n                else {\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n                            text: deletedText\n                        }\n                    ]);\n                }\n            })));\n        }\n        const useShadowDOM = editor.getOption(123 /* EditorOption.useShadowDOM */) && !isIOS; // Do not use shadow dom on IOS #122035\n        const showContextMenu = (x, y) => {\n            var _a;\n            this._contextMenuService.showContextMenu({\n                domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n                getAnchor: () => {\n                    return {\n                        x,\n                        y\n                    };\n                },\n                getActions: () => {\n                    if (copyLineAction) {\n                        copyLineAction.label =\n                            isDeletion\n                                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset)\n                                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n                    }\n                    return actions;\n                },\n                autoSelectFirstItem: true\n            });\n        };\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\n            const pad = Math.floor(lineHeight / 3);\n            e.preventDefault();\n            showContextMenu(e.posx, top + height + pad);\n        }));\n        this._register(editor.onMouseMove((e) => {\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    this.visibility = true;\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                }\n                else {\n                    this.visibility = false;\n                }\n            }\n            else {\n                this.visibility = false;\n            }\n        }));\n        this._register(editor.onMouseDown((e) => {\n            if (!e.event.rightButton) {\n                return;\n            }\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    e.event.preventDefault();\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\n                }\n            }\n        }));\n    }\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\n        const offset = y - top;\n        const lineNumberOffset = Math.floor(offset / lineHeight);\n        const newTop = lineNumberOffset * lineHeight;\n        this._diffActions.style.top = `${newTop}px`;\n        if (this.diff.viewLineCounts) {\n            let acc = 0;\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n                acc += this.diff.viewLineCounts[i];\n                if (lineNumberOffset < acc) {\n                    return i;\n                }\n            }\n        }\n        return lineNumberOffset;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { LineRange } from '../../common/core/lineRange.js';\nimport { LineRangeMapping, RangeMapping } from '../../common/diff/linesDiffComputer.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nexport let WorkerBasedDocumentDiffProvider = class WorkerBasedDocumentDiffProvider {\n    constructor(options, editorWorkerService, telemetryService) {\n        this.editorWorkerService = editorWorkerService;\n        this.telemetryService = telemetryService;\n        this.onDidChangeEventEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEventEmitter.event;\n        this.diffAlgorithm = 'advanced';\n        this.diffAlgorithmOnDidChangeSubscription = undefined;\n        this.setOptions(options);\n    }\n    dispose() {\n        var _a;\n        (_a = this.diffAlgorithmOnDidChangeSubscription) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    computeDiff(original, modified, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.diffAlgorithm !== 'string') {\n                return this.diffAlgorithm.computeDiff(original, modified, options);\n            }\n            // This significantly speeds up the case when the original file is empty\n            if (original.getLineCount() === 1 && original.getLineMaxColumn(1) === 1) {\n                return {\n                    changes: [\n                        new LineRangeMapping(new LineRange(1, 1), new LineRange(1, modified.getLineCount()), [\n                            new RangeMapping(original.getFullModelRange(), modified.getFullModelRange())\n                        ])\n                    ],\n                    identical: false,\n                    quitEarly: false,\n                };\n            }\n            const sw = StopWatch.create(true);\n            const result = yield this.editorWorkerService.computeDiff(original.uri, modified.uri, options, this.diffAlgorithm);\n            const timeMs = sw.elapsed();\n            this.telemetryService.publicLog2('diffEditor.computeDiff', {\n                timeMs,\n                timedOut: (_a = result === null || result === void 0 ? void 0 : result.quitEarly) !== null && _a !== void 0 ? _a : true,\n            });\n            if (!result) {\n                throw new Error('no diff result available');\n            }\n            return result;\n        });\n    }\n    setOptions(newOptions) {\n        var _a;\n        let didChange = false;\n        if (newOptions.diffAlgorithm) {\n            if (this.diffAlgorithm !== newOptions.diffAlgorithm) {\n                (_a = this.diffAlgorithmOnDidChangeSubscription) === null || _a === void 0 ? void 0 : _a.dispose();\n                this.diffAlgorithmOnDidChangeSubscription = undefined;\n                this.diffAlgorithm = newOptions.diffAlgorithm;\n                if (typeof newOptions.diffAlgorithm !== 'string') {\n                    this.diffAlgorithmOnDidChangeSubscription = newOptions.diffAlgorithm.onDidChange(() => this.onDidChangeEventEmitter.fire());\n                }\n                didChange = true;\n            }\n        }\n        if (didChange) {\n            this.onDidChangeEventEmitter.fire();\n        }\n    }\n};\nWorkerBasedDocumentDiffProvider = __decorate([\n    __param(1, IEditorWorkerService),\n    __param(2, ITelemetryService)\n], WorkerBasedDocumentDiffProvider);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport * as assert from '../../../base/common/assert.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './media/diffEditor.css';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../stableEditorScroll.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { DiffNavigator } from './diffNavigator.js';\nimport { DiffReview } from './diffReview.js';\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\nimport { WorkerBasedDocumentDiffProvider } from './workerBasedDocumentDiffProvider.js';\nimport { clampedFloat, clampedInt, EditorFontLigatures, EditorOptions, boolean as validateBooleanOption, stringSet as validateStringSetOption } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel.js';\nimport { OverviewRulerZone } from '../../common/viewModel/overviewZoneManager.js';\nimport * as nls from '../../../nls.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { defaultInsertColor, defaultRemoveColor, diffDiagonalFill, diffInserted, diffOverviewRulerInserted, diffOverviewRulerRemoved, diffRemoved } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { getThemeTypeSelector, IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nclass VisualEditorState {\n    constructor(_contextMenuService, _clipboardService) {\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._zones = [];\n        this._inlineDiffMargins = [];\n        this._zonesMap = {};\n        this._decorations = [];\n    }\n    getForeignViewZones(allViewZones) {\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\n    }\n    clean(editor) {\n        // (1) View zones\n        if (this._zones.length > 0) {\n            editor.changeViewZones((viewChangeAccessor) => {\n                for (const zoneId of this._zones) {\n                    viewChangeAccessor.removeZone(zoneId);\n                }\n            });\n        }\n        this._zones = [];\n        this._zonesMap = {};\n        // (2) Model decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, []);\n        });\n    }\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\n        // view zones\n        editor.changeViewZones((viewChangeAccessor) => {\n            var _a;\n            for (const zoneId of this._zones) {\n                viewChangeAccessor.removeZone(zoneId);\n            }\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\n                inlineDiffMargin.dispose();\n            }\n            this._zones = [];\n            this._zonesMap = {};\n            this._inlineDiffMargins = [];\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\n                const viewZone = newDecorations.zones[i];\n                viewZone.suppressMouseDown = true;\n                const zoneId = viewChangeAccessor.addZone(viewZone);\n                this._zones.push(zoneId);\n                this._zonesMap[String(zoneId)] = true;\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\n                    viewZone.suppressMouseDown = false;\n                    if (((_a = newDecorations.zones[i].diff) === null || _a === void 0 ? void 0 : _a.originalModel.getValueLength()) !== 0) {\n                        // do not contribute diff margin actions for newly created files\n                        this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\n                    }\n                }\n            }\n        });\n        scrollState === null || scrollState === void 0 ? void 0 : scrollState.restore(editor);\n        // decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, newDecorations.decorations);\n        });\n        // overview ruler\n        overviewRuler === null || overviewRuler === void 0 ? void 0 : overviewRuler.setZones(newDecorations.overviewZones);\n    }\n}\nlet DIFF_EDITOR_ID = 0;\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nconst ttPolicy = createTrustedTypesPolicy('diffEditorWidget', { createHTML: value => value });\nconst ariaNavigationTip = nls.localize('diff-aria-navigation-tip', ' use Shift + F7 to navigate changes');\nexport let DiffEditorWidget = class DiffEditorWidget extends Disposable {\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\n        super();\n        this._editorProgressService = _editorProgressService;\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModel = this._register(new Emitter());\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidUpdateDiff = this._register(new Emitter());\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this._lastOriginalWarning = null;\n        this._lastModifiedWarning = null;\n        codeEditorService.willCreateDiffEditor();\n        this._documentDiffProvider = this._register(instantiationService.createInstance(WorkerBasedDocumentDiffProvider, options));\n        this._register(this._documentDiffProvider.onDidChange(e => this._beginUpdateDecorationsSoon()));\n        this._codeEditorService = codeEditorService;\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._themeService = themeService;\n        this._notificationService = notificationService;\n        this._id = (++DIFF_EDITOR_ID);\n        this._state = 0 /* editorBrowser.DiffEditorState.Idle */;\n        this._updatingDiffProgress = null;\n        this._domElement = domElement;\n        options = options || {};\n        this._options = validateDiffEditorOptions(options, {\n            enableSplitViewResizing: true,\n            splitViewDefaultRatio: 0.5,\n            renderSideBySide: true,\n            renderMarginRevertIcon: true,\n            maxComputationTime: 5000,\n            maxFileSize: 50,\n            ignoreTrimWhitespace: true,\n            renderIndicators: true,\n            originalEditable: false,\n            diffCodeLens: false,\n            renderOverviewRuler: true,\n            diffWordWrap: 'inherit',\n            diffAlgorithm: 'advanced',\n            accessibilityVerbose: false,\n            experimental: {\n                collapseUnchangedRegions: false,\n            },\n        });\n        this.isEmbeddedDiffEditorKey = EditorContextKeys.isEmbeddedDiffEditor.bindTo(this._contextKeyService);\n        this.isEmbeddedDiffEditorKey.set(typeof options.isInEmbeddedEditor !== 'undefined' ? options.isInEmbeddedEditor : false);\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\n        this._containerDomElement = document.createElement('div');\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        this._containerDomElement.style.position = 'relative';\n        this._containerDomElement.style.height = '100%';\n        this._domElement.appendChild(this._containerDomElement);\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n        this._overviewViewportDomElement.setClassName('diffViewport');\n        this._overviewViewportDomElement.setPosition('absolute');\n        this._overviewDomElement = document.createElement('div');\n        this._overviewDomElement.className = 'diffOverview';\n        this._overviewDomElement.style.position = 'absolute';\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, dom.EventType.POINTER_DOWN, (e) => {\n            this._modifiedEditor.delegateVerticalScrollbarPointerDown(e);\n        }));\n        this._register(dom.addDisposableListener(this._overviewDomElement, dom.EventType.MOUSE_WHEEL, (e) => {\n            this._modifiedEditor.delegateScrollFromMouseWheelEvent(e);\n        }, { passive: false }));\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.appendChild(this._overviewDomElement);\n        }\n        // Create left side\n        this._originalDomNode = document.createElement('div');\n        this._originalDomNode.className = 'editor original';\n        this._originalDomNode.style.position = 'absolute';\n        this._originalDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._originalDomNode);\n        // Create right side\n        this._modifiedDomNode = document.createElement('div');\n        this._modifiedDomNode.className = 'editor modified';\n        this._modifiedDomNode.style.position = 'absolute';\n        this._modifiedDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._modifiedDomNode);\n        this._beginUpdateDecorationsTimeout = -1;\n        this._currentlyChangingViewZones = false;\n        this._diffComputationToken = 0;\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._isVisible = true;\n        this._isHandlingScrollEvent = false;\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension));\n        this._register(this._elementSizeObserver.onDidChange(() => this._onDidContainerSizeChanged()));\n        if (options.automaticLayout) {\n            this._elementSizeObserver.startObserving();\n        }\n        this._diffComputationResult = null;\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {});\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {});\n        this._originalOverviewRuler = null;\n        this._modifiedOverviewRuler = null;\n        this._reviewPane = instantiationService.createInstance(DiffReview, this);\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\n        if (this._options.renderSideBySide) {\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing, this._options.splitViewDefaultRatio));\n        }\n        else {\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        this._register(themeService.onDidColorThemeChange(t => {\n            if (this._strategy && this._strategy.applyColors(t)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }));\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        this._codeEditorService.addDiffEditor(this);\n    }\n    _setState(newState) {\n        if (this._state === newState) {\n            return;\n        }\n        this._state = newState;\n        if (this._updatingDiffProgress) {\n            this._updatingDiffProgress.done();\n            this._updatingDiffProgress = null;\n        }\n        if (this._state === 1 /* editorBrowser.DiffEditorState.ComputingDiff */) {\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\n        }\n    }\n    diffReviewNext() {\n        this._reviewPane.next();\n    }\n    diffReviewPrev() {\n        this._reviewPane.prev();\n    }\n    static _getClassName(theme, renderSideBySide) {\n        let result = 'monaco-diff-editor monaco-editor-background ';\n        if (renderSideBySide) {\n            result += 'side-by-side ';\n        }\n        result += getThemeTypeSelector(theme.type);\n        return result;\n    }\n    _disposeOverviewRulers() {\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n            this._originalOverviewRuler = null;\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n            this._modifiedOverviewRuler = null;\n        }\n    }\n    _createOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        assert.ok(!this._originalOverviewRuler && !this._modifiedOverviewRuler);\n        if (this._originalEditor.hasModel()) {\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n        }\n        if (this._modifiedEditor.hasModel()) {\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n        }\n        this._layoutOverviewRulers();\n    }\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._modifiedEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(48 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(141 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        const isInDiffLeftEditorKey = this._contextKeyService.createKey('isInDiffLeftEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _createRightHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._originalEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(48 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(141 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        this._register(editor.onDidChangeModelOptions((e) => {\n            if (e.tabSize) {\n                this._updateDecorationsRunner.schedule();\n            }\n        }));\n        const isInDiffRightEditorKey = this._contextKeyService.createKey('isInDiffRightEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        // Revert change when an arrow is clicked.\n        this._register(editor.onMouseDown(event => {\n            var _a, _b;\n            if (!event.event.rightButton && event.target.position && ((_a = event.target.element) === null || _a === void 0 ? void 0 : _a.className.includes('arrow-revert-change'))) {\n                const lineNumber = event.target.position.lineNumber;\n                const viewZone = event.target;\n                const change = (_b = this._diffComputationResult) === null || _b === void 0 ? void 0 : _b.changes.find(c => \n                // delete change\n                (viewZone === null || viewZone === void 0 ? void 0 : viewZone.detail.afterLineNumber) === c.modifiedStartLineNumber ||\n                    // other changes\n                    (c.modifiedEndLineNumber > 0 && c.modifiedStartLineNumber === lineNumber));\n                if (change) {\n                    this.revertChange(change);\n                }\n                event.event.stopPropagation();\n                this._updateDecorations();\n                return;\n            }\n        }));\n        return editor;\n    }\n    /**\n     * Reverts a change in the modified editor.\n     */\n    revertChange(change) {\n        const editor = this._modifiedEditor;\n        const original = this._originalEditor.getModel();\n        const modified = this._modifiedEditor.getModel();\n        if (!original || !modified || !editor) {\n            return;\n        }\n        const originalRange = change.originalEndLineNumber > 0 ? new Range(change.originalStartLineNumber, 1, change.originalEndLineNumber, original.getLineMaxColumn(change.originalEndLineNumber)) : null;\n        const originalContent = originalRange ? original.getValueInRange(originalRange) : null;\n        const newRange = change.modifiedEndLineNumber > 0 ? new Range(change.modifiedStartLineNumber, 1, change.modifiedEndLineNumber, modified.getLineMaxColumn(change.modifiedEndLineNumber)) : null;\n        const eol = modified.getEOL();\n        if (change.originalEndLineNumber === 0 && newRange) {\n            // Insert change.\n            // To revert: delete the new content and a linebreak (if possible)\n            let range = newRange;\n            if (change.modifiedStartLineNumber > 1) {\n                // Try to include a linebreak from before.\n                range = newRange.setStartPosition(change.modifiedStartLineNumber - 1, modified.getLineMaxColumn(change.modifiedStartLineNumber - 1));\n            }\n            else if (change.modifiedEndLineNumber < modified.getLineCount()) {\n                // Try to include the linebreak from after.\n                range = newRange.setEndPosition(change.modifiedEndLineNumber + 1, 1);\n            }\n            editor.executeEdits('diffEditor', [{\n                    range,\n                    text: '',\n                }]);\n        }\n        else if (change.modifiedEndLineNumber === 0 && originalContent !== null) {\n            // Delete change.\n            // To revert: insert the old content and a linebreak.\n            const insertAt = change.modifiedStartLineNumber < modified.getLineCount() ? new Position(change.modifiedStartLineNumber + 1, 1) : new Position(change.modifiedStartLineNumber, modified.getLineMaxColumn(change.modifiedStartLineNumber));\n            editor.executeEdits('diffEditor', [{\n                    range: Range.fromPositions(insertAt, insertAt),\n                    text: change.modifiedStartLineNumber < modified.getLineCount() ? originalContent + eol : eol + originalContent,\n                }]);\n        }\n        else if (newRange && originalContent !== null) {\n            // Modified change.\n            editor.executeEdits('diffEditor', [{\n                    range: newRange,\n                    text: originalContent,\n                }]);\n        }\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    }\n    dispose() {\n        this._codeEditorService.removeDiffEditor(this);\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._cleanViewZonesAndDecorations();\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.removeChild(this._overviewDomElement);\n        }\n        this._containerDomElement.removeChild(this._originalDomNode);\n        this._originalEditor.dispose();\n        this._containerDomElement.removeChild(this._modifiedDomNode);\n        this._modifiedEditor.dispose();\n        this._strategy.dispose();\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n        this._reviewPane.dispose();\n        this._domElement.removeChild(this._containerDomElement);\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    //------------ begin IDiffEditor methods\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.IDiffEditor;\n    }\n    getLineChanges() {\n        if (!this._diffComputationResult) {\n            return null;\n        }\n        return this._diffComputationResult.changes;\n    }\n    getOriginalEditor() {\n        return this._originalEditor;\n    }\n    getModifiedEditor() {\n        return this._modifiedEditor;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = validateDiffEditorOptions(_newOptions, this._options);\n        const changed = changedDiffEditorOptions(this._options, newOptions);\n        this._options = newOptions;\n        this.isEmbeddedDiffEditorKey.set(typeof _newOptions.isInEmbeddedEditor !== 'undefined' ? _newOptions.isInEmbeddedEditor : false);\n        const beginUpdateDecorations = (changed.ignoreTrimWhitespace || changed.renderIndicators || changed.renderMarginRevertIcon);\n        const beginUpdateDecorationsSoon = (this._isVisible && (changed.maxComputationTime || changed.maxFileSize));\n        this._documentDiffProvider.setOptions(newOptions);\n        if (beginUpdateDecorations) {\n            this._beginUpdateDecorations();\n        }\n        else if (beginUpdateDecorationsSoon) {\n            this._beginUpdateDecorationsSoon();\n        }\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(_newOptions));\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(_newOptions));\n        // enableSplitViewResizing\n        this._strategy.setEnableSplitViewResizing(this._options.enableSplitViewResizing, this._options.splitViewDefaultRatio);\n        // renderSideBySide\n        if (changed.renderSideBySide) {\n            if (this._options.renderSideBySide) {\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing, this._options.splitViewDefaultRatio));\n            }\n            else {\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            // Update class name\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }\n        // renderOverviewRuler\n        if (changed.renderOverviewRuler) {\n            if (this._options.renderOverviewRuler) {\n                this._containerDomElement.appendChild(this._overviewDomElement);\n            }\n            else {\n                this._containerDomElement.removeChild(this._overviewDomElement);\n            }\n        }\n    }\n    getModel() {\n        return {\n            original: this._originalEditor.getModel(),\n            modified: this._modifiedEditor.getModel()\n        };\n    }\n    setModel(model) {\n        // Guard us against partial null model\n        if (model && (!model.original || !model.modified)) {\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n        }\n        // Remove all view zones & decorations\n        this._cleanViewZonesAndDecorations();\n        this._disposeOverviewRulers();\n        // Update code editor models\n        this._originalEditor.setModel(model ? model.original : null);\n        this._modifiedEditor.setModel(model ? model.modified : null);\n        this._updateDecorationsRunner.cancel();\n        // this.originalEditor.onDidChangeModelOptions\n        if (model) {\n            this._originalEditor.setScrollTop(0);\n            this._modifiedEditor.setScrollTop(0);\n        }\n        // Disable any diff computations that will come in\n        this._diffComputationResult = null;\n        this._diffComputationToken++;\n        this._setState(0 /* editorBrowser.DiffEditorState.Idle */);\n        if (model) {\n            this._createOverviewRulers();\n            // Begin comparing\n            this._beginUpdateDecorations();\n        }\n        this._layoutOverviewViewport();\n        this._onDidChangeModel.fire();\n        // Diff navigator\n        this._diffNavigator = this._register(this._instantiationService.createInstance(DiffNavigator, this, {\n            alwaysRevealFirst: false,\n            findResultLoop: this.getModifiedEditor().getOption(39 /* EditorOption.find */).loop\n        }));\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    // #region editorBrowser.IDiffEditor: Delegating to modified Editor\n    getVisibleColumnFromPosition(position) {\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\n    }\n    getPosition() {\n        return this._modifiedEditor.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        this._modifiedEditor.setPosition(position, source);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPosition(position, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\n    }\n    getSelection() {\n        return this._modifiedEditor.getSelection();\n    }\n    getSelections() {\n        return this._modifiedEditor.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        this._modifiedEditor.setSelection(something, source);\n    }\n    setSelections(ranges, source = 'api') {\n        this._modifiedEditor.setSelections(ranges, source);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\n    }\n    getSupportedActions() {\n        return this._modifiedEditor.getSupportedActions();\n    }\n    focus() {\n        this._modifiedEditor.focus();\n    }\n    trigger(source, handlerId, payload) {\n        this._modifiedEditor.trigger(source, handlerId, payload);\n    }\n    createDecorationsCollection(decorations) {\n        return this._modifiedEditor.createDecorationsCollection(decorations);\n    }\n    changeDecorations(callback) {\n        return this._modifiedEditor.changeDecorations(callback);\n    }\n    // #endregion\n    saveViewState() {\n        const originalViewState = this._originalEditor.saveViewState();\n        const modifiedViewState = this._modifiedEditor.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._originalEditor.restoreViewState(diffEditorState.original);\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\n        }\n    }\n    layout(dimension) {\n        this._elementSizeObserver.observe(dimension);\n    }\n    hasTextFocus() {\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\n    }\n    //------------ end IDiffEditor methods\n    //------------ begin layouting methods\n    _onDidContainerSizeChanged() {\n        this._doLayout();\n    }\n    _getReviewHeight() {\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\n    }\n    _layoutOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\n            return;\n        }\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (layoutInfo) {\n            this._originalOverviewRuler.setLayout({\n                top: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n            this._modifiedOverviewRuler.setLayout({\n                top: 0,\n                right: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n        }\n    }\n    //------------ end layouting methods\n    _onViewZonesChanged() {\n        if (this._currentlyChangingViewZones) {\n            return;\n        }\n        this._updateDecorationsRunner.schedule();\n    }\n    _beginUpdateDecorationsSoon() {\n        // Clear previous timeout if necessary\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n    }\n    static _equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return (a.toString() === b.toString());\n    }\n    _beginUpdateDecorations() {\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            // Cancel any pending requests in case this method is called directly\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        const currentOriginalModel = this._originalEditor.getModel();\n        const currentModifiedModel = this._modifiedEditor.getModel();\n        if (!currentOriginalModel || !currentModifiedModel) {\n            return;\n        }\n        // Prevent old diff requests to come if a new request has been initiated\n        // The best method would be to call cancel on the Promise, but this is not\n        // yet supported, so using tokens for now.\n        this._diffComputationToken++;\n        const currentToken = this._diffComputationToken;\n        const diffLimit = this._options.maxFileSize * 1024 * 1024; // MB\n        const canSyncModelForDiff = (model) => {\n            const bufferTextLength = model.getValueLength();\n            return (diffLimit === 0 || bufferTextLength <= diffLimit);\n        };\n        if (!canSyncModelForDiff(currentOriginalModel) || !canSyncModelForDiff(currentModifiedModel)) {\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n                this._lastOriginalWarning = currentOriginalModel.uri;\n                this._lastModifiedWarning = currentModifiedModel.uri;\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n            }\n            return;\n        }\n        this._setState(1 /* editorBrowser.DiffEditorState.ComputingDiff */);\n        this._documentDiffProvider.computeDiff(currentOriginalModel, currentModifiedModel, {\n            ignoreTrimWhitespace: this._options.ignoreTrimWhitespace,\n            maxComputationTimeMs: this._options.maxComputationTime,\n        }).then(result => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = {\n                    identical: result.identical,\n                    quitEarly: result.quitEarly,\n                    changes2: result.changes,\n                    changes: result.changes.map(m => {\n                        // TODO don't do this translation, but use the diff result directly\n                        let originalStartLineNumber;\n                        let originalEndLineNumber;\n                        let modifiedStartLineNumber;\n                        let modifiedEndLineNumber;\n                        let innerChanges = m.innerChanges;\n                        if (m.originalRange.isEmpty) {\n                            // Insertion\n                            originalStartLineNumber = m.originalRange.startLineNumber - 1;\n                            originalEndLineNumber = 0;\n                            innerChanges = undefined;\n                        }\n                        else {\n                            originalStartLineNumber = m.originalRange.startLineNumber;\n                            originalEndLineNumber = m.originalRange.endLineNumberExclusive - 1;\n                        }\n                        if (m.modifiedRange.isEmpty) {\n                            // Deletion\n                            modifiedStartLineNumber = m.modifiedRange.startLineNumber - 1;\n                            modifiedEndLineNumber = 0;\n                            innerChanges = undefined;\n                        }\n                        else {\n                            modifiedStartLineNumber = m.modifiedRange.startLineNumber;\n                            modifiedEndLineNumber = m.modifiedRange.endLineNumberExclusive - 1;\n                        }\n                        return {\n                            originalStartLineNumber,\n                            originalEndLineNumber,\n                            modifiedStartLineNumber,\n                            modifiedEndLineNumber,\n                            charChanges: innerChanges === null || innerChanges === void 0 ? void 0 : innerChanges.map(m => ({\n                                originalStartLineNumber: m.originalRange.startLineNumber,\n                                originalStartColumn: m.originalRange.startColumn,\n                                originalEndLineNumber: m.originalRange.endLineNumber,\n                                originalEndColumn: m.originalRange.endColumn,\n                                modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n                                modifiedStartColumn: m.modifiedRange.startColumn,\n                                modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n                                modifiedEndColumn: m.modifiedRange.endColumn,\n                            }))\n                        };\n                    })\n                };\n                this._updateDecorationsRunner.schedule();\n                this._onDidUpdateDiff.fire();\n            }\n        }, (error) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = null;\n                this._updateDecorationsRunner.schedule();\n            }\n        });\n    }\n    _cleanViewZonesAndDecorations() {\n        this._originalEditorState.clean(this._originalEditor);\n        this._modifiedEditorState.clean(this._modifiedEditor);\n    }\n    _updateDecorations() {\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\n            return;\n        }\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\n        const renderMarginRevertIcon = this._options.renderMarginRevertIcon && !this._modifiedEditor.getOption(88 /* EditorOption.readOnly */);\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._options.ignoreTrimWhitespace, this._options.renderIndicators, renderMarginRevertIcon, foreignOriginal, foreignModified);\n        try {\n            this._currentlyChangingViewZones = true;\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n        }\n        finally {\n            this._currentlyChangingViewZones = false;\n        }\n    }\n    _adjustOptionsForSubEditor(options) {\n        const clonedOptions = Object.assign({}, options);\n        clonedOptions.inDiffEditor = true;\n        clonedOptions.automaticLayout = false;\n        // Clone scrollbar options before changing them\n        clonedOptions.scrollbar = Object.assign({}, (clonedOptions.scrollbar || {}));\n        clonedOptions.scrollbar.vertical = 'visible';\n        clonedOptions.folding = false;\n        clonedOptions.codeLens = this._options.diffCodeLens;\n        clonedOptions.fixedOverflowWidgets = true;\n        // clonedOptions.lineDecorationsWidth = '2ch';\n        // Clone minimap options before changing them\n        clonedOptions.minimap = Object.assign({}, (clonedOptions.minimap || {}));\n        clonedOptions.minimap.enabled = false;\n        return clonedOptions;\n    }\n    _adjustOptionsForLeftHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (!this._options.renderSideBySide) {\n            // never wrap hidden editor\n            result.wordWrapOverride1 = 'off';\n            result.wordWrapOverride2 = 'off';\n        }\n        else {\n            result.wordWrapOverride1 = this._options.diffWordWrap;\n        }\n        if (options.originalAriaLabel) {\n            result.ariaLabel = options.originalAriaLabel;\n        }\n        this._updateAriaLabel(result);\n        result.readOnly = !this._options.originalEditable;\n        result.dropIntoEditor = { enabled: !result.readOnly };\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    _updateAriaLabel(options) {\n        var _a;\n        let ariaLabel = (_a = options.ariaLabel) !== null && _a !== void 0 ? _a : '';\n        if (this._options.accessibilityVerbose) {\n            ariaLabel += ariaNavigationTip;\n        }\n        else if (ariaLabel) {\n            ariaLabel = ariaLabel.replaceAll(ariaNavigationTip, '');\n        }\n        options.ariaLabel = ariaLabel;\n    }\n    _adjustOptionsForRightHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (options.modifiedAriaLabel) {\n            result.ariaLabel = options.modifiedAriaLabel;\n        }\n        this._updateAriaLabel(result);\n        result.wordWrapOverride1 = this._options.diffWordWrap;\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        result.scrollbar.verticalHasArrows = false;\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    doLayout() {\n        this._elementSizeObserver.observe();\n        this._doLayout();\n    }\n    _doLayout() {\n        const width = this._elementSizeObserver.getWidth();\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const splitPoint = this._strategy.layout();\n        this._originalDomNode.style.width = splitPoint + 'px';\n        this._originalDomNode.style.left = '0px';\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\n        this._modifiedDomNode.style.left = splitPoint + 'px';\n        this._overviewDomElement.style.top = '0px';\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n        this._overviewViewportDomElement.setHeight(30);\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._options.renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n            this._layoutOverviewRulers();\n        }\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\n        this._layoutOverviewViewport();\n    }\n    _layoutOverviewViewport() {\n        const layout = this._computeOverviewViewport();\n        if (!layout) {\n            this._overviewViewportDomElement.setTop(0);\n            this._overviewViewportDomElement.setHeight(0);\n        }\n        else {\n            this._overviewViewportDomElement.setTop(layout.top);\n            this._overviewViewportDomElement.setHeight(layout.height);\n        }\n    }\n    _computeOverviewViewport() {\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (!layoutInfo) {\n            return null;\n        }\n        const scrollTop = this._modifiedEditor.getScrollTop();\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\n        return {\n            height: computedSliderSize,\n            top: computedSliderPosition\n        };\n    }\n    _createDataSource() {\n        return {\n            getWidth: () => {\n                return this._elementSizeObserver.getWidth();\n            },\n            getHeight: () => {\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\n            },\n            getOptions: () => {\n                return {\n                    renderOverviewRuler: this._options.renderOverviewRuler\n                };\n            },\n            getContainerDomNode: () => {\n                return this._containerDomElement;\n            },\n            relayoutEditors: () => {\n                this._doLayout();\n            },\n            getOriginalEditor: () => {\n                return this._originalEditor;\n            },\n            getModifiedEditor: () => {\n                return this._modifiedEditor;\n            }\n        };\n    }\n    _setStrategy(newStrategy) {\n        var _a;\n        (_a = this._strategy) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._strategy = newStrategy;\n        if (this._boundarySashes) {\n            newStrategy.setBoundarySashes(this._boundarySashes);\n        }\n        newStrategy.applyColors(this._themeService.getColorTheme());\n        if (this._diffComputationResult) {\n            this._updateDecorations();\n        }\n        // Just do a layout, the strategy might need it\n        this._doLayout();\n    }\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n            // There are no changes or `lineNumber` is before the first change\n            return null;\n        }\n        let min = 0;\n        let max = lineChanges.length - 1;\n        while (min < max) {\n            const mid = Math.floor((min + max) / 2);\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n            if (lineNumber < midStart) {\n                max = mid - 1;\n            }\n            else if (lineNumber >= midEnd) {\n                min = mid + 1;\n            }\n            else {\n                // HIT!\n                min = mid;\n                max = mid;\n            }\n        }\n        return lineChanges[min];\n    }\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - originalEquivalentLineNumber;\n        if (delta <= lineChangeOriginalLength) {\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n        }\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n    }\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - modifiedEquivalentLineNumber;\n        if (delta <= lineChangeModifiedLength) {\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n        }\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n    }\n    getDiffLineInformationForOriginal(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n        };\n    }\n    getDiffLineInformationForModified(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n        };\n    }\n};\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\nDiffEditorWidget = __decorate([\n    __param(3, IClipboardService),\n    __param(4, IContextKeyService),\n    __param(5, IInstantiationService),\n    __param(6, ICodeEditorService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IContextMenuService),\n    __param(10, IEditorProgressService)\n], DiffEditorWidget);\nclass DiffEditorWidgetStyle extends Disposable {\n    constructor(dataSource) {\n        super();\n        this._dataSource = dataSource;\n        this._insertColor = null;\n        this._removeColor = null;\n    }\n    applyColors(theme) {\n        const newInsertColor = theme.getColor(diffOverviewRulerInserted) || (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n        const newRemoveColor = theme.getColor(diffOverviewRulerRemoved) || (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n        this._insertColor = newInsertColor;\n        this._removeColor = newRemoveColor;\n        return hasChanges;\n    }\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon, originalWhitespaces, modifiedWhitespaces) {\n        // Get view zones\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\n        // Get decorations & overview ruler zones\n        const originalDecorations = this._getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators);\n        const modifiedDecorations = this._getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon);\n        return {\n            original: {\n                decorations: originalDecorations.decorations,\n                overviewZones: originalDecorations.overviewZones,\n                zones: zones.original\n            },\n            modified: {\n                decorations: modifiedDecorations.decorations,\n                overviewZones: modifiedDecorations.overviewZones,\n                zones: zones.modified\n            }\n        };\n    }\n    setBoundarySashes(_sashes) {\n        // To be implemented by subclasses\n    }\n}\nclass ForeignViewZonesIterator {\n    constructor(source) {\n        this._source = source;\n        this._index = -1;\n        this.current = null;\n        this.advance();\n    }\n    advance() {\n        this._index++;\n        if (this._index < this._source.length) {\n            this.current = this._source[this._index];\n        }\n        else {\n            this.current = null;\n        }\n    }\n}\nclass ViewZonesComputer {\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\n        this._lineChanges = _lineChanges;\n        this._originalForeignVZ = _originalForeignVZ;\n        this._modifiedForeignVZ = _modifiedForeignVZ;\n        this._originalEditor = _originalEditor;\n        this._modifiedEditor = _modifiedEditor;\n    }\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\n        const model = editor.getModel();\n        const viewModel = editor._getViewModel();\n        if (model && viewModel) {\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\n        }\n        return (endLineNumber - startLineNumber + 1);\n    }\n    getViewZones() {\n        const originalLineHeight = this._originalEditor.getOption(64 /* EditorOption.lineHeight */);\n        const modifiedLineHeight = this._modifiedEditor.getOption(64 /* EditorOption.lineHeight */);\n        const originalHasWrapping = (this._originalEditor.getOption(141 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(141 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\n        const originalModel = this._originalEditor.getModel();\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\n        const result = {\n            original: [],\n            modified: []\n        };\n        let lineChangeModifiedLength = 0;\n        let lineChangeOriginalLength = 0;\n        let originalEquivalentLineNumber = 0;\n        let modifiedEquivalentLineNumber = 0;\n        let originalEndEquivalentLineNumber = 0;\n        let modifiedEndEquivalentLineNumber = 0;\n        const sortMyViewZones = (a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        };\n        const addAndCombineIfPossible = (destination, item) => {\n            if (item.domNode === null && destination.length > 0) {\n                const lastItem = destination[destination.length - 1];\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n                    lastItem.heightInLines += item.heightInLines;\n                    return;\n                }\n            }\n            destination.push(item);\n        };\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\n        let lastOriginalLineNumber = 1;\n        let lastModifiedLineNumber = 1;\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\n            const lineChange = (i < length ? this._lineChanges[i] : null);\n            if (lineChange !== null) {\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            }\n            else {\n                // Increase to very large value to get the producing tests of foreign view zones running\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n            }\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n            let stepOriginal = [];\n            let stepModified = [];\n            // ---------------------------- PRODUCE VIEW ZONES\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\n            if (hasWrapping) {\n                let count;\n                if (lineChange) {\n                    if (lineChange.originalEndLineNumber > 0) {\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\n                    }\n                    else {\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\n                    }\n                }\n                else {\n                    // `lastOriginalLineNumber` has not been looked at yet\n                    count = originalModel.getLineCount() - lastOriginalLineNumber + 1;\n                }\n                for (let i = 0; i < count; i++) {\n                    const originalLineNumber = lastOriginalLineNumber + i;\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\n                    if (originalViewLineCount < modifiedViewLineCount) {\n                        stepOriginal.push({\n                            afterLineNumber: originalLineNumber,\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                    else if (originalViewLineCount > modifiedViewLineCount) {\n                        stepModified.push({\n                            afterLineNumber: modifiedLineNumber,\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                }\n                if (lineChange) {\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\n                }\n            }\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\n                }\n                let marginDomNode = null;\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n                }\n                stepOriginal.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\n                    domNode: null,\n                    marginDomNode: marginDomNode\n                });\n                modifiedForeignVZ.advance();\n            }\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n                }\n                stepModified.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\n                    domNode: null\n                });\n                originalForeignVZ.advance();\n            }\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepOriginal.push(r);\n                }\n            }\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepModified.push(r);\n                }\n            }\n            // ---------------------------- END PRODUCE VIEW ZONES\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\n            // [CANCEL & EMIT] Try to cancel view zones out\n            let stepOriginalIndex = 0;\n            let stepModifiedIndex = 0;\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\n            stepModified = stepModified.sort(sortMyViewZones);\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n                const original = stepOriginal[stepOriginalIndex];\n                const modified = stepModified[stepModifiedIndex];\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n                if (originalDelta < modifiedDelta) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modifiedDelta < originalDelta) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else if (original.shouldNotShrink) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modified.shouldNotShrink) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else {\n                    if (original.heightInLines >= modified.heightInLines) {\n                        // modified view zone gets removed\n                        original.heightInLines -= modified.heightInLines;\n                        stepModifiedIndex++;\n                    }\n                    else {\n                        // original view zone gets removed\n                        modified.heightInLines -= original.heightInLines;\n                        stepOriginalIndex++;\n                    }\n                }\n            }\n            // [EMIT] Remaining original view zones\n            while (stepOriginalIndex < stepOriginal.length) {\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n                stepOriginalIndex++;\n            }\n            // [EMIT] Remaining modified view zones\n            while (stepModifiedIndex < stepModified.length) {\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n                stepModifiedIndex++;\n            }\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\n        }\n        return {\n            original: ViewZonesComputer._ensureDomNodes(result.original),\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\n        };\n    }\n    static _ensureDomNodes(zones) {\n        return zones.map((z) => {\n            if (!z.domNode) {\n                z.domNode = createFakeLinesDiv();\n            }\n            return z;\n        });\n    }\n}\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n    return {\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n        options: options\n    };\n}\nconst DECORATIONS = {\n    arrowRevertChange: ModelDecorationOptions.register({\n        description: 'diff-editor-arrow-revert-change',\n        glyphMarginHoverMessage: new MarkdownString(undefined, { isTrusted: true, supportThemeIcons: true }).appendMarkdown(nls.localize('revertChangeHoverMessage', 'Click to revert change')),\n        glyphMarginClassName: 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight),\n        zIndex: 10001,\n    }),\n    charDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete',\n        className: 'char-delete'\n    }),\n    charDeleteWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete-whole-line',\n        className: 'char-delete',\n        isWholeLine: true\n    }),\n    charInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert',\n        className: 'char-insert'\n    }),\n    charInsertWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert-whole-line',\n        className: 'char-insert',\n        isWholeLine: true\n    }),\n    lineInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert',\n        className: \"line-insert\" /* DiffEditorLineClasses.Insert */,\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineInsertWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert-with-sign',\n        className: \"line-insert\" /* DiffEditorLineClasses.Insert */,\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete',\n        className: \"line-delete\" /* DiffEditorLineClasses.Delete */,\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-with-sign',\n        className: \"line-delete\" /* DiffEditorLineClasses.Delete */,\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteMargin: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-margin',\n        marginClassName: 'gutter-delete',\n    })\n};\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing, defaultSashRatio) {\n        super(dataSource);\n        this._disableSash = (enableSplitViewResizing === false);\n        this._defaultRatio = defaultSashRatio;\n        this._sashRatio = null;\n        this._sashPosition = null;\n        this._startSashPosition = null;\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* Orientation.VERTICAL */ }));\n        if (this._disableSash) {\n            this._sash.state = 0 /* SashState.Disabled */;\n        }\n        this._sash.onDidStart(() => this._onSashDragStart());\n        this._sash.onDidChange((e) => this._onSashDrag(e));\n        this._sash.onDidEnd(() => this._onSashDragEnd());\n        this._sash.onDidReset(() => this._onSashReset());\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing, defaultRatio) {\n        this._defaultRatio = defaultRatio;\n        const newDisableSash = (enableSplitViewResizing === false);\n        if (this._disableSash !== newDisableSash) {\n            this._disableSash = newDisableSash;\n            this._sash.state = this._disableSash ? 0 /* SashState.Disabled */ : 3 /* SashState.Enabled */;\n        }\n    }\n    layout(sashRatio = this._sashRatio || this._defaultRatio) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        let sashPosition = Math.floor((sashRatio || this._defaultRatio) * contentWidth);\n        const midPoint = Math.floor(this._defaultRatio * contentWidth);\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n        }\n        else {\n            sashPosition = midPoint;\n        }\n        if (this._sashPosition !== sashPosition) {\n            this._sashPosition = sashPosition;\n        }\n        this._sash.layout();\n        return this._sashPosition;\n    }\n    _onSashDragStart() {\n        this._startSashPosition = this._sashPosition;\n    }\n    _onSashDrag(e) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n        this._sashRatio = sashPosition / contentWidth;\n        this._dataSource.relayoutEditors();\n    }\n    _onSashDragEnd() {\n        this._sash.layout();\n    }\n    _onSashReset() {\n        this._sashRatio = this._defaultRatio;\n        this._dataSource.relayoutEditors();\n        this._sash.layout();\n    }\n    getVerticalSashTop(sash) {\n        return 0;\n    }\n    getVerticalSashLeft(sash) {\n        return this._sashPosition;\n    }\n    getVerticalSashHeight(sash) {\n        return this._dataSource.getHeight();\n    }\n    setBoundarySashes(sashes) {\n        this._sash.orthogonalEndSash = sashes.bottom;\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        return c.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\n                });\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrDelete(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.originalStartLineNumber) {\n                                        startColumn = charChange.originalStartColumn;\n                                    }\n                                    else {\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.originalEndLineNumber) {\n                                        endColumn = charChange.originalEndColumn;\n                                    }\n                                    else {\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Arrows for reverting changes.\n            if (renderMarginRevertIcon) {\n                if (lineChange.modifiedEndLineNumber > 0) {\n                    result.decorations.push({\n                        range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1),\n                        options: DECORATIONS.arrowRevertChange\n                    });\n                }\n                else {\n                    const viewZone = zones.modified.find(z => z.afterLineNumber === lineChange.modifiedStartLineNumber);\n                    if (viewZone) {\n                        viewZone.marginDomNode = createViewZoneMarginArrow();\n                    }\n                }\n            }\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        return null;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n}\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\n                this._decorationsLeft = layoutInfo.decorationsLeft;\n                dataSource.relayoutEditors();\n            }\n        }));\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        // Nothing to do..\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n        return computer.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        let zoneIndex = 0;\n        for (const lineChange of lineChanges) {\n            // Add overview zones in the overview ruler\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: DECORATIONS.lineDeleteMargin\n                });\n                while (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff && zone.diff.originalStartLineNumber >= lineChange.originalStartLineNumber) {\n                        break;\n                    }\n                    zoneIndex++;\n                }\n                let zoneHeightInLines = 0;\n                if (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff\n                        && zone.diff.originalStartLineNumber === lineChange.originalStartLineNumber\n                        && zone.diff.originalEndLineNumber === lineChange.originalEndLineNumber\n                        && zone.diff.modifiedStartLineNumber === lineChange.modifiedStartLineNumber\n                        && zone.diff.modifiedEndLineNumber === lineChange.modifiedEndLineNumber) {\n                        zoneHeightInLines = zone.heightInLines;\n                    }\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, zoneHeightInLines, overviewZoneColor));\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Add decorations & overview zones\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n                else {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n            }\n        }\n        return result;\n    }\n    layout() {\n        // An editor should not be smaller than 5px\n        return Math.max(5, this._decorationsLeft);\n    }\n}\nclass InlineViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        this._originalModel = originalEditor.getModel();\n        this._renderIndicators = renderIndicators;\n        this._pendingLineChange = [];\n        this._pendingViewZones = [];\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\n    }\n    getViewZones() {\n        const result = super.getViewZones();\n        this._finalize(result);\n        return result;\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        const result = document.createElement('div');\n        result.className = 'inline-added-margin-view-zone';\n        return result;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-added-margin-view-zone';\n        return {\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n            heightInLines: lineChangeModifiedLength,\n            domNode: document.createElement('div'),\n            marginDomNode: marginDomNode\n        };\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const domNode = document.createElement('div');\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\n        const viewZone = {\n            shouldNotShrink: true,\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\n            heightInLines: lineChangeOriginalLength,\n            minWidthInPx: 0,\n            domNode: domNode,\n            marginDomNode: marginDomNode,\n            diff: {\n                originalStartLineNumber: lineChange.originalStartLineNumber,\n                originalEndLineNumber: lineChange.originalEndLineNumber,\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\n                originalModel: this._originalModel,\n                viewLineCounts: null,\n            }\n        };\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null, null);\n        }\n        this._pendingLineChange.push(lineChange);\n        this._pendingViewZones.push(viewZone);\n        return viewZone;\n    }\n    _finalize(result) {\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\n        const fontInfo = modifiedEditorOptions.get(48 /* EditorOption.fontInfo */);\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(31 /* EditorOption.disableMonospaceOptimizations */);\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(100 /* EditorOption.scrollBeyondLastColumn */);\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\n        const mightContainRTL = this._originalModel.mightContainRTL();\n        const lineHeight = modifiedEditorOptions.get(64 /* EditorOption.lineHeight */);\n        const layoutInfo = modifiedEditorOptions.get(140 /* EditorOption.layoutInfo */);\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\n        const stopRenderingLineAfter = modifiedEditorOptions.get(113 /* EditorOption.stopRenderingLineAfter */);\n        const renderWhitespace = modifiedEditorOptions.get(95 /* EditorOption.renderWhitespace */);\n        const renderControlCharacters = modifiedEditorOptions.get(90 /* EditorOption.renderControlCharacters */);\n        const fontLigatures = modifiedEditorOptions.get(49 /* EditorOption.fontLigatures */);\n        const lineBreaks = this._lineBreaksComputer.finalize();\n        let lineBreakIndex = 0;\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\n            const lineChange = this._pendingLineChange[i];\n            const viewZone = this._pendingViewZones[i];\n            const domNode = viewZone.domNode;\n            applyFontInfo(domNode, fontInfo);\n            const marginDomNode = viewZone.marginDomNode;\n            applyFontInfo(marginDomNode, fontInfo);\n            const decorations = [];\n            if (lineChange.charChanges) {\n                for (const charChange of lineChange.charChanges) {\n                    if (isCharChangeOrDelete(charChange)) {\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* InlineDecorationType.Regular */));\n                    }\n                }\n            }\n            const hasCharChanges = (decorations.length > 0);\n            const sb = new StringBuilder(10000);\n            let maxCharsPerLine = 0;\n            let renderedLineCount = 0;\n            let viewLineCounts = null;\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\n                const lineTokens = this._originalModel.tokenization.getLineTokens(lineNumber);\n                const lineContent = lineTokens.getLineContent();\n                const lineBreakData = lineBreaks[lineBreakIndex++];\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n                if (lineBreakData) {\n                    let lastBreakOffset = 0;\n                    for (const breakOffset of lineBreakData.breakOffsets) {\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                        lastBreakOffset = breakOffset;\n                    }\n                    if (!viewLineCounts) {\n                        viewLineCounts = [];\n                    }\n                    // make sure all lines before this one have an entry in `viewLineCounts`\n                    while (viewLineCounts.length < lineIndex) {\n                        viewLineCounts[viewLineCounts.length] = 1;\n                    }\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\n                    const marginDomNode2 = document.createElement('div');\n                    marginDomNode2.className = 'gutter-delete';\n                    result.original.push({\n                        afterLineNumber: lineNumber,\n                        afterColumn: 0,\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\n                        domNode: createFakeLinesDiv(),\n                        marginDomNode: marginDomNode2\n                    });\n                }\n                else {\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                }\n            }\n            maxCharsPerLine += scrollBeyondLastColumn;\n            const html = sb.build();\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n            domNode.innerHTML = trustedhtml;\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\n            if (viewLineCounts) {\n                // make sure all lines have an entry in `viewLineCounts`\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\n                while (viewLineCounts.length <= cnt) {\n                    viewLineCounts[viewLineCounts.length] = 1;\n                }\n            }\n            viewZone.diff.viewLineCounts = viewLineCounts;\n        }\n        result.original.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n    }\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\n        sb.appendString('<div class=\"view-line');\n        if (!hasCharChanges) {\n            // No char changes\n            sb.appendString(' char-delete');\n        }\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(renderedLineCount * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n        ), sb);\n        sb.appendString('</div>');\n        if (this._renderIndicators) {\n            const marginElement = document.createElement('div');\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\n            marginDomNode.appendChild(marginElement);\n        }\n        return output.characterMapping.getHorizontalOffset(output.characterMapping.length);\n    }\n}\nfunction validateDiffWordWrap(value, defaultValue) {\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\n}\nfunction isChangeOrInsert(lineChange) {\n    return lineChange.modifiedEndLineNumber > 0;\n}\nfunction isChangeOrDelete(lineChange) {\n    return lineChange.originalEndLineNumber > 0;\n}\nfunction isCharChangeOrInsert(charChange) {\n    if (charChange.modifiedStartLineNumber === charChange.modifiedEndLineNumber) {\n        return charChange.modifiedEndColumn - charChange.modifiedStartColumn > 0;\n    }\n    return charChange.modifiedEndLineNumber - charChange.modifiedStartLineNumber > 0;\n}\nfunction isCharChangeOrDelete(charChange) {\n    if (charChange.originalStartLineNumber === charChange.originalEndLineNumber) {\n        return charChange.originalEndColumn - charChange.originalStartColumn > 0;\n    }\n    return charChange.originalEndLineNumber - charChange.originalStartLineNumber > 0;\n}\nfunction createFakeLinesDiv() {\n    const r = document.createElement('div');\n    r.className = 'diagonal-fill';\n    return r;\n}\nfunction createViewZoneMarginArrow() {\n    const arrow = document.createElement('div');\n    arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n    return dom.$('div', {}, arrow);\n}\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\n    const lineCount = model.getLineCount();\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\n}\nfunction validateDiffEditorOptions(options, defaults) {\n    return {\n        enableSplitViewResizing: validateBooleanOption(options.enableSplitViewResizing, defaults.enableSplitViewResizing),\n        splitViewDefaultRatio: clampedFloat(options.splitViewDefaultRatio, 0.5, 0.1, 0.9),\n        renderSideBySide: validateBooleanOption(options.renderSideBySide, defaults.renderSideBySide),\n        renderMarginRevertIcon: validateBooleanOption(options.renderMarginRevertIcon, defaults.renderMarginRevertIcon),\n        maxComputationTime: clampedInt(options.maxComputationTime, defaults.maxComputationTime, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        maxFileSize: clampedInt(options.maxFileSize, defaults.maxFileSize, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        ignoreTrimWhitespace: validateBooleanOption(options.ignoreTrimWhitespace, defaults.ignoreTrimWhitespace),\n        renderIndicators: validateBooleanOption(options.renderIndicators, defaults.renderIndicators),\n        originalEditable: validateBooleanOption(options.originalEditable, defaults.originalEditable),\n        diffCodeLens: validateBooleanOption(options.diffCodeLens, defaults.diffCodeLens),\n        renderOverviewRuler: validateBooleanOption(options.renderOverviewRuler, defaults.renderOverviewRuler),\n        diffWordWrap: validateDiffWordWrap(options.diffWordWrap, defaults.diffWordWrap),\n        diffAlgorithm: validateStringSetOption(options.diffAlgorithm, defaults.diffAlgorithm, ['legacy', 'advanced'], { 'smart': 'legacy', 'experimental': 'advanced' }),\n        accessibilityVerbose: validateBooleanOption(options.accessibilityVerbose, defaults.accessibilityVerbose),\n        experimental: {\n            collapseUnchangedRegions: false,\n        },\n    };\n}\nfunction changedDiffEditorOptions(a, b) {\n    return {\n        enableSplitViewResizing: (a.enableSplitViewResizing !== b.enableSplitViewResizing),\n        renderSideBySide: (a.renderSideBySide !== b.renderSideBySide),\n        renderMarginRevertIcon: (a.renderMarginRevertIcon !== b.renderMarginRevertIcon),\n        maxComputationTime: (a.maxComputationTime !== b.maxComputationTime),\n        maxFileSize: (a.maxFileSize !== b.maxFileSize),\n        ignoreTrimWhitespace: (a.ignoreTrimWhitespace !== b.ignoreTrimWhitespace),\n        renderIndicators: (a.renderIndicators !== b.renderIndicators),\n        originalEditable: (a.originalEditable !== b.originalEditable),\n        diffCodeLens: (a.diffCodeLens !== b.diffCodeLens),\n        renderOverviewRuler: (a.renderOverviewRuler !== b.renderOverviewRuler),\n        diffWordWrap: (a.diffWordWrap !== b.diffWordWrap),\n        diffAlgorithm: (a.diffAlgorithm !== b.diffAlgorithm),\n        accessibilityVerbose: (a.accessibilityVerbose !== b.accessibilityVerbose),\n    };\n}\nregisterThemingParticipant((theme, collector) => {\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nimport { AudioCue, IAudioCueService } from '../../../platform/audioCues/browser/audioCueService.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nconst defaultOptions = {\n    followsCaret: true,\n    ignoreCharChanges: true,\n    alwaysRevealFirst: true,\n    findResultLoop: true\n};\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nexport let DiffNavigator = class DiffNavigator extends Disposable {\n    constructor(editor, options = {}, _audioCueService, _codeEditorService, _accessibilityService) {\n        super();\n        this._audioCueService = _audioCueService;\n        this._codeEditorService = _codeEditorService;\n        this._accessibilityService = _accessibilityService;\n        this._onDidUpdate = this._register(new Emitter());\n        this._editor = editor;\n        this._options = objects.mixin(options, defaultOptions, false);\n        this.disposed = false;\n        this.nextIdx = -1;\n        this.ranges = [];\n        this.ignoreSelectionChange = false;\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\n        this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n        if (this._options.followsCaret) {\n            this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e) => {\n                if (this.ignoreSelectionChange) {\n                    return;\n                }\n                this._updateAccessibilityState(e.position.lineNumber);\n                this.nextIdx = -1;\n            }));\n        }\n        // init things\n        this._init();\n    }\n    _init() {\n        const changes = this._editor.getLineChanges();\n        if (!changes) {\n            return;\n        }\n    }\n    _onDiffUpdated() {\n        this._init();\n        this._compute(this._editor.getLineChanges());\n        if (this.revealFirst) {\n            // Only reveal first on first non-null changes\n            if (this._editor.getLineChanges() !== null) {\n                this.revealFirst = false;\n                this.nextIdx = -1;\n                this.next(1 /* ScrollType.Immediate */);\n            }\n        }\n    }\n    _compute(lineChanges) {\n        // new ranges\n        this.ranges = [];\n        if (lineChanges) {\n            // create ranges from changes\n            lineChanges.forEach((lineChange) => {\n                if (!this._options.ignoreCharChanges && lineChange.charChanges) {\n                    lineChange.charChanges.forEach((charChange) => {\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n                        });\n                    });\n                }\n                else {\n                    if (lineChange.modifiedEndLineNumber === 0) {\n                        // a deletion\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber + 1, 1)\n                        });\n                    }\n                    else {\n                        // an insertion or modification\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber + 1, 1)\n                        });\n                    }\n                }\n            });\n        }\n        // sort\n        this.ranges.sort((left, right) => Range.compareRangesUsingStarts(left.range, right.range));\n        this._onDidUpdate.fire(this);\n    }\n    _initIdx(fwd) {\n        let found = false;\n        const position = this._editor.getPosition();\n        if (!position) {\n            this.nextIdx = 0;\n            return;\n        }\n        for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n            const range = this.ranges[i].range;\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\n                this.nextIdx = i + (fwd ? 0 : -1);\n                found = true;\n            }\n        }\n        if (!found) {\n            // after the last change\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n        }\n        if (this.nextIdx < 0) {\n            this.nextIdx = this.ranges.length - 1;\n        }\n    }\n    _move(fwd, scrollType) {\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n        if (!this.canNavigate()) {\n            return;\n        }\n        if (this.nextIdx === -1) {\n            this._initIdx(fwd);\n        }\n        else if (fwd) {\n            this.nextIdx += 1;\n            if (this.nextIdx >= this.ranges.length) {\n                this.nextIdx = 0;\n            }\n        }\n        else {\n            this.nextIdx -= 1;\n            if (this.nextIdx < 0) {\n                this.nextIdx = this.ranges.length - 1;\n            }\n        }\n        const info = this.ranges[this.nextIdx];\n        this.ignoreSelectionChange = true;\n        try {\n            const pos = info.range.getStartPosition();\n            this._editor.setPosition(pos);\n            this._editor.revealRangeInCenter(info.range, scrollType);\n            this._updateAccessibilityState(pos.lineNumber, true);\n        }\n        finally {\n            this.ignoreSelectionChange = false;\n        }\n    }\n    _updateAccessibilityState(lineNumber, jumpToChange) {\n        var _a;\n        const modifiedEditor = (_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified;\n        if (!modifiedEditor) {\n            return;\n        }\n        const insertedOrModified = modifiedEditor.getLineDecorations(lineNumber).find(l => l.options.className === 'line-insert');\n        if (insertedOrModified) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineModified, true);\n        }\n        else if (jumpToChange) {\n            // The modified editor does not include deleted lines, but when\n            // we are moved to the area where lines were deleted, play this cue\n            this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, true);\n        }\n        else {\n            return;\n        }\n        const codeEditor = this._codeEditorService.getActiveCodeEditor();\n        if (jumpToChange && codeEditor && insertedOrModified && this._accessibilityService.isScreenReaderOptimized()) {\n            codeEditor.setSelection({ startLineNumber: lineNumber, startColumn: 0, endLineNumber: lineNumber, endColumn: Number.MAX_VALUE });\n            codeEditor.writeScreenReaderContent('diff-navigation');\n        }\n    }\n    canNavigate() {\n        return this.ranges && this.ranges.length > 0;\n    }\n    next(scrollType = 0 /* ScrollType.Smooth */) {\n        if (!this.canNavigateNext()) {\n            return;\n        }\n        this._move(true, scrollType);\n    }\n    previous(scrollType = 0 /* ScrollType.Smooth */) {\n        if (!this.canNavigatePrevious()) {\n            return;\n        }\n        this._move(false, scrollType);\n    }\n    canNavigateNext() {\n        return this.canNavigateLoop() || this.nextIdx < this.ranges.length - 1;\n    }\n    canNavigatePrevious() {\n        return this.canNavigateLoop() || this.nextIdx !== 0;\n    }\n    canNavigateLoop() {\n        return Boolean(this._options.findResultLoop);\n    }\n    dispose() {\n        super.dispose();\n        this.ranges = [];\n        this.disposed = true;\n    }\n};\nDiffNavigator = __decorate([\n    __param(2, IAudioCueService),\n    __param(3, ICodeEditorService),\n    __param(4, IAccessibilityService)\n], DiffNavigator);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as objects from '../../../base/common/objects.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nexport let EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\n    constructor(domElement, options, codeEditorWidgetOptions, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n        this._parentEditor = parentEditor;\n        this._overwriteOptions = options;\n        // Overwrite parent's options\n        super.updateOptions(this._overwriteOptions);\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\n    }\n    getParentEditor() {\n        return this._parentEditor;\n    }\n    _onParentConfigurationChanged(e) {\n        super.updateOptions(this._parentEditor.getRawOptions());\n        super.updateOptions(this._overwriteOptions);\n    }\n    updateOptions(newOptions) {\n        objects.mixin(this._overwriteOptions, newOptions, true);\n        super.updateOptions(this._overwriteOptions);\n    }\n};\nEmbeddedCodeEditorWidget = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, ICodeEditorService),\n    __param(6, ICommandService),\n    __param(7, IContextKeyService),\n    __param(8, IThemeService),\n    __param(9, INotificationService),\n    __param(10, IAccessibilityService),\n    __param(11, ILanguageConfigurationService),\n    __param(12, ILanguageFeaturesService)\n], EmbeddedCodeEditorWidget);\n"],"names":["RestrictedRenderingContext","constructor","viewLayout","viewportData","this","_restrictedRenderingContextBrand","undefined","_viewLayout","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","visibleRange","bigNumbersDelta","vInfo","getCurrentViewport","scrollTop","top","scrollLeft","left","viewportWidth","width","viewportHeight","height","getScrolledTopFromAbsoluteTop","absoluteTop","getVerticalOffsetForLineNumber","lineNumber","includeViewZones","getVerticalOffsetAfterLineNumber","getDecorationsInViewport","RenderingContext","viewLines","super","_renderingContextBrand","_viewLines","linesVisibleRangesForRange","range","includeNewLines","visibleRangeForPosition","position","LineVisibleRanges","outsideRenderedLine","ranges","HorizontalRange","from","result","Array","length","i","len","_horizontalRangeBrand","Math","round","toString","concat","FloatHorizontalRange","_floatHorizontalRangeBrand","compare","a","b","HorizontalPosition","originalLeft","VisibleRanges","ViewController","configuration","viewModel","userInputEvents","commandDelegate","paste","text","pasteOnNewLine","multicursorText","mode","type","compositionType","replacePrevCharCnt","replaceNextCharCnt","positionDelta","compositionStart","startComposition","compositionEnd","endComposition","cut","setSelection","modelSelection","CoreNavigationCommands","SetSelection","runCoreEditorCommand","source","selection","_validateViewColumn","viewPosition","minColumn","getLineMinColumn","column","Position","_hasMulticursorModifier","data","options","get","altKey","ctrlKey","metaKey","_hasNonMulticursorModifier","dispatchMouse","selectionClipboardIsOn","platform","columnSelection","middleButton","_columnSelect","mouseColumn","inSelectionMode","startedOnLineNumbers","_lastCursorLineSelect","revealType","_createCursor","_lineSelectDrag","_lineSelect","mouseDownCount","_selectAll","_lastCursorLineSelectDrag","onInjectedText","_lastCursorWordSelect","_wordSelectDrag","_wordSelect","shiftKey","_lastCursorMoveToSelect","_moveToSelect","moveTo","_usualArgs","_convertViewToModelPosition","MoveTo","MoveToSelect","doColumnSelect","ColumnSelect","wholeLine","CreateCursor","LastCursorMoveToSelect","WordSelect","WordSelectDrag","LastCursorWordSelect","LineSelect","LineSelectDrag","LastCursorLineSelect","LastCursorLineSelectDrag","SelectAll","coordinatesConverter","convertViewPositionToModelPosition","emitKeyDown","e","emitKeyUp","emitContextMenu","emitMouseMove","emitMouseLeave","emitMouseUp","emitMouseDown","emitMouseDrag","emitMouseDrop","emitMouseDropCanceled","emitMouseWheel","RenderedLinesCollection","createLine","_createLine","_set","flush","rendLineNumberStart","lines","_lines","_rendLineNumberStart","_get","getStartLineNumber","getEndLineNumber","getCount","getLine","lineIndex","BugIndicatingError","onLinesDeleted","deleteFromLineNumber","deleteToLineNumber","startLineNumber","endLineNumber","deleteCnt","deleteStartIndex","deleteCount","deleteAboveCount","splice","onLinesChanged","changeFromLineNumber","changeCount","changeToLineNumber","someoneNotified","changedLineNumber","onContentChanged","onLinesInserted","insertFromLineNumber","insertToLineNumber","insertCnt","newLines","insertIndex","beforeLines","slice","afterLines","deletedLines","onTokensChanged","notifiedSomeone","rng","toLineNumber","fromLineNumber","max","to","min","VisibleLinesCollection","host","_host","domNode","_createDomNode","_linesCollection","createVisibleLine","createFastDomNode","document","createElement","setClassName","setPosition","setAttribute","onConfigurationChanged","hasChanged","onFlushed","count","deleted","lineDomNode","getDomNode","removeChild","onScrollChanged","scrollTopChanged","onZonesChanged","getVisibleLine","renderLines","inp","renderer","ViewLayerRenderer","ctx","linesLength","resCtx","render","relativeVerticalOffset","inContext","stopLineNumber","deltaTop","x","_finishRendering","_renderUntouchedLines","_insertLinesBefore","removeCnt","_removeLinesBefore","_insertLinesAfter","_removeLinesAfter","startIndex","endIndex","deltaLN","layoutLine","newLinesLen","removeCount","removeIndex","_finishRenderingNewLines","domNodeIsEmpty","newLinesHTML","wasNew","_ttPolicy","createHTML","lastChild","innerHTML","insertAdjacentHTML","currChild","line","setDomNode","previousSibling","_finishRenderingInvalidLines","invalidLinesHTML","wasInvalid","hugeDomNode","firstChild","parentNode","replaceChild","sb","_sb","reset","hadNewLine","renderLine","build","hadInvalidLine","createTrustedTypesPolicy","value","StringBuilder","ViewOverlays","ViewPart","context","_visibleLines","fontInfo","_context","applyFontInfo","_dynamicOverlays","_isFocused","shouldRender","dispose","ViewOverlayLine","addDynamicOverlay","overlay","push","onFocusChanged","isFocused","prepareRender","toRender","filter","dynamicOverlay","onDidRender","_viewOverlaysRender","toggleClassName","dynamicOverlays","_configuration","_lineHeight","_domNode","_renderedContent","appendString","String","setTop","setHeight","ContentViewOverlays","layoutInfo","_contentWidth","contentWidth","scrollWidthChanged","setWidth","MarginViewOverlays","_contentLeft","contentLeft","scrollHeightChanged","ViewEventHandler","addEventHandler","removeEventHandler","PartFingerprints","write","target","partId","read","r","getAttribute","parseInt","collect","child","stopAt","resultLen","body","nodeType","ELEMENT_NODE","parentElement","Uint8Array","ViewUserInputEvents","onKeyDown","onKeyUp","onContextMenu","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onMouseDrag","onMouseDrop","onMouseDropCanceled","onMouseWheel","_coordinatesConverter","_a","call","_convertViewToModelMouseEvent","event","_convertViewToModelMouseTarget","convertViewToModelMouseTarget","Object","assign","convertViewRangeToModelRange","detail","convertViewToModelViewZoneData","viewZoneId","positionBefore","positionAfter","afterLineNumber","CodeEditorContributions","Disposable","_editor","_instantiationService","_instances","_register","DisposableMap","_pending","Map","_finishedInstantiation","initialize","editor","contributions","instantiationService","desc","has","id","onUnexpectedError","Error","set","_instantiateSome","runWhenIdle","saveViewState","contributionsState","contribution","restoreViewState","_instantiateById","onBeforeInteractionEvent","onAfterModelAttached","instantiation","contribs","_findPendingContributionsByInstantiation","contrib","delete","instance","createInstance","ctor","console","warn","err","__decorate","decorators","key","d","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","EDITOR_ID","ModelData","model","view","hasRealView","listenersToRemove","attachedView","onBeforeDetached","CodeEditorWidget","isSimpleWidget","domElement","_options","codeEditorWidgetOptions","codeEditorService","commandService","contextKeyService","themeService","notificationService","accessibilityService","languageConfigurationService","languageFeaturesService","_deliveryQueue","EventDeliveryQueue","_contributions","_onDidDispose","Emitter","onDidDispose","_onDidChangeModelContent","deliveryQueue","onDidChangeModelContent","_onDidChangeModelLanguage","onDidChangeModelLanguage","_onDidChangeModelLanguageConfiguration","onDidChangeModelLanguageConfiguration","_onDidChangeModelOptions","onDidChangeModelOptions","_onDidChangeModelDecorations","onDidChangeModelDecorations","_onDidChangeModelTokens","onDidChangeModelTokens","_onDidChangeConfiguration","onDidChangeConfiguration","_onDidChangeModel","onDidChangeModel","_onDidChangeCursorPosition","onDidChangeCursorPosition","_onDidChangeCursorSelection","onDidChangeCursorSelection","_onDidAttemptReadOnlyEdit","InteractionEmitter","onDidAttemptReadOnlyEdit","_onDidLayoutChange","onDidLayoutChange","_editorTextFocus","BooleanEventEmitter","onDidFocusEditorText","onDidChangeToTrue","onDidBlurEditorText","onDidChangeToFalse","_editorWidgetFocus","onDidFocusEditorWidget","onDidBlurEditorWidget","_onWillType","onWillType","_onDidType","onDidType","_onDidCompositionStart","onDidCompositionStart","_onDidCompositionEnd","onDidCompositionEnd","_onDidPaste","onDidPaste","_onMouseUp","_onMouseDown","_onMouseDrag","_onMouseDrop","_onMouseDropCanceled","_onDropIntoEditor","onDropIntoEditor","_onContextMenu","_onMouseMove","_onMouseLeave","_onMouseWheel","_onKeyUp","_onKeyDown","_onDidContentSizeChange","onDidContentSizeChange","_onDidScrollChange","onDidScrollChange","_onDidChangeViewZones","onDidChangeViewZones","_onDidChangeHiddenAreas","onDidChangeHiddenAreas","_actions","_bannerDomNode","_dropIntoEditorDecorations","createDecorationsCollection","willCreateCodeEditor","_domElement","_overflowWidgetsDomNode","overflowWidgetsDomNode","_id","_decorationTypeKeysToIds","_decorationTypeSubtypes","_telemetryData","telemetryData","_createConfiguration","onDidChange","fire","_contextKeyService","createScoped","_notificationService","_codeEditorService","_commandService","_themeService","EditorContextKeysManager","EditorModeContext","createChild","ServiceCollection","IContextKeyService","_modelData","_focusTracker","CodeEditorWidgetFocusTracker","onChange","setValue","hasFocus","_contentWidgets","_overlayWidgets","isArray","EditorExtensionsRegistry","getEditorContributions","action","getEditorActions","internalAction","InternalEditorAction","label","alias","withNullAsUndefined","precondition","invokeFunction","accessor","runEditorCommand","isDropIntoEnabled","enabled","dom","onDragEnter","onDragOver","getTargetAtClientPoint","clientX","clientY","showDropIndicatorAt","onDrop","removeDropIndicator","dataTransfer","onDragLeave","onDragEnd","addCodeEditor","writeScreenReaderContent","reason","EditorConfiguration","getId","getEditorType","editorCommon","ICodeEditor","removeCodeEditor","clear","_removeDecorationTypes","_postDetachModelCleanup","_detachModel","invokeWithinContext","fn","updateOptions","newOptions","getOptions","getOption","getRawOptions","getOverflowWidgetsDomNode","getConfiguredWordAtPosition","WordOperations","getWordAtPosition","getValue","preserveBOM","eolPreference","lineEnding","newValue","getModel","setModel","hasTextFocus","detachedModel","_attachModel","hasModel","focus","oldModelUrl","uri","newModelUrl","decorationType","subTypes","subType","_removeDecorationType","getVisibleRanges","getVisibleRangesPlusViewportAboveBelow","getWhitespaces","_getVerticalOffsetAfterPosition","modelData","modelLineNumber","modelColumn","modelPosition","validatePosition","convertModelPositionToViewPosition","getTopForLineNumber","_getVerticalOffsetForPosition","getTopForPosition","getBottomForLineNumber","setHiddenAreas","map","Range","lift","getVisibleColumnFromPosition","rawPosition","tabSize","CursorColumns","visibleColumnFromColumn","getLineContent","getPosition","isIPosition","setSelections","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","_sendRevealRange","modelRange","verticalType","revealHorizontal","scrollType","isIRange","validatedModelRange","validateRange","viewRange","convertModelRangeToViewRange","revealRange","revealLine","_revealLine","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealPosition","_revealPosition","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","getSelection","getSelections","something","isSelection","Selection","isISelection","isRange","_setSelectionImpl","startColumn","endColumn","sel","revealLines","_revealLines","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","revealVerticalInCenter","_revealRange","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","getContentWidth","getScrollLeft","getCurrentScrollLeft","getContentHeight","getScrollTop","getCurrentScrollTop","setScrollLeft","newScrollLeft","setScrollPosition","setScrollTop","newScrollTop","hasPendingScrollAnimation","cursorState","saveCursorState","viewState","saveState","s","codeEditorState","restoreCursorState","reducedState","reduceRestoreState","restoreState","getContribution","getActions","values","getSupportedActions","isSupported","getAction","trigger","handlerId","payload","_startComposition","_endComposition","args","_type","_compositionType","replaceCharCnt","_paste","_cut","run","_triggerEditorCommand","_triggerCommand","executeCommand","startPosition","getStartPosition","endPosition","languageId","command","getEditorCommand","_getViewModel","pushUndoStop","pushStackElement","popUndoStop","popStackElement","executeEdits","edits","endCursorState","cursorStateComputer","executeCommands","commands","decorations","EditorDecorationsCollection","changeDecorations","callback","getLineDecorations","filterValidationDecorations","getDecorationsInRange","deltaDecorations","oldDecorations","newDecorations","removeDecorations","decorationIds","changeAccessor","removeDecorationsByType","decorationTypeKey","oldDecorationsIds","hasOwnProperty","getLayoutInfo","createOverviewRuler","cssClassName","getContainerDomNode","delegateVerticalScrollbarPointerDown","browserEvent","delegateScrollFromMouseWheelEvent","layout","dimension","observeContainer","hasWidgetFocus","addContentWidget","widget","widgetData","layoutContentWidget","widgetId","removeContentWidget","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","changeViewZones","change","getScrolledVisiblePosition","getOffsetForColumn","glyphMarginWidth","lineNumbersWidth","decorationsWidth","forceRedraw","setAriaOptions","setBanner","domNodeHeight","contains","setReservedHeight","prepend","getLanguageId","setIsDominatedByLongLines","isDominatedByLongLines","setModelLineCount","getLineCount","onBeforeAttached","ViewModel","DOMLineBreaksComputerFactory","create","MonospaceLineBreaksComputerFactory","onWillDispose","onEvent","kind","reachedMaxCursorCount","multiCursorLimit","message","nls","prompt","Severity","Warning","query","positions","selections","e1","secondaryPositions","e2","secondarySelections","modelVersionId","oldSelections","oldModelVersionId","_createView","appendChild","keys","viewUserInputEvents","View","getColorTheme","removeAllDecorationsWithOwnerId","removeDomNode","removeAttribute","removeDecorationType","dropIntoEditorDecorationOptions","ModelDecorationOptions","register","description","className","IInstantiationService","ICodeEditorService","ICommandService","IThemeService","INotificationService","IAccessibilityService","ILanguageConfigurationService","ILanguageFeaturesService","_emitterOptions","_onDidChangeToTrue","_onDidChangeToFalse","_value","createKey","_editorSimpleInput","EditorContextKeys","editorSimpleInput","bindTo","_editorFocus","_textInputFocus","textInputFocus","editorTextFocus","_editorTabMovesFocus","tabMovesFocus","_editorReadonly","readOnly","_inDiffEditor","inDiffEditor","_editorColumnSelection","_hasMultipleSelections","hasMultipleSelections","_hasNonEmptySelection","hasNonEmptySelection","_canUndo","canUndo","_canRedo","canRedo","_updateFromConfig","_updateFromSelection","_updateFromFocus","_updateFromModel","TabFocus","onDidChangeTabFocus","getTabFocusMode","some","isEmpty","Boolean","_languageFeaturesService","_langId","_hasCompletionItemProvider","hasCompletionItemProvider","_hasCodeActionsProvider","hasCodeActionsProvider","_hasCodeLensProvider","hasCodeLensProvider","_hasDefinitionProvider","hasDefinitionProvider","_hasDeclarationProvider","hasDeclarationProvider","_hasImplementationProvider","hasImplementationProvider","_hasTypeDefinitionProvider","hasTypeDefinitionProvider","_hasHoverProvider","hasHoverProvider","_hasDocumentHighlightProvider","hasDocumentHighlightProvider","_hasDocumentSymbolProvider","hasDocumentSymbolProvider","_hasReferenceProvider","hasReferenceProvider","_hasRenameProvider","hasRenameProvider","_hasSignatureHelpProvider","hasSignatureHelpProvider","_hasInlayHintsProvider","hasInlayHintsProvider","_hasDocumentFormattingProvider","hasDocumentFormattingProvider","_hasDocumentSelectionFormattingProvider","hasDocumentSelectionFormattingProvider","_hasMultipleDocumentFormattingProvider","hasMultipleDocumentFormattingProvider","_hasMultipleDocumentSelectionFormattingProvider","hasMultipleDocumentSelectionFormattingProvider","_isInWalkThrough","isInWalkThroughSnippet","update","_update","completionProvider","codeActionProvider","codeLensProvider","definitionProvider","declarationProvider","implementationProvider","typeDefinitionProvider","hoverProvider","documentHighlightProvider","documentSymbolProvider","referenceProvider","renameProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","signatureHelpProvider","inlayHintsProvider","bufferChangeEvents","all","scheme","Schemas","walkThroughSnippet","_onChange","_hasFocus","_domFocusTracker","onDidFocus","onDidBlur","_decorationIds","_isChangingDecorations","listener","thisArgs","disposables","getRange","index","getDecorationRange","getRanges","decorationId","decoration","includes","squigglyStart","encodeURIComponent","squigglyEnd","getSquigglySVGData","color","dotdotdotStart","dotdotdotEnd","registerThemingParticipant","theme","collector","errorForeground","getColor","editorErrorForeground","addRule","warningForeground","editorWarningForeground","infoForeground","editorInfoForeground","hintForeground","editorHintForeground","unnecessaryForeground","editorUnnecessaryCodeOpacity","rgba","DiffEntry","originalLineStart","originalLineEnd","modifiedLineStart","modifiedLineEnd","getType","Diff","entries","diffReviewInsertIcon","registerIcon","Codicon","add","diffReviewRemoveIcon","remove","diffReviewCloseIcon","close","DiffReview","diffEditor","_languageService","_audioCueService","_configurationService","_width","_diffEditor","_isVisible","shadow","actionBarContainer","_actionBar","ActionBar","Action","ThemeIcon","asClassName","hide","icon","_content","scrollbar","DomScrollableElement","onDidUpdateDiff","_diffs","_compute","_render","getModifiedEditor","preventDefault","row","_goToRow","equals","_getNextRow","_getPrevRow","accept","affectsConfiguration","accessibilityVerbose","_currentDiff","prev","currentIndex","_findDiffIndex","doLayout","jumpToLineNumber","current","_getCurrentFocusedRow","isNaN","previousElementSibling","_getFirstRow","nextElementSibling","querySelector","activeElement","test","tabIndex","element","classList","playAudioCue","AudioCue","diffLineInserted","diffLineDeleted","scanDomNode","isVisible","setDisplay","lineChanges","getLineChanges","originalModel","getOriginalEditor","modifiedModel","_mergeAdjacent","originalLineCount","modifiedLineCount","diffs","diffsLength","lineChange","originalStart","originalStartLineNumber","originalEnd","originalEndLineNumber","modifiedStart","modifiedStartLineNumber","modifiedEnd","modifiedEndLineNumber","rLength","originalEqualAbove","modifiedEqualAbove","minOriginal","minModified","prevLineChange","fromOriginal","fromModified","delta","originalEqualBelow","modifiedEqualBelow","maxOriginal","maxModified","nextLineChange","toOriginal","toModified","curr","thisDiff","currLast","thisFirst","pos","diff","originalOptions","modifiedOptions","originalModelOpts","modifiedModelOpts","diffIndex","container","minOriginalLine","maxOriginalLine","minModifiedLine","maxModifiedLine","diffEntry","header","cell","originalChangedLinesCnt","modifiedChangedLinesCnt","createTextNode","getAriaLines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","comment","lineHeight","modLine","_renderSection","languageIdCodec","dest","rowClassName","lineNumbersExtraClassName","spacerIcon","cnt","originalLayoutInfo","originalLineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","originalLine","modifiedLine","style","minWidth","originalLineNumber","innerText","modifiedLineNumber","paddingRight","spacer","spacerCodicon","lineContent","html","_renderLine","ariaLabel","lineTokens","LineTokens","createEmpty","isBasicASCII","ViewLineRenderingData","mightContainNonBasicASCII","containsRTL","mightContainRTL","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","OFF","ILanguageService","IAudioCueService","IConfigurationService","DiffReviewNext","EditorAction","ContextKeyExpr","kbOpts","kbExpr","primary","weight","findFocusedDiffEditor","diffReviewNext","DiffReviewPrev","diffReviewPrev","diffEditors","listDiffEditors","activeCodeEditor","getFocusedCodeEditor","getActiveCodeEditor","registerEditorAction","InlineDiffMargin","visibility","_visibility","_diffActions","_viewZoneId","_marginDomNode","_contextMenuService","_clipboardService","zIndex","lightBulb","lineFeed","getEOL","right","actions","isDeletion","deletedText","getValueInRange","writeText","copyLineAction","currentLineNumberOffset","eof","getEndOfLineSequence","getLineMaxColumn","useShadowDOM","isIOS","showContextMenu","y","domForShadowRoot","getAnchor","autoSelectFirstItem","pad","floor","posx","_updateLightBulbPosition","rightButton","posy","marginDomNode","offset","lineNumberOffset","newTop","viewLineCounts","acc","WorkerBasedDocumentDiffProvider","editorWorkerService","telemetryService","onDidChangeEventEmitter","diffAlgorithm","diffAlgorithmOnDidChangeSubscription","setOptions","computeDiff","original","modified","changes","LineRangeMapping","LineRange","RangeMapping","getFullModelRange","identical","quitEarly","sw","StopWatch","timeMs","elapsed","publicLog2","timedOut","didChange","IEditorWorkerService","ITelemetryService","VisualEditorState","_zones","_inlineDiffMargins","_zonesMap","_decorations","getForeignViewZones","allViewZones","z","clean","viewChangeAccessor","zoneId","removeZone","overviewRuler","restoreScrollState","scrollState","StableEditorScrollState","capture","inlineDiffMargin","zones","viewZone","suppressMouseDown","addZone","getValueLength","restore","setZones","overviewZones","DIFF_EDITOR_ID","diffInsertIcon","diffRemoveIcon","ttPolicy","ariaNavigationTip","DiffEditorWidget","clipboardService","contextMenuService","_editorProgressService","_onDidUpdateDiff","_lastOriginalWarning","_lastModifiedWarning","willCreateDiffEditor","_documentDiffProvider","_beginUpdateDecorationsSoon","_state","_updatingDiffProgress","validateDiffEditorOptions","enableSplitViewResizing","splitViewDefaultRatio","renderSideBySide","renderMarginRevertIcon","maxComputationTime","maxFileSize","ignoreTrimWhitespace","renderIndicators","originalEditable","diffCodeLens","renderOverviewRuler","diffWordWrap","experimental","collapseUnchangedRegions","isEmbeddedDiffEditorKey","isEmbeddedDiffEditor","isInEmbeddedEditor","_updateDecorationsRunner","RunOnceScheduler","_updateDecorations","_containerDomElement","_getClassName","_overviewViewportDomElement","_overviewDomElement","POINTER_DOWN","_modifiedEditor","MOUSE_WHEEL","passive","_originalDomNode","_modifiedDomNode","_beginUpdateDecorationsTimeout","_currentlyChangingViewZones","_diffComputationToken","_originalEditorState","_modifiedEditorState","_isHandlingScrollEvent","_elementSizeObserver","ElementSizeObserver","_onDidContainerSizeChanged","automaticLayout","startObserving","_diffComputationResult","_originalEditor","_createLeftHandSideEditor","originalEditor","_createRightHandSideEditor","modifiedEditor","_originalOverviewRuler","_modifiedOverviewRuler","_reviewPane","_setStrategy","DiffEditorWidgetSideBySide","_createDataSource","DiffEditorWidgetInline","onDidColorThemeChange","t","_strategy","applyColors","schedule","getDiffEditorContributions","addDiffEditor","_setState","newState","show","getThemeTypeSelector","_disposeOverviewRulers","_createOverviewRulers","assert","ok","_layoutOverviewRulers","_createInnerEditor","_adjustOptionsForLeftHandSide","scrollLeftChanged","_layoutOverviewViewport","_onViewZonesChanged","cancel","isInDiffLeftEditorKey","ONE_OVERVIEW_WIDTH","contentHeight","contentHeightChanged","contentWidthChanged","_adjustOptionsForRightHandSide","isInDiffRightEditorKey","_b","find","revertChange","stopPropagation","originalRange","originalContent","newRange","eol","setStartPosition","setEndPosition","insertAt","fromPositions","editorWidgetOptions","removeDiffEditor","window","clearTimeout","_cleanViewZonesAndDecorations","IDiffEditor","_newOptions","changed","beginUpdateDecorations","beginUpdateDecorationsSoon","_beginUpdateDecorations","setEnableSplitViewResizing","_diffNavigator","DiffNavigator","alwaysRevealFirst","findResultLoop","loop","diffEditorState","observe","_doLayout","_getReviewHeight","getHeight","reviewHeight","freeSpace","ENTIRE_DIFF_OVERVIEW_WIDTH","setLayout","setTimeout","UPDATE_DIFF_DECORATIONS_DELAY","_equals","currentOriginalModel","currentModifiedModel","currentToken","diffLimit","canSyncModelForDiff","bufferTextLength","maxComputationTimeMs","changes2","m","innerChanges","endLineNumberExclusive","modifiedRange","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","error","foreignOriginal","foreignModified","diffDecorations","getEditorsDiffDecorations","_adjustOptionsForSubEditor","clonedOptions","vertical","folding","codeLens","fixedOverflowWidgets","minimap","wordWrapOverride1","wordWrapOverride2","originalAriaLabel","_updateAriaLabel","dropIntoEditor","extraEditorClassName","replaceAll","modifiedAriaLabel","revealHorizontalRightPadding","EditorOptions","defaultValue","verticalHasArrows","getWidth","splitPoint","_computeOverviewViewport","computedAvailableSize","computedRepresentableSize","computedRatio","relayoutEditors","newStrategy","_boundarySashes","setBoundarySashes","_getLineChangeAtOrBeforeLineNumber","startLineNumberExtractor","mid","midStart","midEnd","_getEquivalentLineForOriginalLineNumber","originalEquivalentLineNumber","modifiedEquivalentLineNumber","lineChangeOriginalLength","lineChangeModifiedLength","_getEquivalentLineForModifiedLineNumber","getDiffLineInformationForOriginal","equivalentLineNumber","getDiffLineInformationForModified","IClipboardService","IContextMenuService","IEditorProgressService","DiffEditorWidgetStyle","dataSource","_dataSource","_insertColor","_removeColor","newInsertColor","diffOverviewRulerInserted","diffInserted","defaultInsertColor","transparent","newRemoveColor","diffOverviewRulerRemoved","diffRemoved","defaultRemoveColor","hasChanges","originalWhitespaces","modifiedWhitespaces","sort","_getViewZones","originalDecorations","_getOriginalEditorDecorations","modifiedDecorations","_getModifiedEditorDecorations","_sashes","ForeignViewZonesIterator","_source","_index","advance","ViewZonesComputer","_lineChanges","_originalForeignVZ","_modifiedForeignVZ","_getViewLineCount","getViewRange","getViewZones","originalLineHeight","modifiedLineHeight","originalHasWrapping","wrappingColumn","modifiedHasWrapping","hasWrapping","originalCoordinatesConverter","modifiedCoordinatesConverter","originalEndEquivalentLineNumber","modifiedEndEquivalentLineNumber","sortMyViewZones","addAndCombineIfPossible","destination","item","lastItem","heightInLines","modifiedForeignVZ","originalForeignVZ","lastOriginalLineNumber","lastModifiedLineNumber","stepOriginal","stepModified","originalViewLineCount","getModelLineViewLineCount","modifiedViewLineCount","viewZoneLineNumber","_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion","isChangeOrInsert","_produceOriginalFromDiff","isChangeOrDelete","_produceModifiedFromDiff","stepOriginalIndex","stepModifiedIndex","originalDelta","modifiedDelta","shouldNotShrink","_ensureDomNodes","createFakeLinesDiv","createDecoration","DECORATIONS","arrowRevertChange","glyphMarginHoverMessage","MarkdownString","isTrusted","supportThemeIcons","appendMarkdown","glyphMarginClassName","arrowRight","charDelete","charDeleteWholeLine","isWholeLine","charInsert","charInsertWholeLine","lineInsert","marginClassName","lineInsertWithSign","linesDecorationsClassName","lineDelete","lineDeleteWithSign","lineDeleteMargin","defaultSashRatio","_disableSash","_defaultRatio","_sashRatio","_sashPosition","_startSashPosition","_sash","Sash","orientation","state","onDidStart","_onSashDragStart","_onSashDrag","onDidEnd","_onSashDragEnd","onDidReset","_onSashReset","defaultRatio","newDisableSash","sashRatio","sashPosition","midPoint","MINIMUM_EDITOR_WIDTH","currentX","startX","getVerticalSashTop","sash","getVerticalSashLeft","getVerticalSashHeight","sashes","orthogonalEndSash","bottom","SideBySideViewZonesComputer","overviewZoneColor","originalViewModel","OverviewRulerZone","charChange","isCharChangeOrDelete","getLineFirstNonWhitespaceColumn","getLineLastNonWhitespaceColumn","modifiedViewModel","createViewZoneMarginArrow","isCharChangeOrInsert","_decorationsLeft","decorationsLeft","InlineViewZonesComputer","zoneIndex","zone","zoneHeightInLines","_originalModel","_renderIndicators","_pendingLineChange","_pendingViewZones","_lineBreaksComputer","createLineBreaksComputer","_finalize","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","minWidthInPx","addRequest","modifiedEditorOptions","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","lineDecorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineBreaks","finalize","lineBreakIndex","InlineDecoration","hasCharChanges","maxCharsPerLine","renderedLineCount","tokenization","getLineTokens","lineBreakData","actualDecorations","LineDecoration","lastBreakOffset","breakOffset","breakOffsets","viewLineTokens","sliceAndInflate","viewLineContent","substring","_renderOriginalLine","extractWrapped","marginDomNode2","afterColumn","trustedhtml","output","marginElement","characterMapping","getHorizontalOffset","arrow","$","lineCount","defaults","validateBooleanOption","clampedFloat","clampedInt","validateStringSetOption","diffDiagonalFillColor","diffDiagonalFill","defaultOptions","followsCaret","ignoreCharChanges","_accessibilityService","_onDidUpdate","objects","disposed","nextIdx","ignoreSelectionChange","revealFirst","_onDiffUpdated","_updateAccessibilityState","_init","forEach","rhs","compareRangesUsingStarts","_initIdx","fwd","found","isBeforeOrEqual","_move","canNavigate","info","jumpToChange","insertedOrModified","l","diffLineModified","codeEditor","isScreenReaderOptimized","Number","MAX_VALUE","canNavigateNext","previous","canNavigatePrevious","canNavigateLoop","EmbeddedCodeEditorWidget","parentEditor","_parentEditor","_overwriteOptions","_onParentConfigurationChanged","getParentEditor"],"sourceRoot":""}