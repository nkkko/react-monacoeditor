{"version":3,"file":"static/js/refractor-vendor.914a1695.5f3d3233.js","mappings":"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ET,CAEEF,QAAS,iBACTC,YAAY,EACZC,MAAO,aAGX,cAAe,CACbF,QAAS,0BACTC,YAAY,GAiBdW,OAAQ,CACNZ,QAAS,qBACTa,QAAQ,EACRV,OAAQ6D,IAGRG,EAAS,SAAUC,GACrB,OAAQA,EAAM,IAAIC,QAAQ,4BAA6B,OACzD,EACIC,EAAmB,SAAUC,GAC/B,OAAO,IAAIC,OAAO,aAAeD,EAAIE,IAAIN,GAAQO,KAAK,KAAO,aAC/D,EACIC,EAAW,CACb,iBAAkB,CAChB,KACA,QACA,QACA,OACA,UACA,MACA,WACA,kBACA,MACA,OACA,YACA,aACA,OACA,WACA,OACA,OACA,QACA,WACA,OACA,QACA,OACA,MACA,IACA,IACA,QACA,QACA,QACA,OACA,kBACA,MACA,SACA,MACA,QACA,OACA,QACA,SACA,OACA,UACA,UACA,OACA,UACA,MACA,gBACA,WACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,UACA,YACA,OACA,QACA,OACA,SACA,gBACA,SACA,QACA,YACA,WACA,oBACA,kBACA,OACA,YACA,MACA,QACA,MACA,QACA,MACA,iBACA,WAEF,uBAAwB,CAEtB,UACA,YACA,YACA,KACA,SACA,MACA,IACA,WACA,KACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,UACA,gBACA,oBACA,YACA,UACA,mBACA,KACA,WAEA,IACA,KACA,MAEF,oBAAqB,CACnB,aACA,WACA,SACA,mBACA,SACA,aACA,aACA,YACA,mBACA,kBACA,WACA,aACA,OACA,WACA,UACA,aACA,YACA,WACA,OACA,OACA,MACA,WACA,UACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,oBACA,aACA,cACA,OACA,SACA,gBACA,oBACA,gCACA,iCACA,YACA,UACA,WACA,SACA,aACA,aACA,UACA,SACA,OACA,eACA,eACA,QACA,OACA,SACA,YACA,UACA,QACA,WACA,cACA,WACA,QACA,YACA,aACA,aACA,qBACA,SACA,SACA,WACA,eACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,OACA,aACA,WACA,YACA,MACA,aACA,UACA,aACA,SACA,cACA,YACA,OACA,YACA,SACA,YACA,iBACA,UACA,eACA,UACA,gBACA,eACA,YACA,mBACA,UACA,SACA,WACA,OACA,aACA,oBACA,YACA,UACA,UACA,YACA,WACA,WACA,aACA,OACA,cACA,iBACA,QACA,UACA,YACA,gBACA,cACA,oBACA,MACA,UACA,OACA,SACA,OACA,sBACA,aACA,aACA,mBACA,UACA,cACA,SACA,aACA,WACA,kBACA,OACA,OACA,QACA,QACA,QACA,YACA,SACA,eACA,eACA,WACA,WACA,MACA,aACA,YACA,WACA,QACA,oBACA,eACA,OACA,cACA,QACA,UACA,UACA,OACA,cACA,SACA,OACA,gBACA,YACA,eAEF,eAAgB,CACd,UACA,kBACA,MACA,cACA,iBACA,aACA,UACA,eACA,UACA,WACA,cACA,MACA,IACA,IACA,cACA,IACA,MACA,IACA,KACA,SACA,cACA,wBACA,OACA,IACA,OACA,IACA,WACA,SACA,cACA,KACA,QACA,aACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,WACA,KACA,iBACA,KACA,MACA,UACA,aACA,KACA,KACA,MACA,QACA,WACA,SACA,KACA,UACA,UACA,MACA,SACA,KACA,SACA,QACA,OACA,WACA,aACA,UACA,WACA,OACA,YACA,cACA,QACA,MACA,iBACA,YACA,yBACA,aACA,QACA,aACA,QACA,UACA,MACA,SACA,wBACA,MACA,OACA,KACA,OACA,WACA,QACA,YACA,cAKJC,OAAOC,KAAKF,GAAUtC,SAAQ,SAAUyC,GACtChB,EAAOgB,GAAG9E,QAAUsE,EAAiBK,EAASG,GAChD,IAiOAhB,EAAOI,YAAYlE,QAAUsE,EAhOX,CAEhB,MACA,QACA,OACA,MACA,OACA,QACA,QACA,OACA,QACA,UACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,SACA,KACA,UACA,YACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,QACA,UACA,KACA,QACA,OACA,SACA,aACA,aACA,WACA,QACA,UACA,OACA,KACA,OACA,SACA,QACA,OACA,SACA,MACA,OACA,SACA,MACA,WACA,YAEA,iBACA,kBACA,SACA,YACA,QACA,YACA,YACA,WACA,cACA,UACA,YACA,gBACA,mBACA,SACA,MACA,UACA,cACA,aACA,SACA,cACA,OACA,eACA,YACA,UACA,eACA,eACA,aACA,kBACA,QACA,aACA,SACA,eACA,YACA,eACA,WACA,SACA,WACA,aACA,OACA,YACA,gBACA,eACA,OACA,UACA,UACA,YACA,gBACA,iBACA,kBACA,gBACA,UACA,OACA,YACA,cACA,UACA,cACA,aACA,OACA,aACA,iBACA,aACA,OACA,eACA,cACA,WACA,gBACA,YACA,UACA,QACA,aACA,QACA,OACA,aACA,UACA,aACA,aACA,QACA,OACA,YACA,iBACA,YAEA,UACA,eACA,cACA,iBACA,YACA,oBACA,kBACA,QACA,iBACA,eACA,gBAEA,kBACA,cACA,gBACA,gBACA,kBACA,cAEA,OACA,UACA,YACA,YACA,UACA,eACA,iBACA,aACA,OACA,SACA,cACA,qBACA,SACA,mBAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,gBACA,cACA,iBACA,cACA,eACA,aACA,cACA,WACA,iBACA,oBACA,cACA,qBACA,WACA,eACA,mBACA,oBACA,iBACA,UACA,iBACA,iBACA,cACA,SACA,gBACA,eACA,eACA,aACA,aACA,UACA,oBACA,eACA,YACA,cACA,wBACA,oBAKF1E,EAAMC,UAAUiE,OAASA,CAC1B,CAh6BA,CAg6BElE,EACL,C,gCAt6BAkE,EAAOrD,YAAc,SACrBqD,EAAOpD,QAAU,E,wBCGF,SAASqE,EAAOnF,IAC5B,SAAWA,GAMVA,EAAMC,UAAiB,MAAI,CACzBC,QAAS,CACPE,QAAS,aAEXY,OAAQ,CACNZ,QAAS,UACTa,QAAQ,GAEV,iBAAkB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yBACTC,YAAY,GAEd,sBAEFogB,MAAO,CACLrgB,QACE,2xCACFE,MAAO,YAETwC,QACE,kVACF3B,QACE,sbACFuE,KAAM,CACJtF,QACE,6GACFE,MAAO,YAET+C,SAAU,CACRjD,QACE,+MACFC,YAAY,GAGlB,C,gCAjGAkgB,EAAS1f,YAAc,WACvB0f,EAASzf,QAAU,E,wBCGJ,SAAS4f,EAAM1gB,GAC5BA,EAAMC,UAAUygB,MAAQ,CACtBxgB,QAAS,OACTiB,QACE,s0BACFiH,UAAW,CACThI,QAAS,cACTE,MAAO,YAET+C,SAAU,aACVhC,OAAQ,gBACRZ,SAAU,mBACVC,YAAa,wBAEjB,C,gCAlBAggB,EAAM7f,YAAc,QACpB6f,EAAM5f,QAAU,E,uECID,SAAS6f,EAAQ3gB,GAC9BA,EAAMuB,SAASC,EAAAA,GACd,SAAWxB,GACV,IAAI4gB,EAAY,CAEd,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,UACA,QACA,QACA,cACA,OACA,SACA,QACA,SACA,iBACA,aACA,QACA,cACA,OACA,aACA,QACA,gBACA,cACA,gBACA,cACA,WACA,aACA,QACA,SAEA,eACA,OACA,OACA,OACA,OACA,UACA,OACA,eACA,SACA,YACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,OAEA,aACA,UACA,cACA,aACA,SACA,aACA,SACA,WACA,eACA,SACA,cACA,SACA,qBACA,gBACA,UACA,SACA,SACA,OACA,kBACA,WACA,UACA,eACA,eACA,UACA,OACA,QACA,QACA,eACA,aACA,SACA,UACA,mBAEA,OACA,eACA,QACA,SACA,OACA,YACA,mBACA,OACA,kBACA,eACA,iBACA,QACA,SACA,QACA,SACA,SACA,OACA,cACA,YACA,QACA,OACA,UACA,gBACA,QACA,WACA,OACA,iBACA,eACA,kBACA,gBACA,cACA,aACA,aACA,oBACA,UACA,MACA,OACA,UACA,SACA,SACA,YACA,MACA,OACA,QACA,UACA,MACA,gBACA,gBACA,aACA,WACA,YACA,gBACA,WACA,eACA,QACA,QACA,OACA,WACA,MACA,OACA,SACA,MACA,OACA,SACA,OACA,OACA,gBACA,QACA,OACA,eACA,UACA,OACA,SACA,YACA,MACA,OACA,iBACA,MACA,OACA,QACA,oBACA,SACA,UACA,aACA,gBACA,cACA,cACA,cACA,gBACA,SACA,SACA,UACA,iBACA,aACA,mBACA,eACA,YACA,QACA,OACA,SACA,SACA,QACA,aACA,cACA,cACA,eACA,YACA,UACA,eACA,YACA,YACA,OACA,UACA,OACA,UACA,UACA,aACA,YACA,SACA,UACA,cACA,YACA,WACA,WACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,WACA,YACA,gBACA,aACA,YACA,QACA,cACA,YACA,cAEA,WACA,WACA,QACA,OACA,aACA,OACA,WACA,SACA,aACA,eACA,YAmBEC,EAAkB,OAHtBD,EAAYA,EAAU/b,KAAI,SAAUpE,GAClC,OAAOA,EAASgE,QAAQ,IAAK,MAC/B,KACwCK,KAAK,KAAO,OACpD9E,EAAMC,UAAU0gB,QAAU3gB,EAAMC,UAAUqF,OAAO,aAAc,CAAC,GAChEtF,EAAMC,UAAUsF,aAAa,UAAW,SAAU,CAChDqB,SAAU,CACRxG,QACE,oHACFa,QAAQ,EACRV,OAAQ,CACNY,QAASyD,OAAO,YAAcic,EAAkB,iBAItD7gB,EAAMC,UAAU0gB,QAAQ3f,OAAOT,OAAS,CACtCwY,IAAK,CAEH3Y,QACE,yEACFa,QAAQ,GAEV6P,OAAQ,CAEN1Q,QACE,8EACFa,QAAQ,IAGZjB,EAAMC,UAAUsF,aAAa,UAAW,WAAY,CAClDzC,QAAS,CACP1C,QAASwE,OAAO,SA7CG,CACrB,WACA,OACA,UACA,QACA,YACA,aACA,gBACA,SACA,SACA,SACA,UACA,QAiC8CE,KAAK,KAAO,QACxDxE,MAAO,YAGZ,CAtSA,CAsSEN,EACL,CA7SA2gB,EAAQ9f,YAAc,UACtB8f,EAAQ7f,QAAU,E,wBCEH,SAASggB,EAAO9gB,GAC7BA,EAAMC,UAAU6gB,OAAS,CACvB5gB,QAAS,CACPE,QAAS,6BACTa,QAAQ,GAEVD,OAAQ,CACNZ,QAAS,cACTa,QAAQ,GAEV+E,aAAc,CACZ5F,QAAS,gBACTC,YAAY,EACZY,QAAQ,EACRX,MAAO,YAETkC,SAAU,cACV,YAAa,CACXpC,QAAS,WACTE,MAAO,cAETe,OAAQ,CACNjB,QACE,qEACFC,YAAY,GAEdc,QACE,uXACFV,SACE,gFACFC,YAAa,eAEjB,C,gCApCAogB,EAAOjgB,YAAc,SACrBigB,EAAOhgB,QAAU,E,wBCGF,SAASigB,EAAW/gB,GACjCA,EAAMC,UAAU8gB,WAAa,CAC3B7gB,QAAS,OACTc,OAAQ,CACN,CACEZ,QAAS,iCACTa,QAAQ,GAEV,CACEb,QAAS,UACTa,QAAQ,EACRV,OAAQ,CACNoC,cAAe,CACbvC,QAAS,cACTG,OAAQ,CACNwgB,WAAY,CACV3gB,QAAS,sBACTC,YAAY,EACZE,OAAQ,MAGV,4BAA6B,CAC3BH,QAAS,SACTE,MAAO,oBAOnB,aAAc,CACZ,CACEF,QAAS,iCACTC,YAAY,GAGd,cAEFc,QACE,kJACFkC,SAAU,SACVuD,SAAU,CACRxG,QAAS,gCACTC,YAAY,GAEdmC,SAAU,CACRpC,QACE,27BACFG,OAAQ,CACNG,YAAa,OAGjBU,QAAS,qBACTC,OACE,6FACFZ,SACE,2EACFC,YAAa,iBAEfV,EAAMC,UAAU8gB,WAAW/f,OAAO,GAAGT,OAAOoC,cAAcpC,OAAOwgB,WAAWxgB,OAC1EP,EAAMC,UAAU8gB,WAClB/gB,EAAMC,UAAU+gB,KAAOhhB,EAAMC,UAAU8gB,UACzC,C,gCAlEAA,EAAWlgB,YAAc,aACzBkgB,EAAWjgB,QAAU,CAAC,O,wBCGP,SAASmgB,EAAKjhB,GAG3BA,EAAMC,UAAUghB,KAAO,CACrB/gB,QAAS,CACPE,QAAS,8BACTa,QAAQ,GAEVD,OAAQ,CACNZ,QAAS,yCACTa,QAAQ,GAEV8Y,WAAY,CACV3Z,QAAS,4BACTa,QAAQ,GAEVmH,UAAW,WAEXjH,QACE,wuCACFqB,SAAU,wBACVpB,QAAS,sBACTC,OAAQ,6DACRZ,SACE,yIACFC,YAAa,gBAEjB,C,gCA/BAugB,EAAKpgB,YAAc,OACnBogB,EAAKngB,QAAU,E,uECIA,SAASogB,EAAKlhB,GAC3BA,EAAMuB,SAASC,EAAAA,GACfxB,EAAMC,UAAUihB,KAAOlhB,EAAMC,UAAUqF,OAAO,aAAc,CAE1DnE,QACE,oXAEJnB,EAAMC,UAAUsF,aAAa,OAAQ,WAAY,CAE/CW,WAAY,CACV9F,QAAS,QACTE,MAAO,cAGXN,EAAMC,UAAUkhB,MAAQnhB,EAAMC,UAAUihB,IAC1C,CAnBAA,EAAKrgB,YAAc,OACnBqgB,EAAKpgB,QAAU,CAAC,Q","sources":["../node_modules/refractor/lang/editorconfig.js","../node_modules/refractor/lang/eiffel.js","../node_modules/refractor/lang/ejs.js","../node_modules/refractor/lang/elixir.js","../node_modules/refractor/lang/elm.js","../node_modules/refractor/lang/erb.js","../node_modules/refractor/lang/erlang.js","../node_modules/refractor/lang/etlua.js","../node_modules/refractor/lang/excel-formula.js","../node_modules/refractor/lang/factor.js","../node_modules/refractor/lang/false.js","../node_modules/refractor/lang/firestore-security-rules.js","../node_modules/refractor/lang/flow.js","../node_modules/refractor/lang/fortran.js","../node_modules/refractor/lang/fsharp.js","../node_modules/refractor/lang/ftl.js","../node_modules/refractor/lang/gap.js","../node_modules/refractor/lang/gcode.js","../node_modules/refractor/lang/gdscript.js","../node_modules/refractor/lang/gedcom.js","../node_modules/refractor/lang/gettext.js","../node_modules/refractor/lang/gherkin.js","../node_modules/refractor/lang/git.js","../node_modules/refractor/lang/glsl.js","../node_modules/refractor/lang/gml.js","../node_modules/refractor/lang/gn.js","../node_modules/refractor/lang/go-module.js","../node_modules/refractor/lang/go.js","../node_modules/refractor/lang/gradle.js","../node_modules/refractor/lang/graphql.js","../node_modules/refractor/lang/groovy.js","../node_modules/refractor/lang/haml.js","../node_modules/refractor/lang/handlebars.js","../node_modules/refractor/lang/haskell.js","../node_modules/refractor/lang/haxe.js","../node_modules/refractor/lang/hcl.js","../node_modules/refractor/lang/hlsl.js","../node_modules/refractor/lang/hoon.js","../node_modules/refractor/lang/hpkp.js","../node_modules/refractor/lang/hsts.js","../node_modules/refractor/lang/http.js","../node_modules/refractor/lang/ichigojam.js","../node_modules/refractor/lang/icon.js","../node_modules/refractor/lang/icu-message-format.js","../node_modules/refractor/lang/idris.js","../node_modules/refractor/lang/iecst.js","../node_modules/refractor/lang/ignore.js","../node_modules/refractor/lang/inform7.js","../node_modules/refractor/lang/ini.js","../node_modules/refractor/lang/io.js","../node_modules/refractor/lang/j.js","../node_modules/refractor/lang/java.js","../node_modules/refractor/lang/javadoc.js","../node_modules/refractor/lang/javadoclike.js","../node_modules/refractor/lang/javascript.js","../node_modules/refractor/lang/javastacktrace.js","../node_modules/refractor/lang/jexl.js","../node_modules/refractor/lang/jolie.js","../node_modules/refractor/lang/jq.js","../node_modules/refractor/lang/js-extras.js","../node_modules/refractor/lang/js-templates.js","../node_modules/refractor/lang/jsdoc.js","../node_modules/refractor/lang/json.js","../node_modules/refractor/lang/json5.js","../node_modules/refractor/lang/jsonp.js","../node_modules/refractor/lang/jsstacktrace.js","../node_modules/refractor/lang/jsx.js","../node_modules/refractor/lang/julia.js","../node_modules/refractor/lang/keepalived.js","../node_modules/refractor/lang/keyman.js","../node_modules/refractor/lang/kotlin.js","../node_modules/refractor/lang/kumir.js","../node_modules/refractor/lang/kusto.js","../node_modules/refractor/lang/latex.js","../node_modules/refractor/lang/latte.js","../node_modules/refractor/lang/less.js","../node_modules/refractor/lang/lilypond.js","../node_modules/refractor/lang/linker-script.js","../node_modules/refractor/lang/liquid.js","../node_modules/refractor/lang/lisp.js","../node_modules/refractor/lang/livescript.js","../node_modules/refractor/lang/llvm.js","../node_modules/refractor/lang/log.js","../node_modules/refractor/lang/lolcode.js","../node_modules/refractor/lang/lua.js","../node_modules/refractor/lang/magma.js","../node_modules/refractor/lang/makefile.js","../node_modules/refractor/lang/markdown.js","../node_modules/refractor/lang/markup-templating.js","../node_modules/refractor/lang/markup.js","../node_modules/refractor/lang/mata.js","../node_modules/refractor/lang/matlab.js","../node_modules/refractor/lang/maxscript.js","../node_modules/refractor/lang/mel.js","../node_modules/refractor/lang/mermaid.js","../node_modules/refractor/lang/metafont.js","../node_modules/refractor/lang/mizar.js","../node_modules/refractor/lang/mongodb.js","../node_modules/refractor/lang/monkey.js","../node_modules/refractor/lang/moonscript.js","../node_modules/refractor/lang/n1ql.js","../node_modules/refractor/lang/n4js.js"],"sourcesContent":["// @ts-nocheck\neditorconfig.displayName = 'editorconfig'\neditorconfig.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function editorconfig(Prism) {\n  Prism.languages.editorconfig = {\n    // https://editorconfig-specification.readthedocs.io\n    comment: /[;#].*/,\n    section: {\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\n      lookbehind: true,\n      alias: 'selector',\n      inside: {\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n        // Escape special characters with '\\\\'\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\n        punctuation: /[\\[\\]{},]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /=.*/,\n      alias: 'attr-value',\n      inside: {\n        punctuation: /^=/\n      }\n    }\n  }\n}\n","// @ts-nocheck\neiffel.displayName = 'eiffel'\neiffel.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      },\n      // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      },\n      // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n      // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nimport refractorMarkupTemplating from './markup-templating.js'\nejs.displayName = 'ejs'\nejs.aliases = ['eta']\n\n/** @type {import('../core.js').Syntax} */\nexport default function ejs(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.ejs = {\n      delimiter: {\n        pattern: /^<%[-_=]?|[-_]?%>$/,\n        alias: 'punctuation'\n      },\n      comment: /^#[\\s\\S]*/,\n      'language-javascript': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.javascript\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ejs',\n        ejsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\n    })\n    Prism.languages.eta = Prism.languages.ejs\n  })(Prism)\n}\n","// @ts-nocheck\nelixir.displayName = 'elixir'\nelixir.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function elixir(Prism) {\n  Prism.languages.elixir = {\n    doc: {\n      pattern:\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n      inside: {\n        attribute: /^@\\w+/,\n        string: /['\"][\\s\\S]+/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern:\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern:\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w*\\b/,\n      alias: 'class-name'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\b\\w+\\??:(?!:)/,\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword:\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","// @ts-nocheck\nelm.displayName = 'elm'\nelm.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern:\n        /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|exposing|import)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nimport refractorRuby from './ruby.js'\nerb.displayName = 'erb'\nerb.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function erb(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.erb = {\n      delimiter: {\n        pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      ruby: {\n        pattern: /\\s*\\S[\\s\\S]*/,\n        alias: 'language-ruby',\n        inside: Prism.languages.ruby\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern =\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nerlang.displayName = 'erlang'\nerlang.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","// @ts-nocheck\nimport refractorLua from './lua.js'\nimport refractorMarkupTemplating from './markup-templating.js'\netlua.displayName = 'etlua'\netlua.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nexcelFormula.displayName = 'excel-formula'\nexcelFormula.aliases = ['xls', 'xlsx']\n\n/** @type {import('../core.js').Syntax} */\nexport default function excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'builtin'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'selector',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'selector'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n","// @ts-nocheck\nfactor.displayName = 'factor'\nfactor.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function factor(Prism) {\n  ;(function (Prism) {\n    var comment_inside = {\n      function:\n        /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n    }\n    var string_inside = {\n      number: /\\\\[^\\s']|%\\w/\n    }\n    var factor = {\n      comment: [\n        {\n          // ! single-line exclamation point comments with whitespace after/around the !\n          pattern: /(^|\\s)(?:! .*|!$)/,\n          lookbehind: true,\n          inside: comment_inside\n        } /* from basis/multiline: */,\n        {\n          // /* comment */, /* comment*/\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        },\n        {\n          // ![[ comment ]] , ![===[ comment]===]\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        }\n      ],\n      number: [\n        {\n          // basic base 10 integers 9, -9\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // positive mixed numbers 23+1/5 +23+1/5\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // negative mixed numbers -23-1/5\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n          pattern:\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/\n          pattern:\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n          lookbehind: true\n        }\n      ],\n      // R/ regexp?\\/\\\\/\n      regexp: {\n        pattern:\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'number',\n        inside: {\n          variable: /\\\\\\S/,\n          keyword: /[+?*\\[\\]^$(){}.|]/,\n          operator: {\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n            lookbehind: true\n          }\n        }\n      },\n      boolean: {\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\n        lookbehind: true\n      },\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n      'custom-string': {\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          number: /\\\\\\S|%\\w|\\//\n        }\n      },\n      'multiline-string': [\n        {\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            number: string_inside.number,\n            // trailing semicolon on its own line\n            'semicolon-or-setlocal': {\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n              lookbehind: true,\n              alias: 'function'\n            }\n          }\n        },\n        {\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        },\n        {\n          // [[ string ]], [==[ string]==]\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        }\n      ],\n      'special-using': {\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          // this is essentially a regex for vocab names, which i don't want to specify\n          // but the USING: gets picked up as a vocab name\n          string: {\n            pattern: /(\\s)[^:\\s]+/,\n            lookbehind: true\n          }\n        }\n      },\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/\n\n      // current solution is not great\n      'stack-effect-delimiter': [\n        {\n          // opening parenthesis\n          pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // middle --\n          pattern: /(\\s)--(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing parenthesis\n          pattern: /(\\s)\\)(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      combinators: {\n        pattern: null,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'kernel-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'sequences-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'math-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'constructor-word': {\n        // <array> but not <=>\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'other-builtin-syntax': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/\n      'conventionally-named-word': {\n        pattern:\n          /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'colon-syntax': {\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'semicolon-or-setlocal': {\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n      'curly-brace-literal-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\}(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n      'quotation-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)\\[(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\](?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      'normal-word': {\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n        lookbehind: true\n      },\n      /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/\n      string: {\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n        greedy: true,\n        inside: string_inside\n      }\n    }\n    var escape = function (str) {\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\n    }\n    var arrToWordsRegExp = function (arr) {\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\n    }\n    var builtins = {\n      'kernel-builtin': [\n        'or',\n        '2nipd',\n        '4drop',\n        'tuck',\n        'wrapper',\n        'nip',\n        'wrapper?',\n        'callstack>array',\n        'die',\n        'dupd',\n        'callstack',\n        'callstack?',\n        '3dup',\n        'hashcode',\n        'pick',\n        '4nip',\n        'build',\n        '>boolean',\n        'nipd',\n        'clone',\n        '5nip',\n        'eq?',\n        '?',\n        '=',\n        'swapd',\n        '2over',\n        'clear',\n        '2dup',\n        'get-retainstack',\n        'not',\n        'tuple?',\n        'dup',\n        '3nipd',\n        'call',\n        '-rotd',\n        'object',\n        'drop',\n        'assert=',\n        'assert?',\n        '-rot',\n        'execute',\n        'boa',\n        'get-callstack',\n        'curried?',\n        '3drop',\n        'pickd',\n        'overd',\n        'over',\n        'roll',\n        '3nip',\n        'swap',\n        'and',\n        '2nip',\n        'rotd',\n        'throw',\n        '(clone)',\n        'hashcode*',\n        'spin',\n        'reach',\n        '4dup',\n        'equal?',\n        'get-datastack',\n        'assert',\n        '2drop',\n        '<wrapper>',\n        'boolean?',\n        'identity-hashcode',\n        'identity-tuple?',\n        'null',\n        'composed?',\n        'new',\n        '5drop',\n        'rot',\n        '-roll',\n        'xor',\n        'identity-tuple',\n        'boolean'\n      ],\n      'other-builtin-syntax': [\n        // syntax\n        '=======',\n        'recursive',\n        'flushable',\n        '>>',\n        '<<<<<<',\n        'M\\\\',\n        'B',\n        'PRIVATE>',\n        '\\\\',\n        '======',\n        'final',\n        'inline',\n        'delimiter',\n        'deprecated',\n        '<PRIVATE',\n        '>>>>>>',\n        '<<<<<<<',\n        'parse-complex',\n        'malformed-complex',\n        'read-only',\n        '>>>>>>>',\n        'call-next-method',\n        '<<',\n        'foldable',\n        // literals\n        '$',\n        '$[',\n        '${'\n      ],\n      'sequences-builtin': [\n        'member-eq?',\n        'mismatch',\n        'append',\n        'assert-sequence=',\n        'longer',\n        'repetition',\n        'clone-like',\n        '3sequence',\n        'assert-sequence?',\n        'last-index-from',\n        'reversed',\n        'index-from',\n        'cut*',\n        'pad-tail',\n        'join-as',\n        'remove-eq!',\n        'concat-as',\n        'but-last',\n        'snip',\n        'nths',\n        'nth',\n        'sequence',\n        'longest',\n        'slice?',\n        '<slice>',\n        'remove-nth',\n        'tail-slice',\n        'empty?',\n        'tail*',\n        'member?',\n        'virtual-sequence?',\n        'set-length',\n        'drop-prefix',\n        'iota',\n        'unclip',\n        'bounds-error?',\n        'unclip-last-slice',\n        'non-negative-integer-expected',\n        'non-negative-integer-expected?',\n        'midpoint@',\n        'longer?',\n        '?set-nth',\n        '?first',\n        'rest-slice',\n        'prepend-as',\n        'prepend',\n        'fourth',\n        'sift',\n        'subseq-start',\n        'new-sequence',\n        '?last',\n        'like',\n        'first4',\n        '1sequence',\n        'reverse',\n        'slice',\n        'virtual@',\n        'repetition?',\n        'set-last',\n        'index',\n        '4sequence',\n        'max-length',\n        'set-second',\n        'immutable-sequence',\n        'first2',\n        'first3',\n        'supremum',\n        'unclip-slice',\n        'suffix!',\n        'insert-nth',\n        'tail',\n        '3append',\n        'short',\n        'suffix',\n        'concat',\n        'flip',\n        'immutable?',\n        'reverse!',\n        '2sequence',\n        'sum',\n        'delete-all',\n        'indices',\n        'snip-slice',\n        '<iota>',\n        'check-slice',\n        'sequence?',\n        'head',\n        'append-as',\n        'halves',\n        'sequence=',\n        'collapse-slice',\n        '?second',\n        'slice-error?',\n        'product',\n        'bounds-check?',\n        'bounds-check',\n        'immutable',\n        'virtual-exemplar',\n        'harvest',\n        'remove',\n        'pad-head',\n        'last',\n        'set-fourth',\n        'cartesian-product',\n        'remove-eq',\n        'shorten',\n        'shorter',\n        'reversed?',\n        'shorter?',\n        'shortest',\n        'head-slice',\n        'pop*',\n        'tail-slice*',\n        'but-last-slice',\n        'iota?',\n        'append!',\n        'cut-slice',\n        'new-resizable',\n        'head-slice*',\n        'sequence-hashcode',\n        'pop',\n        'set-nth',\n        '?nth',\n        'second',\n        'join',\n        'immutable-sequence?',\n        '<reversed>',\n        '3append-as',\n        'virtual-sequence',\n        'subseq?',\n        'remove-nth!',\n        'length',\n        'last-index',\n        'lengthen',\n        'assert-sequence',\n        'copy',\n        'move',\n        'third',\n        'first',\n        'tail?',\n        'set-first',\n        'prefix',\n        'bounds-error',\n        '<repetition>',\n        'exchange',\n        'surround',\n        'cut',\n        'min-length',\n        'set-third',\n        'push-all',\n        'head?',\n        'subseq-start-from',\n        'delete-slice',\n        'rest',\n        'sum-lengths',\n        'head*',\n        'infimum',\n        'remove!',\n        'glue',\n        'slice-error',\n        'subseq',\n        'push',\n        'replace-slice',\n        'subseq-as',\n        'unclip-last'\n      ],\n      'math-builtin': [\n        'number=',\n        'next-power-of-2',\n        '?1+',\n        'fp-special?',\n        'imaginary-part',\n        'float>bits',\n        'number?',\n        'fp-infinity?',\n        'bignum?',\n        'fp-snan?',\n        'denominator',\n        'gcd',\n        '*',\n        '+',\n        'fp-bitwise=',\n        '-',\n        'u>=',\n        '/',\n        '>=',\n        'bitand',\n        'power-of-2?',\n        'log2-expects-positive',\n        'neg?',\n        '<',\n        'log2',\n        '>',\n        'integer?',\n        'number',\n        'bits>double',\n        '2/',\n        'zero?',\n        'bits>float',\n        'float?',\n        'shift',\n        'ratio?',\n        'rect>',\n        'even?',\n        'ratio',\n        'fp-sign',\n        'bitnot',\n        '>fixnum',\n        'complex?',\n        '/i',\n        'integer>fixnum',\n        '/f',\n        'sgn',\n        '>bignum',\n        'next-float',\n        'u<',\n        'u>',\n        'mod',\n        'recip',\n        'rational',\n        '>float',\n        '2^',\n        'integer',\n        'fixnum?',\n        'neg',\n        'fixnum',\n        'sq',\n        'bignum',\n        '>rect',\n        'bit?',\n        'fp-qnan?',\n        'simple-gcd',\n        'complex',\n        '<fp-nan>',\n        'real',\n        '>fraction',\n        'double>bits',\n        'bitor',\n        'rem',\n        'fp-nan-payload',\n        'real-part',\n        'log2-expects-positive?',\n        'prev-float',\n        'align',\n        'unordered?',\n        'float',\n        'fp-nan?',\n        'abs',\n        'bitxor',\n        'integer>fixnum-strict',\n        'u<=',\n        'odd?',\n        '<=',\n        '/mod',\n        '>integer',\n        'real?',\n        'rational?',\n        'numerator'\n      ]\n      // that's all for now\n    }\n\n    Object.keys(builtins).forEach(function (k) {\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\n    })\n    var combinators = [\n      // kernel\n      '2bi',\n      'while',\n      '2tri',\n      'bi*',\n      '4dip',\n      'both?',\n      'same?',\n      'tri@',\n      'curry',\n      'prepose',\n      '3bi',\n      '?if',\n      'tri*',\n      '2keep',\n      '3keep',\n      'curried',\n      '2keepd',\n      'when',\n      '2bi*',\n      '2tri*',\n      '4keep',\n      'bi@',\n      'keepdd',\n      'do',\n      'unless*',\n      'tri-curry',\n      'if*',\n      'loop',\n      'bi-curry*',\n      'when*',\n      '2bi@',\n      '2tri@',\n      'with',\n      '2with',\n      'either?',\n      'bi',\n      'until',\n      '3dip',\n      '3curry',\n      'tri-curry*',\n      'tri-curry@',\n      'bi-curry',\n      'keepd',\n      'compose',\n      '2dip',\n      'if',\n      '3tri',\n      'unless',\n      'tuple',\n      'keep',\n      '2curry',\n      'tri',\n      'most',\n      'while*',\n      'dip',\n      'composed',\n      'bi-curry@',\n      // sequences\n      'find-last-from',\n      'trim-head-slice',\n      'map-as',\n      'each-from',\n      'none?',\n      'trim-tail',\n      'partition',\n      'if-empty',\n      'accumulate*',\n      'reject!',\n      'find-from',\n      'accumulate-as',\n      'collector-for-as',\n      'reject',\n      'map',\n      'map-sum',\n      'accumulate!',\n      '2each-from',\n      'follow',\n      'supremum-by',\n      'map!',\n      'unless-empty',\n      'collector',\n      'padding',\n      'reduce-index',\n      'replicate-as',\n      'infimum-by',\n      'trim-tail-slice',\n      'count',\n      'find-index',\n      'filter',\n      'accumulate*!',\n      'reject-as',\n      'map-integers',\n      'map-find',\n      'reduce',\n      'selector',\n      'interleave',\n      '2map',\n      'filter-as',\n      'binary-reduce',\n      'map-index-as',\n      'find',\n      'produce',\n      'filter!',\n      'replicate',\n      'cartesian-map',\n      'cartesian-each',\n      'find-index-from',\n      'map-find-last',\n      '3map-as',\n      '3map',\n      'find-last',\n      'selector-as',\n      '2map-as',\n      '2map-reduce',\n      'accumulate',\n      'each',\n      'each-index',\n      'accumulate*-as',\n      'when-empty',\n      'all?',\n      'collector-as',\n      'push-either',\n      'new-like',\n      'collector-for',\n      '2selector',\n      'push-if',\n      '2all?',\n      'map-reduce',\n      '3each',\n      'any?',\n      'trim-slice',\n      '2reduce',\n      'change-nth',\n      'produce-as',\n      '2each',\n      'trim',\n      'trim-head',\n      'cartesian-find',\n      'map-index',\n      // math\n      'if-zero',\n      'each-integer',\n      'unless-zero',\n      '(find-integer)',\n      'when-zero',\n      'find-last-integer',\n      '(all-integers?)',\n      'times',\n      '(each-integer)',\n      'find-integer',\n      'all-integers?',\n      // math.combinators\n      'unless-negative',\n      'if-positive',\n      'when-positive',\n      'when-negative',\n      'unless-positive',\n      'if-negative',\n      // combinators\n      'case',\n      '2cleave',\n      'cond>quot',\n      'case>quot',\n      '3cleave',\n      'wrong-values',\n      'to-fixed-point',\n      'alist>quot',\n      'cond',\n      'cleave',\n      'call-effect',\n      'recursive-hashcode',\n      'spread',\n      'deep-spread>quot',\n      // combinators.short-circuit\n      '2||',\n      '0||',\n      'n||',\n      '0&&',\n      '2&&',\n      '3||',\n      '1||',\n      '1&&',\n      'n&&',\n      '3&&',\n      // combinators.smart\n      'smart-unless*',\n      'keep-inputs',\n      'reduce-outputs',\n      'smart-when*',\n      'cleave>array',\n      'smart-with',\n      'smart-apply',\n      'smart-if',\n      'inputs/outputs',\n      'output>sequence-n',\n      'map-outputs',\n      'map-reduce-outputs',\n      'dropping',\n      'output>array',\n      'smart-map-reduce',\n      'smart-2map-reduce',\n      'output>array-n',\n      'nullary',\n      'input<sequence',\n      'append-outputs',\n      'drop-inputs',\n      'inputs',\n      'smart-2reduce',\n      'drop-outputs',\n      'smart-reduce',\n      'preserving',\n      'smart-when',\n      'outputs',\n      'append-outputs-as',\n      'smart-unless',\n      'smart-if*',\n      'sum-outputs',\n      'input<sequence-unsafe',\n      'output>sequence'\n      // tafn\n    ]\n\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\n    Prism.languages.factor = factor\n  })(Prism)\n}\n","// @ts-nocheck\n$false.displayName = 'false'\n$false.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nfirestoreSecurityRules.displayName = 'firestore-security-rules'\nfirestoreSecurityRules.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function firestoreSecurityRules(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\n    'clike',\n    {\n      comment: /\\/\\/.*/,\n      keyword:\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    }\n  )\n  delete Prism.languages['firestore-security-rules']['class-name']\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern:\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  })\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nflow.displayName = 'flow'\nflow.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function flow(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","// @ts-nocheck\nfortran.displayName = 'fortran'\nfortran.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i,\n      // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n      // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n      // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function fsharp(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n      /\\b0b[01]+(?:uy|y)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      greedy: true,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    }\n  })\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nftl.displayName = 'ftl'\nftl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\ngap.displayName = 'gap'\ngap.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","// @ts-nocheck\ngcode.displayName = 'gcode'\ngcode.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /(\\*)\\d+/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    // T0:0:0\n    punctuation: /[:*]/\n  }\n}\n","// @ts-nocheck\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","// @ts-nocheck\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    record: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'tag'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","// @ts-nocheck\ngettext.displayName = 'gettext'\ngettext.aliases = ['po']\n\n/** @type {import('../core.js').Syntax} */\nexport default function gettext(Prism) {\n  Prism.languages.gettext = {\n    comment: [\n      {\n        pattern: /# .*/,\n        greedy: true,\n        alias: 'translator-comment'\n      },\n      {\n        pattern: /#\\..*/,\n        greedy: true,\n        alias: 'extracted-comment'\n      },\n      {\n        pattern: /#:.*/,\n        greedy: true,\n        alias: 'reference-comment'\n      },\n      {\n        pattern: /#,.*/,\n        greedy: true,\n        alias: 'flag-comment'\n      },\n      {\n        pattern: /#\\|.*/,\n        greedy: true,\n        alias: 'previously-untranslated-comment'\n      },\n      {\n        pattern: /#.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\n    number: /\\b\\d+\\b/,\n    punctuation: /[\\[\\]]/\n  }\n  Prism.languages.po = Prism.languages.gettext\n}\n","// @ts-nocheck\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gherkin(Prism) {\n  ;(function (Prism) {\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[ \\t]*)@\\S*/m,\n        lookbehind: true\n      },\n      feature: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern:\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: RegExp(tableRow),\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern:\n          /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+>/,\n        alias: 'variable'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\ngit.displayName = 'git'\ngit.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\nglsl.displayName = 'glsl'\nglsl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function glsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword:\n      /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\n  })\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngml.displayName = 'gml'\ngml.aliases = ['gamemakerlanguage']\n\n/** @type {import('../core.js').Syntax} */\nexport default function gml(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\n    Prism.languages.extend('clike', {\n      keyword:\n        /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\n      number:\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n      operator:\n        /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\n      constant:\n        /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\n      variable:\n        /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\n    })\n}\n","// @ts-nocheck\ngn.displayName = 'gn'\ngn.aliases = ['gni']\n\n/** @type {import('../core.js').Syntax} */\nexport default function gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern:\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant:\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  }\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.gn\n  Prism.languages.gni = Prism.languages.gn\n}\n","// @ts-nocheck\ngoModule.displayName = 'go-module'\ngoModule.aliases = ['go-mod']\n\n/** @type {import('../core.js').Syntax} */\nexport default function goModule(Prism) {\n  // https://go.dev/ref/mod#go-mod-file-module\n\n  Prism.languages['go-mod'] = Prism.languages['go-module'] = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    version: {\n      pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    'go-version': {\n      pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    keyword: {\n      pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\n      lookbehind: true\n    },\n    operator: /=>/,\n    punctuation: /[()[\\],]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngo.displayName = 'go'\ngo.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function go(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n    number: [\n      // binary and octal integers\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n      // hexadecimal integers and floats\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      // decimal integers and floats\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n    ],\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n  })\n  Prism.languages.insertBefore('go', 'string', {\n    char: {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngradle.displayName = 'gradle'\ngradle.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gradle(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null\n        }\n      }\n    }\n    Prism.languages.gradle = Prism.languages.extend('clike', {\n      string: {\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:apply|def|dependencies|else|if|implementation|import|plugin|plugins|project|repositories|repository|sourceSets|tasks|val)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('gradle', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('gradle', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('gradle', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.gradle\n  })(Prism)\n}\n","// @ts-nocheck\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern:\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /\\b[A-Z]\\w*Input\\b/,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  }\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return\n    }\n\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n    var validTokens = env.tokens.filter(function (token) {\n      return (\n        typeof token !== 'string' &&\n        token.type !== 'comment' &&\n        token.type !== 'scalar'\n      )\n    })\n    var currentIndex = 0\n\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n    function getToken(offset) {\n      return validTokens[currentIndex + offset]\n    }\n\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n    function isTokenType(types, offset) {\n      offset = offset || 0\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset)\n        if (!token || token.type !== types[i]) {\n          return false\n        }\n      }\n      return true\n    }\n\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n    function findClosingBracket(open, close) {\n      var stackHeight = 1\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i]\n        var content = token.content\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++\n          } else if (close.test(content)) {\n            stackHeight--\n            if (stackHeight === 0) {\n              return i\n            }\n          }\n        }\n      }\n      return -1\n    }\n\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n    function addAlias(token, alias) {\n      var aliases = token.alias\n      if (!aliases) {\n        token.alias = aliases = []\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases]\n      }\n      aliases.push(alias)\n    }\n    for (; currentIndex < validTokens.length; ) {\n      var startToken = validTokens[currentIndex++]\n\n      // add special aliases for mutation tokens\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = []\n        if (\n          isTokenType(['definition-mutation', 'punctuation']) &&\n          getToken(1).content === '('\n        ) {\n          // definition\n\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\n          if (definitionEnd === -1) {\n            continue\n          }\n\n          // find all input variables\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0)\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input')\n              inputVariables.push(t.content)\n            }\n          }\n          currentIndex = definitionEnd + 1\n        }\n        if (\n          isTokenType(['punctuation', 'property-query']) &&\n          getToken(0).content === '{'\n        ) {\n          currentIndex++ // skip opening bracket\n\n          addAlias(getToken(0), 'property-mutation')\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\n            if (mutationEnd === -1) {\n              continue\n            }\n\n            // give references to input variables a special alias\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i]\n              if (\n                varToken.type === 'variable' &&\n                inputVariables.indexOf(varToken.content) >= 0\n              ) {\n                addAlias(varToken, 'variable-input')\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function groovy(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    }\n\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.groovy\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorRuby from './ruby.js'\nhaml.displayName = 'haml'\nhaml.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function haml(Prism) {\n  Prism.register(refractorRuby)\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n\n  ;(function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n\n      'multiline-comment': {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'symbol'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern:\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n              lookbehind: true,\n              inside: Prism.languages.ruby\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: Prism.languages.ruby\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          ruby: {\n            pattern: /[\\s\\S]+/,\n            inside: Prism.languages.ruby\n          }\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+'\n\n    // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', function () {\n              return filter.filter\n            })\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'symbol'\n            },\n            text: {\n              pattern: /[\\s\\S]+/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs', 'mustache']\n\n/** @type {import('../core.js').Syntax} */\nexport default function handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:false|true)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n    Prism.languages.mustache = Prism.languages.handlebars\n  })(Prism)\n}\n","// @ts-nocheck\nhaskell.displayName = 'haskell'\nhaskell.aliases = ['hs']\n\n/** @type {import('../core.js').Syntax} */\nexport default function haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern:\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n      lookbehind: true\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import|qualified)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    operator: [\n      {\n        // infix operator\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n        greedy: true\n      },\n      {\n        // function composition\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      },\n      // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      //\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n    ],\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    constant: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.hs = Prism.languages.haskell\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function haxe(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    string: {\n      // Strings can be multi-line\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    'class-name': [\n      {\n        pattern:\n          /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n        lookbehind: true\n      },\n      // based on naming convention\n      /\\b[A-Z]\\w*/\n    ],\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword:\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n      greedy: true\n    },\n    operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n  })\n  Prism.languages.insertBefore('haxe', 'string', {\n    'string-interpolation': {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{?|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.haxe\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n      greedy: true,\n      inside: {\n        'regex-flags': /\\b[a-z]+$/,\n        'regex-source': {\n          pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^~\\/|\\/$/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#(?:else|elseif|end|if)\\b.*/,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /@:?[\\w.]+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'important'\n    }\n  })\n}\n","// @ts-nocheck\nhcl.displayName = 'hcl'\nhcl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/,\n      // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","// @ts-nocheck\nhoon.displayName = 'hoon'\nhoon.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hoon(Prism) {\n  Prism.languages.hoon = {\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'/,\n      greedy: true\n    },\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","// @ts-nocheck\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","// @ts-nocheck\nhsts.displayName = 'hsts'\nhsts.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","// @ts-nocheck\nhttp.displayName = 'http'\nhttp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function http(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function headerValueOf(name) {\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\n    }\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[\\d.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      header: {\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n        inside: {\n          'header-value': [\n            {\n              pattern: headerValueOf(/Content-Security-Policy/.source),\n              lookbehind: true,\n              alias: ['csp', 'languages-csp'],\n              inside: Prism.languages.csp\n            },\n            {\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n              lookbehind: true,\n              alias: ['hpkp', 'languages-hpkp'],\n              inside: Prism.languages.hpkp\n            },\n            {\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\n              lookbehind: true,\n              alias: ['hsts', 'languages-hsts'],\n              inside: Prism.languages.hsts\n            },\n            {\n              pattern: headerValueOf(/[^:]+/.source),\n              lookbehind: true\n            }\n          ],\n          'header-name': {\n            pattern: /^[^:]+/,\n            alias: 'keyword'\n          },\n          punctuation: /^:/\n        }\n      }\n    }\n\n    // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css,\n      'text/plain': langs.plain\n    }\n\n    // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    }\n\n    // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(' +\n              /content-type:\\s*/.source +\n              pattern +\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\n              ')' +\n              // This is a little interesting:\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n              // the body does not start with a [\\w-] character (as headers do).\n              /[^ \\t\\w-][\\s\\S]*/.source,\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header', options)\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","// @ts-nocheck\nicon.displayName = 'icon'\nicon.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","// @ts-nocheck\nicuMessageFormat.displayName = 'icu-message-format'\nicuMessageFormat.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:few|many|one|other|two|zero)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorHaskell from './haskell.js'\nidris.displayName = 'idris'\nidris.aliases = ['idr']\n\n/** @type {import('../core.js').Syntax} */\nexport default function idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","// @ts-nocheck\niecst.displayName = 'iecst'\niecst.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: [\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n      /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n    ],\n    'class-name':\n      /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n    address: {\n      pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n      alias: 'symbol'\n    },\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n    operator:\n      /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    punctuation: /[()[\\].,;]/\n  }\n}\n","// @ts-nocheck\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\n\n/** @type {import('../core.js').Syntax} */\nexport default function ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","// @ts-nocheck\ninform7.displayName = 'inform7'\ninform7.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            }\n            // See rest below\n          }\n        }\n      }\n    },\n\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7\n  // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","// @ts-nocheck\nini.displayName = 'ini'\nini.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","// @ts-nocheck\nio.displayName = 'io'\nio.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function io(Prism) {\n  Prism.languages.io = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\nj.displayName = 'j'\nj.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function j(Prism) {\n  Prism.languages.j = {\n    comment: {\n      pattern: /\\bNB\\..*/,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njava.displayName = 'java'\njava.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function java(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/\n\n    // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source\n\n    // based on the java naming conventions\n    var className = {\n      pattern: RegExp(\n        /(^|[^\\w.])/.source +\n          classNamePrefix +\n          /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source\n      ),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [\n        className,\n        {\n          // variables, parameters, and constructor references\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            /(^|[^\\w.])/.source +\n              classNamePrefix +\n              /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/\n                .source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        },\n        {\n          // class names based on keyword\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/\n              .source +\n              classNamePrefix +\n              /[A-Z]\\w*\\b/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      },\n      constant: /\\b[A-Z][A-Z_\\d]+\\b/\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      import: [\n        {\n          pattern: RegExp(\n            /(\\bimport\\s+)/.source +\n              classNamePrefix +\n              /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source\n          ),\n          lookbehind: true,\n          inside: {\n            namespace: className.inside.namespace,\n            punctuation: /\\./,\n            operator: /\\*/,\n            'class-name': /\\w+/\n          }\n        },\n        {\n          pattern: RegExp(\n            /(\\bimport\\s+static\\s+)/.source +\n              classNamePrefix +\n              /(?:\\w+|\\*)(?=\\s*;)/.source\n          ),\n          lookbehind: true,\n          alias: 'static',\n          inside: {\n            namespace: className.inside.namespace,\n            static: /\\b\\w+$/,\n            punctuation: /\\./,\n            operator: /\\*/,\n            'class-name': /\\w+/\n          }\n        }\n      ],\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJava from './java.js'\nimport refractorJavadoclike from './javadoclike.js'\nimport refractorMarkup from './markup.js'\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n","// @ts-nocheck\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\n\n/** @type {import('../core.js').Syntax} */\nexport default function javascript(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: {\n      pattern: RegExp(\n        /(^|[^\\w$])/.source +\n          '(?:' +\n          // constant\n          (/NaN|Infinity/.source +\n            '|' +\n            // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source +\n            '|' +\n            // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n            '|' +\n            // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n            '|' +\n            // decimal bigint\n            /\\d+(?:_\\d+)*n/.source +\n            '|' +\n            // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n              .source) +\n          ')' +\n          /(?![\\w$])/.source\n      ),\n      lookbehind: true\n    },\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: RegExp(\n        // lookbehind\n        // eslint-disable-next-line regexp/no-dupe-characters-character-class\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n          // Regex pattern:\n          // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n          // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n          // with the only syntax, so we have to define 2 different regex patterns.\n          /\\//.source +\n          '(?:' +\n          /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/\n            .source +\n          '|' +\n          // `v` flag syntax. This supports 3 levels of nested character classes.\n          /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/\n            .source +\n          ')' +\n          // lookahead\n          /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/\n            .source\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'string-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    }\n  })\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'literal-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n      lookbehind: true,\n      alias: 'property'\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript')\n\n    // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","// @ts-nocheck\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern:\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+$/,\n            namespace: /\\b[a-z]\\w*\\b/,\n            punctuation: /\\./\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\b\\d+\\b/,\n                alias: 'number'\n              }\n            }\n          },\n          // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Native Method|Unknown Source)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","// @ts-nocheck\njexl.displayName = 'jexl'\njexl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jexl(Prism) {\n  Prism.languages.jexl = {\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    transform: {\n      pattern:\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n      alias: 'function',\n      lookbehind: true\n    },\n    function:\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\bin\\b/,\n    punctuation: /[{}[\\](),.]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njolie.displayName = 'jolie'\njolie.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jolie(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\n    punctuation: /[()[\\]{},;.:]/,\n    builtin:\n      /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\n  })\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    aggregates: {\n      pattern:\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        keyword: /\\bwith\\b/,\n        'class-name': /\\w+/,\n        punctuation: /,/\n      }\n    },\n    redirects: {\n      pattern:\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /,/,\n        'class-name': /\\w+/,\n        operator: /=>/\n      }\n    },\n    property: {\n      pattern:\n        /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\n    }\n  })\n}\n","// @ts-nocheck\njq.displayName = 'jq'\njq.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\n        /__/g,\n        function () {\n          return interpolation\n        }\n      )\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\njsExtras.displayName = 'js-extras'\njsExtras.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsExtras(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern:\n            /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern:\n          /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern:\n          /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    })\n\n    // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token]\n\n      // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      }\n\n      // keep in mind that we don't support arrays\n\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\njsTemplates.displayName = 'js-templates'\njsTemplates.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsTemplates(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var templateString = Prism.languages.javascript['template-string']\n\n    // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ),\n      // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\n      // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source),\n      // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:markdown|md)/.source),\n      // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ),\n      // sql`...`\n      createTemplate('sql', /\\bsql/.source),\n      // vanilla template string\n      templateString\n    ].filter(Boolean)\n\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      })\n\n      // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function (token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {\n              /* noop */\n            }\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('')\n\n      // 2. Tokenize the embedded code\n\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language)\n\n      // 3. Re-insert the interpolation\n\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */ token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJavadoclike from './javadoclike.js'\nimport refractorJavascript from './javascript.js'\nimport refractorTypescript from './typescript.js'\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorJavascript)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","// @ts-nocheck\njson.displayName = 'json'\njson.aliases = ['webmanifest']\n\n/** @type {import('../core.js').Syntax} */\nexport default function json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","// @ts-nocheck\nimport refractorJson from './json.js'\njson5.displayName = 'json5'\njson5.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJson from './json.js'\njsonp.displayName = 'jsonp'\njsonp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","// @ts-nocheck\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:\\d+(?::\\d+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nimport refractorMarkup from './markup.js'\njsx.displayName = 'jsx'\njsx.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsx(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\n\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<S>/g, function () {\n          return space\n        })\n        .replace(/<BRACES>/g, function () {\n          return braces\n        })\n        .replace(/<SPREAD>/g, function () {\n          return spread\n        })\n      return RegExp(source, flags)\n    }\n    spread = re(spread).source\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = re(\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\n        .source\n    )\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: re(/<SPREAD>/.source),\n          inside: Prism.languages.jsx\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'special-attr',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: re(/=<BRACES>/.source),\n          alias: 'language-javascript',\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?=\\{)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          }\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n\n    // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token)\n\n            // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","// @ts-nocheck\njulia.displayName = 'julia'\njulia.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      greedy: true\n    },\n    char: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","// @ts-nocheck\nkeepalived.displayName = 'keepalived'\nkeepalived.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function keepalived(Prism) {\n  Prism.languages.keepalived = {\n    comment: {\n      pattern: /[#!].*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n      lookbehind: true,\n      greedy: true\n    },\n    // support IPv4, IPv6, subnet mask\n    ip: {\n      pattern: RegExp(\n        /\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(\n          /<ipv4>/g,\n          function () {\n            return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/\n              .source\n          }\n        ),\n        'i'\n      ),\n      alias: 'number'\n    },\n    // support *nix / Windows, directory / file\n    path: {\n      pattern:\n        /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    variable: /\\$\\{?\\w+\\}?/,\n    email: {\n      pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n      alias: 'string'\n    },\n    'conditional-configuration': {\n      pattern: /@\\^?[\\w-]+/,\n      alias: 'variable'\n    },\n    operator: /=/,\n    property:\n      /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n    constant:\n      /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n    number: {\n      pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n    punctuation: /[\\{\\}]/\n  }\n}\n","// @ts-nocheck\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: {\n      pattern: /\\bc .*/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    'virtual-key': {\n      pattern:\n        /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n      greedy: true,\n      alias: 'function' // alias for styles\n    },\n\n    // https://help.keyman.com/developer/language/guide/headers\n    'header-keyword': {\n      pattern: /&\\w+/,\n      alias: 'bold' // alias for styles\n    },\n\n    'header-statement': {\n      pattern:\n        /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n      alias: 'bold' // alias for styles\n    },\n\n    'rule-keyword': {\n      pattern:\n        /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n      alias: 'keyword'\n    },\n    'structural-keyword': {\n      pattern:\n        /\\b(?:ansi|begin|group|match|newcontext|nomatch|postkeystroke|readonly|unicode|using keys)\\b/i,\n      alias: 'keyword'\n    },\n    'compile-target': {\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n      alias: 'property'\n    },\n    // U+####, x###, d### characters and numbers\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    operator: /[+>\\\\$]|\\.\\./,\n    punctuation: /[()=,]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\n\n/** @type {import('../core.js').Syntax} */\nexport default function kotlin(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","// @ts-nocheck\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\n\n/** @type {import('../core.js').Syntax} */\nexport default function kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","// @ts-nocheck\nkusto.displayName = 'kusto'\nkusto.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","// @ts-nocheck\nlatex.displayName = 'latex'\nlatex.aliases = ['context', 'tex']\n\n/** @type {import('../core.js').Syntax} */\nexport default function latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nimport refractorMarkupTemplating from './markup-templating.js'\nimport refractorPhp from './php.js'\nlatte.displayName = 'latte'\nlatte.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function latte(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      'latte-tag': {\n        // https://latte.nette.org/en/tags\n        pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n        lookbehind: true,\n        alias: 'important'\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        alias: 'punctuation'\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nless.displayName = 'less'\nless.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function less(Prism) {\n  Prism.register(refractorCss)\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      },\n      // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","// @ts-nocheck\nimport refractorScheme from './scheme.js'\nlilypond.displayName = 'lilypond'\nlilypond.aliases = ['ly']\n\n/** @type {import('../core.js').Syntax} */\nexport default function lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source\n    // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","// @ts-nocheck\nlinkerScript.displayName = 'linker-script'\nlinkerScript.aliases = ['ld']\n\n/** @type {import('../core.js').Syntax} */\nexport default function linkerScript(Prism) {\n  Prism.languages['linker-script'] = {\n    comment: {\n      pattern: /(^|\\s)\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    identifier: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    'location-counter': {\n      pattern: /\\B\\.\\B/,\n      alias: 'important'\n    },\n    section: {\n      pattern: /(^|[^\\w*])\\.\\w+\\b/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b[A-Z][A-Z_]*(?=\\s*\\()/,\n    number: /\\b(?:0[xX][a-fA-F0-9]+|\\d+)[KM]?\\b/,\n    operator: />>=?|<<=?|->|\\+\\+|--|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?/,\n    punctuation: /[(){},;]/\n  }\n  Prism.languages['ld'] = Prism.languages['linker-script']\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nliquid.displayName = 'liquid'\nliquid.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:false|nil|true)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","// @ts-nocheck\nlisp.displayName = 'lisp'\nlisp.aliases = ['elisp', 'emacs', 'emacs-lisp']\n\n/** @type {import('../core.js').Syntax} */\nexport default function lisp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function simple_form(name) {\n      return RegExp(/(\\()/.source + '(?:' + name + ')' + /(?=[\\s\\)])/.source)\n    }\n    /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function primitive(pattern) {\n      return RegExp(\n        /([\\s([])/.source + '(?:' + pattern + ')' + /(?=[\\s)])/.source\n      )\n    }\n\n    // Patterns in regular expressions\n\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source\n    // symbol starting with & used in function arguments\n    var marker = '&' + symbol\n    // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))'\n    // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var nestedPar =\n      /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/\n        .source\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:append|by|collect|concat|do|finally|for|in|return)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form(/declare/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form(/interactive/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive(/nil|t/.source),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:const|custom|group|var)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source +\n            symbol +\n            /\\s+\\(/.source +\n            nestedPar +\n            /\\)/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/,\n        // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      varform: {\n        pattern: RegExp(\n          /\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source\n        ),\n        inside: language\n      },\n      argument: {\n        pattern: RegExp(/(^|[\\s(])/.source + symbol),\n        lookbehind: true,\n        alias: 'variable'\n      },\n      rest: language\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + nestedPar + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:body|rest)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:aux|optional)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","// @ts-nocheck\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            }\n            // See rest below\n          }\n        },\n\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      },\n      // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","// @ts-nocheck\nllvm.displayName = 'llvm'\nllvm.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:false|true)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nlog.displayName = 'log'\nlog.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","// @ts-nocheck\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","// @ts-nocheck\nlua.displayName = 'lua'\nlua.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","// @ts-nocheck\nmagma.displayName = 'magma'\nmagma.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n","// @ts-nocheck\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\n\n/** @type {import('../core.js').Syntax} */\nexport default function markdown(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'front-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\n        inside\n      ) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] =\n            Prism.languages.markdown[inside]\n        }\n      })\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp')\n            // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang\n\n            // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(env.content.value, grammar, codeLang)\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    }\n\n    // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '')\n\n      // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          }\n\n          // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nmarkupTemplating.displayName = 'markup-templating'\nmarkupTemplating.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function markupTemplating(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder\n\n            // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            }\n\n            // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          })\n\n          // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          }\n\n          // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nmarkup.displayName = 'markup'\nmarkup.aliases = ['atom', 'html', 'mathml', 'rss', 'ssml', 'svg', 'xml']\n\n/** @type {import('../core.js').Syntax} */\nexport default function markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup\n\n  // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","// @ts-nocheck\nmata.displayName = 'mata'\nmata.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mata(Prism) {\n  // https://www.stata.com/manuals/m.pdf\n\n  ;(function (Prism) {\n    var orgType = /\\b(?:(?:col|row)?vector|matrix|scalar)\\b/.source\n    var type =\n      /\\bvoid\\b|<org>|\\b(?:complex|numeric|pointer(?:\\s*\\([^()]*\\))?|real|string|(?:class|struct)\\s+\\w+|transmorphic)(?:\\s*<org>)?/.source.replace(\n        /<org>/g,\n        orgType\n      )\n    Prism.languages.mata = {\n      comment: {\n        pattern:\n          /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\b(?:class|extends|struct)\\s+)\\w+(?=\\s*(?:\\{|\\bextends\\b))/,\n        lookbehind: true\n      },\n      type: {\n        pattern: RegExp(type),\n        alias: 'class-name',\n        inside: {\n          punctuation: /[()]/,\n          keyword: /\\b(?:class|function|struct|void)\\b/\n        }\n      },\n      keyword:\n        /\\b(?:break|class|continue|do|else|end|extends|external|final|for|function|goto|if|pragma|private|protected|public|return|static|struct|unset|unused|version|virtual|while)\\b/,\n      constant: /\\bNULL\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w.])(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|\\d[a-f0-9]*(?:\\.[a-f0-9]+)?x[+-]?\\d+)i?(?![\\w.])/i,\n        lookbehind: true\n      },\n      missing: {\n        pattern: /(^|[^\\w.])(?:\\.[a-z]?)(?![\\w.])/,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      operator: /\\.\\.|\\+\\+|--|&&|\\|\\||:?(?:[!=<>]=|[+\\-*/^<>&|:])|[!?=\\\\#’`']/,\n      punctuation: /[()[\\]{},;.]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","// @ts-nocheck\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function maxscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp(\n          '((?:' +\n            // start of line\n            (/^/.source +\n              '|' +\n              // operators and other language constructs\n              /[;=<>+\\-*/^({\\[]/.source +\n              '|' +\n              // keywords as part of statements\n              /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/\n                .source) +\n            ')[ \\t]*)' +\n            '(?!' +\n            keywords.source +\n            ')' +\n            /[a-z_]\\w*\\b/.source +\n            '(?=[ \\t]*(?:' +\n            // variable\n            ('(?!' +\n              keywords.source +\n              ')' +\n              /[a-z_]/.source +\n              '|' +\n              // number\n              /\\d|-\\.?\\d/.source +\n              '|' +\n              // other expressions or literals\n              /[({'\"$@#?]/.source) +\n            '))',\n          'im'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern:\n          /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [\n        {\n          pattern:\n            /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n          lookbehind: true\n        },\n        /\\b(?:e|pi)\\b/\n      ],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nmel.displayName = 'mel'\nmel.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mel(Prism) {\n  Prism.languages.mel = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        statement: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function: {\n      pattern:\n        /((?:^|[{;])[ \\t]*)[a-z_]\\w*\\b(?!\\s*(?:\\.(?!\\.)|[[{=]))|\\b[a-z_]\\w*(?=[ \\t]*\\()/im,\n      lookbehind: true,\n      greedy: true\n    },\n    'tensor-punctuation': {\n      pattern: /<<|>>/,\n      alias: 'punctuation'\n    },\n    operator: /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=?|[*\\/!=]=?|[%^]/,\n    punctuation: /[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside['statement'].inside = Prism.languages.mel\n}\n","// @ts-nocheck\nmermaid.displayName = 'mermaid'\nmermaid.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mermaid(Prism) {\n  Prism.languages.mermaid = {\n    comment: {\n      pattern: /%%.*/,\n      greedy: true\n    },\n    style: {\n      pattern:\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n      lookbehind: true,\n      inside: {\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n        operator: /:/,\n        punctuation: /,/\n      }\n    },\n    'inter-arrow-label': {\n      pattern:\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        arrow: {\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n          alias: 'operator'\n        },\n        label: {\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'arrow-head': {\n          pattern: /^\\S+/,\n          alias: ['arrow', 'operator']\n        }\n      }\n    },\n    arrow: [\n      // This might look complex but it really isn't.\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n      // arrows into different patterns.\n      {\n        // ER diagram\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // flow chart\n        // (?:==+|--+|-\\.*-)\n        pattern:\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // sequence diagram\n        pattern:\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // class diagram\n        pattern:\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    ],\n    label: {\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    text: {\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    annotation: {\n      pattern:\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n      alias: 'important'\n    },\n    keyword: [\n      // This language has both case-sensitive and case-insensitive keywords\n      {\n        pattern:\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern:\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    entity: /#[a-z0-9]+;/,\n    operator: {\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n      lookbehind: true\n    },\n    punctuation: /[(){};]/\n  }\n}\n","// @ts-nocheck\nmetafont.displayName = 'metafont'\nmetafont.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function metafont(Prism) {\n  Prism.languages.metafont = {\n    // Syntax of METAFONT with the added (public) elements of PlainMETAFONT. Except for internal quantities they are expected to be rarely redefined. Freely inspired by the syntax of Christophe Grandsire for the Crimson Editor.\n    comment: {\n      pattern: /%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"/,\n      greedy: true\n    },\n    number: /\\d*\\.?\\d+/,\n    boolean: /\\b(?:false|true)\\b/,\n    punctuation: [\n      /[,;()]/,\n      {\n        pattern: /(^|[^{}])(?:\\{|\\})(?![{}])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^[])\\[(?!\\[)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\]])\\](?!\\])/,\n        lookbehind: true\n      }\n    ],\n    constant: [\n      {\n        pattern: /(^|[^!?])\\?\\?\\?(?![!?])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^/*\\\\])(?:\\\\|\\\\\\\\)(?![/*\\\\])/,\n        lookbehind: true\n      },\n      /\\b(?:_|blankpicture|bp|cc|cm|dd|ditto|down|eps|epsilon|fullcircle|halfcircle|identity|in|infinity|left|mm|nullpen|nullpicture|origin|pc|penrazor|penspeck|pensquare|penstroke|proof|pt|quartercircle|relax|right|smoke|unitpixel|unitsquare|up)\\b/\n    ],\n    quantity: {\n      pattern:\n        /\\b(?:autorounding|blacker|boundarychar|charcode|chardp|chardx|chardy|charext|charht|charic|charwd|currentwindow|day|designsize|displaying|fillin|fontmaking|granularity|hppp|join_radius|month|o_correction|pausing|pen_(?:bot|lft|rt|top)|pixels_per_inch|proofing|showstopping|smoothing|time|tolerance|tracingcapsules|tracingchoices|tracingcommands|tracingedges|tracingequations|tracingmacros|tracingonline|tracingoutput|tracingpens|tracingrestores|tracingspecs|tracingstats|tracingtitles|turningcheck|vppp|warningcheck|xoffset|year|yoffset)\\b/,\n      alias: 'keyword'\n    },\n    command: {\n      pattern:\n        /\\b(?:addto|batchmode|charlist|cull|display|errhelp|errmessage|errorstopmode|everyjob|extensible|fontdimen|headerbyte|inner|interim|let|ligtable|message|newinternal|nonstopmode|numspecial|openwindow|outer|randomseed|save|scrollmode|shipout|show|showdependencies|showstats|showtoken|showvariable|special)\\b/,\n      alias: 'builtin'\n    },\n    operator: [\n      {\n        pattern:\n          /(^|[^>=<:|])(?:<|<=|=|=:|\\|=:|\\|=:>|=:\\|>|=:\\||\\|=:\\||\\|=:\\|>|\\|=:\\|>>|>|>=|:|:=|<>|::|\\|\\|:)(?![>=<:|])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^+-])(?:\\+|\\+\\+|-{1,3}|\\+-\\+)(?![+-])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^/*\\\\])(?:\\*|\\*\\*|\\/)(?![/*\\\\])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^.])(?:\\.{2,3})(?!\\.)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^@#&$])&(?![@#&$])/,\n        lookbehind: true\n      },\n      /\\b(?:and|not|or)\\b/\n    ],\n    macro: {\n      pattern:\n        /\\b(?:abs|beginchar|bot|byte|capsule_def|ceiling|change_width|clear_pen_memory|clearit|clearpen|clearxy|counterclockwise|cullit|cutdraw|cutoff|decr|define_blacker_pixels|define_corrected_pixels|define_good_x_pixels|define_good_y_pixels|define_horizontal_corrected_pixels|define_pixels|define_whole_blacker_pixels|define_whole_pixels|define_whole_vertical_blacker_pixels|define_whole_vertical_pixels|dir|direction|directionpoint|div|dotprod|downto|draw|drawdot|endchar|erase|fill|filldraw|fix_units|flex|font_coding_scheme|font_extra_space|font_identifier|font_normal_shrink|font_normal_space|font_normal_stretch|font_quad|font_size|font_slant|font_x_height|gfcorners|gobble|gobbled|good\\.(?:bot|lft|rt|top|x|y)|grayfont|hide|hround|imagerules|incr|interact|interpath|intersectionpoint|inverse|italcorr|killtext|labelfont|labels|lft|loggingall|lowres_fix|makegrid|makelabel(?:\\.(?:bot|lft|rt|top)(?:\\.nodot)?)?|max|min|mod|mode_def|mode_setup|nodisplays|notransforms|numtok|openit|penlabels|penpos|pickup|proofoffset|proofrule|proofrulethickness|range|reflectedabout|rotatedabout|rotatedaround|round|rt|savepen|screenchars|screenrule|screenstrokes|shipit|showit|slantfont|softjoin|solve|stop|superellipse|tensepath|thru|titlefont|top|tracingall|tracingnone|undraw|undrawdot|unfill|unfilldraw|upto|vround)\\b/,\n      alias: 'function'\n    },\n    builtin:\n      /\\b(?:ASCII|angle|char|cosd|decimal|directiontime|floor|hex|intersectiontimes|jobname|known|length|makepath|makepen|mexp|mlog|normaldeviate|oct|odd|pencircle|penoffset|point|postcontrol|precontrol|reverse|rotated|sind|sqrt|str|subpath|substring|totalweight|turningnumber|uniformdeviate|unknown|xpart|xxpart|xypart|ypart|yxpart|yypart)\\b/,\n    keyword:\n      /\\b(?:also|at|atleast|begingroup|charexists|contour|controls|curl|cycle|def|delimiters|doublepath|dropping|dump|else|elseif|end|enddef|endfor|endgroup|endinput|exitif|exitunless|expandafter|fi|for|forever|forsuffixes|from|if|input|inwindow|keeping|kern|of|primarydef|quote|readstring|scaled|scantokens|secondarydef|shifted|skipto|slanted|step|tension|tertiarydef|to|transformed|until|vardef|withpen|withweight|xscaled|yscaled|zscaled)\\b/,\n    type: {\n      pattern:\n        /\\b(?:boolean|expr|numeric|pair|path|pen|picture|primary|secondary|string|suffix|tertiary|text|transform)\\b/,\n      alias: 'property'\n    },\n    variable: {\n      pattern:\n        /(^|[^@#&$])(?:@#|#@|#|@)(?![@#&$])|\\b(?:aspect_ratio|currentpen|currentpicture|currenttransform|d|extra_beginchar|extra_endchar|extra_setup|h|localfont|mag|mode|screen_cols|screen_rows|w|whatever|x|y|z)\\b/,\n      lookbehind: true\n    }\n  }\n}\n","// @ts-nocheck\nmizar.displayName = 'mizar'\nmizar.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mongodb(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice',\n      // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit',\n      // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind',\n      '$setWindowFields',\n      // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip',\n      '$count',\n      '$dateAdd',\n      '$dateDiff',\n      '$dateSubtract',\n      '$dateTrunc',\n      '$getField',\n      '$rand',\n      '$sampleRate',\n      '$setField',\n      '$unsetField',\n      // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function monkey(Prism) {\n  Prism.languages.monkey = {\n    comment: {\n      pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /\\b[?%#$]/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\n    operator:\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","// @ts-nocheck\nmoonscript.displayName = 'moonscript'\nmoonscript.aliases = ['moon']\n\n/** @type {import('../core.js').Syntax} */\nexport default function moonscript(Prism) {\n  Prism.languages.moonscript = {\n    comment: /--.*/,\n    string: [\n      {\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n        greedy: true\n      },\n      {\n        pattern: /\"[^\"]*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /#\\{[^{}]*\\}/,\n            inside: {\n              moonscript: {\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                lookbehind: true,\n                inside: null // see beow\n              },\n\n              'interpolation-punctuation': {\n                pattern: /#\\{|\\}/,\n                alias: 'punctuation'\n              }\n            }\n          }\n        }\n      }\n    ],\n    'class-name': [\n      {\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      // class-like names start with a capital letter\n      /\\b[A-Z]\\w*/\n    ],\n    keyword:\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n    variable: /@@?\\w*/,\n    property: {\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n      lookbehind: true\n    },\n    function: {\n      pattern:\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n    operator:\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n    punctuation: /[.,()[\\]{}\\\\]/\n  }\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\n    Prism.languages.moonscript\n  Prism.languages.moon = Prism.languages.moonscript\n}\n","// @ts-nocheck\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function n1ql(Prism) {\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n\n  Prism.languages.n1ql = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    parameter: /\\$[\\w.]+/,\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n    keyword:\n      /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\n\n/** @type {import('../core.js').Syntax} */\nexport default function n4js(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n"],"names":["editorconfig","Prism","languages","comment","section","pattern","lookbehind","alias","inside","regex","operator","punctuation","key","value","displayName","aliases","eiffel","string","greedy","char","keyword","boolean","number","ejs","register","refractorJavascript","refractorMarkupTemplating","delimiter","javascript","hooks","add","env","buildPlaceholders","tokenizePlaceholders","eta","elixir","doc","attribute","atom","module","argument","function","forEach","o","interpolation","rest","elm","builtin","hvariable","constant","erb","refractorRuby","ruby","erlang","variable","etlua","refractorLua","lua","excelFormula","reference","sheet","file","path","range","cell","column","row","factor","comment_inside","string_inside","regexp","combinators","escape","str","replace","arrToWordsRegExp","arr","RegExp","map","join","builtins","Object","keys","k","$false","firestoreSecurityRules","refractorClike","extend","insertBefore","method","flow","type","Array","isArray","unshift","fortran","fsharp","preprocessor","directive","annotation","ftl","FTL_EXPR","source","i","content","gap","shell","continuation","gcode","property","checksum","gdscript","gedcom","pointer","record","level","gettext","po","gherkin","tableRow","pystring","tag","feature","important","scenario","outline","td","th","atrule","git","deleted","inserted","command","parameter","coord","glsl","refractorC","gml","gamemakerlanguage","gn","expression","gni","goModule","version","go","gradle","shebang","graphql","description","markdown","scalar","fragment","object","language","validTokens","tokens","filter","token","currentIndex","length","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","push","mutationEnd","varToken","indexOf","offset","types","open","close","stackHeight","test","groovy","haml","markup","doctype","attributes","code","filters","all_filters","l","text","handlebars","block","brackets","hbs","mustache","haskell","hs","haxe","metadata","reification","hcl","heredoc","hlsl","c","hoon","hpkp","hsts","http","headerValueOf","name","uri","header","csp","options","langs","httpLanguages","json","xml","html","css","plain","suffixTypes","getSuffixPattern","contentType","suffix","ichigojam","label","icon","icuMessageFormat","nested","stringPattern","argumentSource","nestedMessage","message","selector","idris","refractorHaskell","undefined","idr","iecst","address","ignore","entry","gitignore","hgignore","npmignore","inform7","substitution","title","verb","position","ini","io","j","adverb","conjunction","java","keywords","classNamePrefix","className","namespace","clike","generics","import","static","javadoc","refractorJava","refractorJavadoclike","refractorMarkup","codeLinePattern","memberReference","field","line","entity","javadoclike","addSupport","javaDocLike","defineProperty","docLanguage","lang","callback","tokenName","grammar","definition","docCommentSupport","hashbang","addInlined","addAttribute","js","javastacktrace","summary","exceptions","more","jexl","transform","jolie","aggregates","redirects","jq","stringInterpolation","dot","jsExtras","withId","flags","imports","exports","spread","arrow","dom","console","maybeClassNameTokens","util","jsTemplates","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","run","tokenize","tokenizeInterpolationExpression","tempGrammar","args","apply","splice","Token","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","walkTokens","s","index","before","substring","middle","after","replacement","afterTokens","concat","Boolean","supportedLanguages","typescript","ts","jsx","tsx","stringContent","findTemplateStrings","embedded","jsdoc","refractorTypescript","parameterPrefix","example","null","webmanifest","json5","refractorJson","jsonp","jsstacktrace","filename","clone","space","braces","re","script","stringifyToken","openedTags","notTagNorBrace","tagName","pop","openedBraces","plainText","julia","keepalived","ip","email","keyman","kotlin","interpolationInside","kt","kts","kumir","nonId","wrapId","prolog","kum","kusto","datetime","latex","funcPattern","insideEqu","cdata","equation","url","headline","tex","context","latte","refractorPhp","php","markupLatte","less","refractorCss","lilypond","refractorScheme","schemeExpression","scheme","ly","linkerScript","identifier","liquid","empty","insideRaw","match","tagMatch","exec","lisp","simple_form","primitive","symbol","marker","par","nestedPar","heading","declare","interactive","defvar","defun","arguments","lambda","car","arg","varform","forms","arglist","sublist","elisp","emacs","livescript","llvm","log","exception","separator","domain","uuid","hash","date","time","lolcode","magma","output","generator","makefile","target","inner","createInline","tableCell","tableLine","yaml","blockquote","table","hr","list","bold","italic","strike","codeLang","codeBlock","toLowerCase","classes","cls","highlight","plugins","autoloader","id","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCodePoint","fromCharCode","md","markupTemplating","defineProperties","placeholderPattern","replaceFilter","tokenStack","includedCdataInside","def","attrName","mathml","svg","ssml","rss","mata","orgType","missing","matlab","maxscript","color","mel","statement","flag","mermaid","style","metafont","quantity","macro","mizar","mongodb","operators","operatorsSource","monkey","moonscript","moon","n1ql","n4js","n4jsd"],"sourceRoot":""}