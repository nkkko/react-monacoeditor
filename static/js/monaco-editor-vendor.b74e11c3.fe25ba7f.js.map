{"version":3,"file":"static/js/monaco-editor-vendor.b74e11c3.fe25ba7f.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dnd.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/documentSymbols.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/outlineModel.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/edit.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/keybindingCancellation.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replaceAllCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replacePattern.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findState.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        const text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n    if (isMacintosh) {\n        return e.altKey;\n    }\n    else {\n        return e.ctrlKey;\n    }\n}\nexport class DragAndDropController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._dndDecorationIds = this._editor.createDecorationsCollection();\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        this._dragSelection = null;\n    }\n    onEditorBlur() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n    }\n    onEditorKeyDown(e) {\n        if (!this._editor.getOption(33 /* EditorOption.dragAndDrop */) || this._editor.getOption(20 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = true;\n        }\n        if (this._mouseDown && hasTriggerModifier(e)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n    }\n    onEditorKeyUp(e) {\n        if (!this._editor.getOption(33 /* EditorOption.dragAndDrop */) || this._editor.getOption(20 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = false;\n        }\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._mouseDown = true;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._mouseDown = false;\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n    }\n    _onEditorMouseDrag(mouseEvent) {\n        const target = mouseEvent.target;\n        if (this._dragSelection === null) {\n            const selections = this._editor.getSelections() || [];\n            const possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n            if (possibleSelections.length === 1) {\n                this._dragSelection = possibleSelections[0];\n            }\n            else {\n                return;\n            }\n        }\n        if (hasTriggerModifier(mouseEvent.event)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n        else {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n        if (target.position) {\n            if (this._dragSelection.containsPosition(target.position)) {\n                this._removeDecoration();\n            }\n            else {\n                this.showAt(target.position);\n            }\n        }\n    }\n    _onEditorMouseDropCanceled() {\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    _onEditorMouseDrop(mouseEvent) {\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n            const newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n            if (this._dragSelection === null) {\n                let newSelections = null;\n                if (mouseEvent.event.shiftKey) {\n                    const primarySelection = this._editor.getSelection();\n                    if (primarySelection) {\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n                    }\n                }\n                else {\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\n                        if (selection.containsPosition(newCursorPosition)) {\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n                        }\n                        else {\n                            return selection;\n                        }\n                    });\n                }\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* CursorChangeReason.Explicit */);\n            }\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n                ((hasTriggerModifier(mouseEvent.event) ||\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n                )) {\n                this._editor.pushUndoStop();\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n                this._editor.pushUndoStop();\n            }\n        }\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    showAt(position) {\n        this._dndDecorationIds.set([{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: DragAndDropController._DECORATION_OPTIONS\n            }]);\n        this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n    }\n    _removeDecoration() {\n        this._dndDecorationIds.clear();\n    }\n    _hitContent(target) {\n        return target.type === 6 /* MouseTargetType.CONTENT_TEXT */ ||\n            target.type === 7 /* MouseTargetType.CONTENT_EMPTY */;\n    }\n    _hitMargin(target) {\n        return target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ ||\n            target.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ ||\n            target.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */;\n    }\n    dispose() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        super.dispose();\n    }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* KeyCode.Alt */ : 5 /* KeyCode.Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'dnd-target',\n    className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource] = args;\n        assertType(URI.isUri(resource));\n        const outlineService = accessor.get(IOutlineModelService);\n        const modelService = accessor.get(ITextModelService);\n        const reference = yield modelService.createModelReference(resource);\n        try {\n            return (yield outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { equals } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class TreeElement {\n    remove() {\n        var _a;\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.delete(this.id);\n    }\n    static findId(candidate, container) {\n        // complex id-computation which contains the origin/extension,\n        // the parent path, and some dedupe logic when names collide\n        let candidateId;\n        if (typeof candidate === 'string') {\n            candidateId = `${container.id}/${candidate}`;\n        }\n        else {\n            candidateId = `${container.id}/${candidate.name}`;\n            if (container.children.get(candidateId) !== undefined) {\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\n            }\n        }\n        let id = candidateId;\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\n            id = `${candidateId}_${i}`;\n        }\n        return id;\n    }\n    static empty(element) {\n        return element.children.size === 0;\n    }\n}\nexport class OutlineElement extends TreeElement {\n    constructor(id, parent, symbol) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.symbol = symbol;\n        this.children = new Map();\n    }\n}\nexport class OutlineGroup extends TreeElement {\n    constructor(id, parent, label, order) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.label = label;\n        this.order = order;\n        this.children = new Map();\n    }\n}\nexport class OutlineModel extends TreeElement {\n    static create(registry, textModel, token) {\n        const cts = new CancellationTokenSource(token);\n        const result = new OutlineModel(textModel.uri);\n        const provider = registry.ordered(textModel);\n        const promises = provider.map((provider, index) => {\n            var _a;\n            const id = TreeElement.findId(`provider_${index}`, result);\n            const group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n                for (const info of result || []) {\n                    OutlineModel._makeOutlineElement(info, group);\n                }\n                return group;\n            }, err => {\n                onUnexpectedExternalError(err);\n                return group;\n            }).then(group => {\n                if (!TreeElement.empty(group)) {\n                    result._groups.set(id, group);\n                }\n                else {\n                    group.remove();\n                }\n            });\n        });\n        const listener = registry.onDidChange(() => {\n            const newProvider = registry.ordered(textModel);\n            if (!equals(newProvider, provider)) {\n                cts.cancel();\n            }\n        });\n        return Promise.all(promises).then(() => {\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n                return OutlineModel.create(registry, textModel, token);\n            }\n            else {\n                return result._compact();\n            }\n        }).finally(() => {\n            listener.dispose();\n        });\n    }\n    static _makeOutlineElement(info, container) {\n        const id = TreeElement.findId(info, container);\n        const res = new OutlineElement(id, container, info);\n        if (info.children) {\n            for (const childInfo of info.children) {\n                OutlineModel._makeOutlineElement(childInfo, res);\n            }\n        }\n        container.children.set(res.id, res);\n    }\n    constructor(uri) {\n        super();\n        this.uri = uri;\n        this.id = 'root';\n        this.parent = undefined;\n        this._groups = new Map();\n        this.children = new Map();\n        this.id = 'root';\n        this.parent = undefined;\n    }\n    _compact() {\n        let count = 0;\n        for (const [key, group] of this._groups) {\n            if (group.children.size === 0) { // empty\n                this._groups.delete(key);\n            }\n            else {\n                count += 1;\n            }\n        }\n        if (count !== 1) {\n            //\n            this.children = this._groups;\n        }\n        else {\n            // adopt all elements of the first group\n            const group = Iterable.first(this._groups.values());\n            for (const [, child] of group.children) {\n                child.parent = this;\n                this.children.set(child.id, child);\n            }\n        }\n        return this;\n    }\n    getTopLevelSymbols() {\n        const roots = [];\n        for (const child of this.children.values()) {\n            if (child instanceof OutlineElement) {\n                roots.push(child.symbol);\n            }\n            else {\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\n            }\n        }\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    }\n    asListOfDocumentSymbols() {\n        const roots = this.getTopLevelSymbols();\n        const bucket = [];\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\n        return bucket.sort((a, b) => Position.compare(Range.getStartPosition(a.range), Range.getStartPosition(b.range)) || Position.compare(Range.getEndPosition(b.range), Range.getEndPosition(a.range)));\n    }\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\n        for (const entry of entries) {\n            bucket.push({\n                kind: entry.kind,\n                tags: entry.tags,\n                name: entry.name,\n                detail: entry.detail,\n                containerName: entry.containerName || overrideContainerLabel,\n                range: entry.range,\n                selectionRange: entry.selectionRange,\n                children: undefined, // we flatten it...\n            });\n            // Recurse over children\n            if (entry.children) {\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n            }\n        }\n    }\n}\nexport const IOutlineModelService = createDecorator('IOutlineModelService');\nexport let OutlineModelService = class OutlineModelService {\n    constructor(_languageFeaturesService, debounces, modelService) {\n        this._languageFeaturesService = _languageFeaturesService;\n        this._disposables = new DisposableStore();\n        this._cache = new LRUCache(10, 0.7);\n        this._debounceInformation = debounces.for(_languageFeaturesService.documentSymbolProvider, 'DocumentSymbols', { min: 350 });\n        // don't cache outline models longer than their text model\n        this._disposables.add(modelService.onModelRemoved(textModel => {\n            this._cache.delete(textModel.id);\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    getOrCreate(textModel, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const registry = this._languageFeaturesService.documentSymbolProvider;\n            const provider = registry.ordered(textModel);\n            let data = this._cache.get(textModel.id);\n            if (!data || data.versionId !== textModel.getVersionId() || !equals(data.provider, provider)) {\n                const source = new CancellationTokenSource();\n                data = {\n                    versionId: textModel.getVersionId(),\n                    provider,\n                    promiseCnt: 0,\n                    source,\n                    promise: OutlineModel.create(registry, textModel, source.token),\n                    model: undefined,\n                };\n                this._cache.set(textModel.id, data);\n                const now = Date.now();\n                data.promise.then(outlineModel => {\n                    data.model = outlineModel;\n                    this._debounceInformation.update(textModel, Date.now() - now);\n                }).catch(_err => {\n                    this._cache.delete(textModel.id);\n                });\n            }\n            if (data.model) {\n                // resolved -> return data\n                return data.model;\n            }\n            // increase usage counter\n            data.promiseCnt += 1;\n            const listener = token.onCancellationRequested(() => {\n                // last -> cancel provider request, remove cached promise\n                if (--data.promiseCnt === 0) {\n                    data.source.cancel();\n                    this._cache.delete(textModel.id);\n                }\n            });\n            try {\n                return yield data.promise;\n            }\n            finally {\n                listener.dispose();\n            }\n        });\n    }\n};\nOutlineModelService = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, ILanguageFeatureDebounceService),\n    __param(2, IModelService)\n], OutlineModelService);\nregisterSingleton(IOutlineModelService, OutlineModelService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addDisposableListener } from '../../../../base/browser/dom.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { UriList, createStringDataTransferItem, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { toExternalVSDataTransfer, toVSDataTransfer } from '../../../browser/dnd.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { createCombinedWorkspaceEdit } from './edit.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IProgressService } from '../../../../platform/progress/common/progress.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const changePasteTypeCommandId = 'editor.changePasteType';\nexport const pasteWidgetVisibleCtx = new RawContextKey('pasteWidgetVisible', false, localize('pasteWidgetVisible', \"Whether the paste widget is showing\"));\nconst vscodeClipboardMime = 'application/vnd.code.copyMetadata';\nexport let CopyPasteController = class CopyPasteController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(CopyPasteController.ID);\n    }\n    constructor(editor, instantiationService, _bulkEditService, _clipboardService, _languageFeaturesService, _quickInputService, _progressService) {\n        super();\n        this._bulkEditService = _bulkEditService;\n        this._clipboardService = _clipboardService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._quickInputService = _quickInputService;\n        this._progressService = _progressService;\n        this._editor = editor;\n        const container = editor.getContainerDomNode();\n        this._register(addDisposableListener(container, 'copy', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'cut', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'paste', e => this.handlePaste(e), true));\n        this._pasteProgressManager = this._register(new InlineProgressManager('pasteIntoEditor', editor, instantiationService));\n        this._postPasteWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'pasteIntoEditor', editor, pasteWidgetVisibleCtx, { id: changePasteTypeCommandId, label: localize('postPasteWidgetTitle', \"Show paste options...\") }));\n    }\n    changePasteType() {\n        this._postPasteWidgetManager.tryShowSelector();\n    }\n    pasteAs(preferredId) {\n        this._editor.focus();\n        try {\n            this._pasteAsActionContext = { preferredId };\n            document.execCommand('paste');\n        }\n        finally {\n            this._pasteAsActionContext = undefined;\n        }\n    }\n    isPasteAsEnabled() {\n        return this._editor.getOption(82 /* EditorOption.pasteAs */).enabled\n            && !this._editor.getOption(88 /* EditorOption.readOnly */);\n    }\n    handleCopy(e) {\n        var _a, _b;\n        if (!e.clipboardData || !this._editor.hasTextFocus() || !this.isPasteAsEnabled()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const selections = this._editor.getSelections();\n        if (!model || !(selections === null || selections === void 0 ? void 0 : selections.length)) {\n            return;\n        }\n        const enableEmptySelectionClipboard = this._editor.getOption(35 /* EditorOption.emptySelectionClipboard */);\n        let ranges = selections;\n        const wasFromEmptySelection = selections.length === 1 && selections[0].isEmpty();\n        if (wasFromEmptySelection) {\n            if (!enableEmptySelectionClipboard) {\n                return;\n            }\n            ranges = [new Range(ranges[0].startLineNumber, 1, ranges[0].startLineNumber, 1 + model.getLineLength(ranges[0].startLineNumber))];\n        }\n        const toCopy = (_a = this._editor._getViewModel()) === null || _a === void 0 ? void 0 : _a.getPlainTextToCopy(selections, enableEmptySelectionClipboard, platform.isWindows);\n        const multicursorText = Array.isArray(toCopy) ? toCopy : null;\n        const defaultPastePayload = {\n            multicursorText,\n            pasteOnNewLine: wasFromEmptySelection,\n            mode: null\n        };\n        const providers = this._languageFeaturesService.documentPasteEditProvider\n            .ordered(model)\n            .filter(x => !!x.prepareDocumentPaste);\n        if (!providers.length) {\n            this.setCopyMetadata(e.clipboardData, { defaultPastePayload });\n            return;\n        }\n        const dataTransfer = toVSDataTransfer(e.clipboardData);\n        const providerCopyMimeTypes = providers.flatMap(x => { var _a; return (_a = x.copyMimeTypes) !== null && _a !== void 0 ? _a : []; });\n        // Save off a handle pointing to data that VS Code maintains.\n        const handle = generateUuid();\n        this.setCopyMetadata(e.clipboardData, {\n            id: handle,\n            providerCopyMimeTypes,\n            defaultPastePayload\n        });\n        const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const results = coalesce(yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    return yield provider.prepareDocumentPaste(model, ranges, dataTransfer, token);\n                }\n                catch (err) {\n                    console.error(err);\n                    return undefined;\n                }\n            }))));\n            // Values from higher priority providers should overwrite values from lower priority ones.\n            // Reverse the array to so that the calls to `replace` below will do this\n            results.reverse();\n            for (const result of results) {\n                for (const [mime, value] of result) {\n                    dataTransfer.replace(mime, value);\n                }\n            }\n            return dataTransfer;\n        }));\n        (_b = this._currentCopyOperation) === null || _b === void 0 ? void 0 : _b.dataTransferPromise.cancel();\n        this._currentCopyOperation = { handle: handle, dataTransferPromise: promise };\n    }\n    handlePaste(e) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!e.clipboardData || !this._editor.hasTextFocus()) {\n                return;\n            }\n            (_a = this._currentPasteOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._currentPasteOperation = undefined;\n            const model = this._editor.getModel();\n            const selections = this._editor.getSelections();\n            if (!(selections === null || selections === void 0 ? void 0 : selections.length) || !model) {\n                return;\n            }\n            if (!this.isPasteAsEnabled()) {\n                return;\n            }\n            const metadata = this.fetchCopyMetadata(e.clipboardData);\n            const dataTransfer = toExternalVSDataTransfer(e.clipboardData);\n            dataTransfer.delete(vscodeClipboardMime);\n            const allPotentialMimeTypes = [\n                ...e.clipboardData.types,\n                ...(_b = metadata === null || metadata === void 0 ? void 0 : metadata.providerCopyMimeTypes) !== null && _b !== void 0 ? _b : [],\n                // TODO: always adds `uri-list` because this get set if there are resources in the system clipboard.\n                // However we can only check the system clipboard async. For this early check, just add it in.\n                // We filter providers again once we have the final dataTransfer we will use.\n                Mimes.uriList,\n            ];\n            const allProviders = this._languageFeaturesService.documentPasteEditProvider\n                .ordered(model)\n                .filter(provider => { var _a; return (_a = provider.pasteMimeTypes) === null || _a === void 0 ? void 0 : _a.some(type => matchesMimeType(type, allPotentialMimeTypes)); });\n            if (!allProviders.length) {\n                return;\n            }\n            // Prevent the editor's default paste handler from running.\n            // Note that after this point, we are fully responsible for handling paste.\n            // If we can't provider a paste for any reason, we need to explicitly delegate pasting back to the editor.\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (this._pasteAsActionContext) {\n                this.showPasteAsPick(this._pasteAsActionContext.preferredId, allProviders, selections, dataTransfer, metadata);\n            }\n            else {\n                this.doPasteInline(allProviders, selections, dataTransfer, metadata);\n            }\n        });\n    }\n    doPasteInline(allProviders, selections, dataTransfer, metadata) {\n        const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                yield this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any providers the don't match the full data transfer we will send them.\n                const supportedProviders = allProviders.filter(provider => isSupportedPasteProvider(provider, dataTransfer));\n                if (!supportedProviders.length\n                    || (supportedProviders.length === 1 && supportedProviders[0].id === 'text') // Only our default text provider is active\n                ) {\n                    yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n                    return;\n                }\n                const providerEdits = yield this.getPasteEdits(supportedProviders, dataTransfer, model, selections, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                if (providerEdits.length) {\n                    const canShowWidget = editor.getOption(82 /* EditorOption.pasteAs */).showPasteSelector === 'afterPaste';\n                    return this._postPasteWidgetManager.applyEditAndShowIfNeeded(selections, { activeEditIndex: 0, allEdits: providerEdits }, canShowWidget, tokenSource.token);\n                }\n                yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        }));\n        this._pasteProgressManager.showWhile(selections[0].getEndPosition(), localize('pasteIntoEditorProgress', \"Running paste handlers. Click to cancel\"), p);\n        this._currentPasteOperation = p;\n    }\n    showPasteAsPick(preferredId, allProviders, selections, dataTransfer, metadata) {\n        const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                yield this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any providers the don't match the full data transfer we will send them.\n                const supportedProviders = allProviders.filter(provider => isSupportedPasteProvider(provider, dataTransfer));\n                const providerEdits = yield this.getPasteEdits(supportedProviders, dataTransfer, model, selections, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                if (!providerEdits.length) {\n                    return;\n                }\n                let pickedEdit;\n                if (typeof preferredId === 'string') {\n                    // We are looking for a specific edit\n                    pickedEdit = providerEdits.find(edit => edit.id === preferredId);\n                }\n                else {\n                    const selected = yield this._quickInputService.pick(providerEdits.map((edit) => ({\n                        label: edit.label,\n                        description: edit.id,\n                        detail: edit.detail,\n                        edit,\n                    })), {\n                        placeHolder: localize('pasteAsPickerPlaceholder', \"Select Paste Action\"),\n                    });\n                    pickedEdit = selected === null || selected === void 0 ? void 0 : selected.edit;\n                }\n                if (!pickedEdit) {\n                    return;\n                }\n                const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, selections, pickedEdit);\n                yield this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor });\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        }));\n        this._progressService.withProgress({\n            location: 10 /* ProgressLocation.Window */,\n            title: localize('pasteAsProgress', \"Running paste handlers\"),\n        }, () => p);\n    }\n    setCopyMetadata(dataTransfer, metadata) {\n        dataTransfer.setData(vscodeClipboardMime, JSON.stringify(metadata));\n    }\n    fetchCopyMetadata(dataTransfer) {\n        const rawMetadata = dataTransfer.getData(vscodeClipboardMime);\n        if (rawMetadata) {\n            try {\n                return JSON.parse(rawMetadata);\n            }\n            catch (_a) {\n                return undefined;\n            }\n        }\n        return undefined;\n    }\n    mergeInDataFromCopy(dataTransfer, metadata, token) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((metadata === null || metadata === void 0 ? void 0 : metadata.id) && ((_a = this._currentCopyOperation) === null || _a === void 0 ? void 0 : _a.handle) === metadata.id) {\n                const toMergeDataTransfer = yield this._currentCopyOperation.dataTransferPromise;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                for (const [key, value] of toMergeDataTransfer) {\n                    dataTransfer.replace(key, value);\n                }\n            }\n            if (!dataTransfer.has(Mimes.uriList)) {\n                const resources = yield this._clipboardService.readResources();\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                if (resources.length) {\n                    dataTransfer.append(Mimes.uriList, createStringDataTransferItem(UriList.create(resources)));\n                }\n            }\n        });\n    }\n    getPasteEdits(providers, dataTransfer, model, selections, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield raceCancellation(Promise.all(providers.map(provider => {\n                var _a;\n                try {\n                    return (_a = provider.provideDocumentPasteEdits) === null || _a === void 0 ? void 0 : _a.call(provider, model, selections, dataTransfer, token);\n                }\n                catch (err) {\n                    console.error(err);\n                    return undefined;\n                }\n            })).then(coalesce), token);\n            result === null || result === void 0 ? void 0 : result.sort((a, b) => b.priority - a.priority);\n            return result !== null && result !== void 0 ? result : [];\n        });\n    }\n    applyDefaultPasteHandler(dataTransfer, metadata, token) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const textDataTransfer = (_a = dataTransfer.get(Mimes.text)) !== null && _a !== void 0 ? _a : dataTransfer.get('text');\n            if (!textDataTransfer) {\n                return;\n            }\n            const text = yield textDataTransfer.asString();\n            if (token.isCancellationRequested) {\n                return;\n            }\n            const payload = {\n                text,\n                pasteOnNewLine: (_b = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.pasteOnNewLine) !== null && _b !== void 0 ? _b : false,\n                multicursorText: (_c = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.multicursorText) !== null && _c !== void 0 ? _c : null,\n                mode: null,\n            };\n            this._editor.trigger('keyboard', \"paste\" /* Handler.Paste */, payload);\n        });\n    }\n};\nCopyPasteController.ID = 'editor.contrib.copyPasteActionController';\nCopyPasteController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IBulkEditService),\n    __param(3, IClipboardService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, IQuickInputService),\n    __param(6, IProgressService)\n], CopyPasteController);\nfunction isSupportedPasteProvider(provider, dataTransfer) {\n    var _a;\n    return Boolean((_a = provider.pasteMimeTypes) === null || _a === void 0 ? void 0 : _a.some(type => dataTransfer.matches(type)));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nexport function createCombinedWorkspaceEdit(uri, ranges, edit) {\n    var _a, _b;\n    return {\n        edits: [\n            ...ranges.map(range => new ResourceTextEdit(uri, typeof edit.insertText === 'string'\n                ? { range, text: edit.insertText, insertAsSnippet: false }\n                : { range, text: edit.insertText.snippet, insertAsSnippet: true })),\n            ...((_b = (_a = edit.additionalEdit) === null || _a === void 0 ? void 0 : _a.edits) !== null && _b !== void 0 ? _b : [])\n        ]\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { CopyPasteController, changePasteTypeCommandId, pasteWidgetVisibleCtx } from './copyPasteController.js';\nimport { DefaultPasteProvidersFeature } from './defaultProviders.js';\nimport * as nls from '../../../../nls.js';\nregisterEditorContribution(CopyPasteController.ID, CopyPasteController, 0 /* EditorContributionInstantiation.Eager */); // eager because it listens to events on the container dom node of the editor\nregisterEditorFeature(DefaultPasteProvidersFeature);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changePasteTypeCommandId,\n            precondition: pasteWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        return (_a = CopyPasteController.get(editor)) === null || _a === void 0 ? void 0 : _a.changePasteType();\n    }\n});\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pasteAs',\n            label: nls.localize('pasteAs', \"Paste As...\"),\n            alias: 'Paste As...',\n            precondition: undefined,\n            description: {\n                description: 'Paste as',\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'id': {\n                                    type: 'string',\n                                    description: nls.localize('pasteAs.id', \"The id of the paste edit to try applying. If not provided, the editor will show a picker.\"),\n                                }\n                            },\n                        }\n                    }]\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        var _a;\n        const id = typeof (args === null || args === void 0 ? void 0 : args.id) === 'string' ? args.id : undefined;\n        return (_a = CopyPasteController.get(editor)) === null || _a === void 0 ? void 0 : _a.pasteAs(id);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nconst builtInLabel = localize('builtIn', 'Built-in');\nclass SimplePasteAndDropProvider {\n    provideDocumentPasteEdits(_model, _ranges, dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const edit = yield this.getEdit(dataTransfer, token);\n            return edit ? { id: this.id, insertText: edit.insertText, label: edit.label, detail: edit.detail, priority: edit.priority } : undefined;\n        });\n    }\n    provideDocumentOnDropEdits(_model, _position, dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const edit = yield this.getEdit(dataTransfer, token);\n            return edit ? { id: this.id, insertText: edit.insertText, label: edit.label, priority: edit.priority } : undefined;\n        });\n    }\n}\nclass DefaultTextProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'text';\n        this.dropMimeTypes = [Mimes.text];\n        this.pasteMimeTypes = [Mimes.text];\n    }\n    getEdit(dataTransfer, _token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const textEntry = dataTransfer.get(Mimes.text);\n            if (!textEntry) {\n                return;\n            }\n            // Suppress if there's also a uriList entry.\n            // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n            if (dataTransfer.has(Mimes.uriList)) {\n                return;\n            }\n            const insertText = yield textEntry.asString();\n            return {\n                id: this.id,\n                priority: 0,\n                label: localize('text.label', \"Insert Plain Text\"),\n                detail: builtInLabel,\n                insertText\n            };\n        });\n    }\n}\nclass PathProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'uri';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    getEdit(dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entries = yield extractUriList(dataTransfer);\n            if (!entries.length || token.isCancellationRequested) {\n                return;\n            }\n            let uriCount = 0;\n            const insertText = entries\n                .map(({ uri, originalText }) => {\n                if (uri.scheme === Schemas.file) {\n                    return uri.fsPath;\n                }\n                else {\n                    uriCount++;\n                    return originalText;\n                }\n            })\n                .join(' ');\n            let label;\n            if (uriCount > 0) {\n                // Dropping at least one generic uri (such as https) so use most generic label\n                label = entries.length > 1\n                    ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n                    : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n            }\n            else {\n                // All the paths are file paths\n                label = entries.length > 1\n                    ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n                    : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n            }\n            return {\n                id: this.id,\n                priority: 0,\n                insertText,\n                label,\n                detail: builtInLabel,\n            };\n        });\n    }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n    constructor(_workspaceContextService) {\n        super();\n        this._workspaceContextService = _workspaceContextService;\n        this.id = 'relativePath';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    getEdit(dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entries = yield extractUriList(dataTransfer);\n            if (!entries.length || token.isCancellationRequested) {\n                return;\n            }\n            const relativeUris = coalesce(entries.map(({ uri }) => {\n                const root = this._workspaceContextService.getWorkspaceFolder(uri);\n                return root ? relativePath(root.uri, uri) : undefined;\n            }));\n            if (!relativeUris.length) {\n                return;\n            }\n            return {\n                id: this.id,\n                priority: 0,\n                insertText: relativeUris.join(' '),\n                label: entries.length > 1\n                    ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n                    : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n                detail: builtInLabel,\n            };\n        });\n    }\n};\nRelativePathProvider = __decorate([\n    __param(0, IWorkspaceContextService)\n], RelativePathProvider);\nfunction extractUriList(dataTransfer) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const urlListEntry = dataTransfer.get(Mimes.uriList);\n        if (!urlListEntry) {\n            return [];\n        }\n        const strUriList = yield urlListEntry.asString();\n        const entries = [];\n        for (const entry of UriList.parse(strUriList)) {\n            try {\n                entries.push({ uri: URI.parse(entry), originalText: entry });\n            }\n            catch (_a) {\n                // noop\n            }\n        }\n        return entries;\n    });\n}\nexport let DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultDropProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultDropProvidersFeature);\nexport let DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultPasteProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultPasteProvidersFeature);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nexport let DropIntoEditorController = class DropIntoEditorController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(DropIntoEditorController.ID);\n    }\n    constructor(editor, instantiationService, _languageFeaturesService, _treeViewsDragAndDropService) {\n        super();\n        this._languageFeaturesService = _languageFeaturesService;\n        this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n        this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n        this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n        this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, { id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") }));\n        this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n    }\n    changeDropType() {\n        this._postDropWidgetManager.tryShowSelector();\n    }\n    onDropIntoEditor(editor, position, dragEvent) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer || !editor.hasModel()) {\n                return;\n            }\n            (_a = this._currentOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n            editor.focus();\n            editor.setPosition(position);\n            const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token);\n                try {\n                    const ourDataTransfer = yield this.extractDataTransferData(dragEvent);\n                    if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    const model = editor.getModel();\n                    if (!model) {\n                        return;\n                    }\n                    const providers = this._languageFeaturesService.documentOnDropEditProvider\n                        .ordered(model)\n                        .filter(provider => {\n                        if (!provider.dropMimeTypes) {\n                            // Keep all providers that don't specify mime types\n                            return true;\n                        }\n                        return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n                    });\n                    const edits = yield this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n                    if (tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    if (edits.length) {\n                        const canShowWidget = editor.getOption(34 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n                        // Pass in the parent token here as it tracks cancelling the entire drop operation\n                        yield this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex: 0, allEdits: edits }, canShowWidget, token);\n                    }\n                }\n                finally {\n                    tokenSource.dispose();\n                    if (this._currentOperation === p) {\n                        this._currentOperation = undefined;\n                    }\n                }\n            }));\n            this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n            this._currentOperation = p;\n        });\n    }\n    getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield raceCancellation(Promise.all(providers.map(provider => {\n                return provider.provideDocumentOnDropEdits(model, position, dataTransfer, tokenSource.token);\n            })), tokenSource.token);\n            const edits = coalesce(results !== null && results !== void 0 ? results : []);\n            edits.sort((a, b) => b.priority - a.priority);\n            return edits;\n        });\n    }\n    extractDataTransferData(dragEvent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer) {\n                return new VSDataTransfer();\n            }\n            const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n            if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n                const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n                if (Array.isArray(data)) {\n                    for (const id of data) {\n                        const treeDataTransfer = yield this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n                        if (treeDataTransfer) {\n                            for (const [type, value] of treeDataTransfer) {\n                                dataTransfer.replace(type, value);\n                            }\n                        }\n                    }\n                }\n            }\n            return dataTransfer;\n        });\n    }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ITreeViewsDnDService)\n], DropIntoEditorController);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { DefaultDropProvidersFeature } from './defaultProviders.js';\nimport { DropIntoEditorController, changeDropTypeCommandId, dropWidgetVisibleCtx } from './dropIntoEditorController.js';\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changeDropTypeCommandId,\n            precondition: dropWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        (_a = DropIntoEditorController.get(editor)) === null || _a === void 0 ? void 0 : _a.changeDropType();\n    }\n});\nregisterEditorFeature(DefaultDropProvidersFeature);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { IBulkEditService, ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet PostEditWidget = class PostEditWidget extends Disposable {\n    constructor(typeId, editor, visibleContext, showCommand, range, edits, onSelectNewEdit, _contextMenuService, contextKeyService, _keybindingService) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.showCommand = showCommand;\n        this.range = range;\n        this.edits = edits;\n        this.onSelectNewEdit = onSelectNewEdit;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = true;\n        this.create();\n        this.visibleContext = visibleContext.bindTo(contextKeyService);\n        this.visibleContext.set(true);\n        this._register(toDisposable(() => this.visibleContext.reset()));\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n        this._register(toDisposable((() => this.editor.removeContentWidget(this))));\n        this._register(this.editor.onDidChangeCursorPosition(e => {\n            if (!range.containsPosition(e.position)) {\n                this.dispose();\n            }\n        }));\n        this._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n            this._updateButtonTitle();\n        }));\n    }\n    _updateButtonTitle() {\n        var _a;\n        const binding = (_a = this._keybindingService.lookupKeybinding(this.showCommand.id)) === null || _a === void 0 ? void 0 : _a.getLabel();\n        this.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n    }\n    create() {\n        this.domNode = dom.$('.post-edit-widget');\n        this.button = this._register(new Button(this.domNode, {\n            supportIcons: true,\n        }));\n        this.button.label = '$(insert)';\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n    }\n    getId() {\n        return PostEditWidget.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.range.getEndPosition(),\n            preference: [2 /* ContentWidgetPositionPreference.BELOW */]\n        };\n    }\n    showSelector() {\n        this._contextMenuService.showContextMenu({\n            getAnchor: () => {\n                const pos = dom.getDomNodePagePosition(this.button.element);\n                return { x: pos.left + pos.width, y: pos.top + pos.height };\n            },\n            getActions: () => {\n                return this.edits.allEdits.map((edit, i) => toAction({\n                    id: '',\n                    label: edit.label,\n                    checked: i === this.edits.activeEditIndex,\n                    run: () => {\n                        if (i !== this.edits.activeEditIndex) {\n                            return this.onSelectNewEdit(i);\n                        }\n                    },\n                }));\n            }\n        });\n    }\n};\nPostEditWidget.baseId = 'editor.widget.postEditWidget';\nPostEditWidget = __decorate([\n    __param(7, IContextMenuService),\n    __param(8, IContextKeyService),\n    __param(9, IKeybindingService)\n], PostEditWidget);\nexport let PostEditWidgetManager = class PostEditWidgetManager extends Disposable {\n    constructor(_id, _editor, _visibleContext, _showCommand, _instantiationService, _bulkEditService) {\n        super();\n        this._id = _id;\n        this._editor = _editor;\n        this._visibleContext = _visibleContext;\n        this._showCommand = _showCommand;\n        this._instantiationService = _instantiationService;\n        this._bulkEditService = _bulkEditService;\n        this._currentWidget = this._register(new MutableDisposable());\n        this._register(Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelContent)(() => this.clear()));\n    }\n    applyEditAndShowIfNeeded(ranges, edits, canShowWidget, token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._editor.getModel();\n            if (!model || !ranges.length) {\n                return;\n            }\n            const edit = edits.allEdits[edits.activeEditIndex];\n            if (!edit) {\n                return;\n            }\n            const combinedWorkspaceEdit = {\n                edits: [\n                    ...ranges.map(range => new ResourceTextEdit(model.uri, typeof edit.insertText === 'string'\n                        ? { range, text: edit.insertText, insertAsSnippet: false }\n                        : { range, text: edit.insertText.snippet, insertAsSnippet: true })),\n                    ...((_b = (_a = edit.additionalEdit) === null || _a === void 0 ? void 0 : _a.edits) !== null && _b !== void 0 ? _b : [])\n                ]\n            };\n            // Use a decoration to track edits around the trigger range\n            const primaryRange = ranges[0];\n            const editTrackingDecoration = model.deltaDecorations([], [{\n                    range: primaryRange,\n                    options: { description: 'paste-line-suffix', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */ }\n                }]);\n            let editResult;\n            let editRange;\n            try {\n                editResult = yield this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n                editRange = model.getDecorationRange(editTrackingDecoration[0]);\n            }\n            finally {\n                model.deltaDecorations(editTrackingDecoration, []);\n            }\n            if (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n                this.show(editRange !== null && editRange !== void 0 ? editRange : primaryRange, edits, (newEditIndex) => __awaiter(this, void 0, void 0, function* () {\n                    const model = this._editor.getModel();\n                    if (!model) {\n                        return;\n                    }\n                    yield model.undo();\n                    this.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, token);\n                }));\n            }\n        });\n    }\n    show(range, edits, onDidSelectEdit) {\n        this.clear();\n        if (this._editor.hasModel()) {\n            this._currentWidget.value = this._instantiationService.createInstance(PostEditWidget, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n        }\n    }\n    clear() {\n        this._currentWidget.clear();\n    }\n    tryShowSelector() {\n        var _a;\n        (_a = this._currentWidget.value) === null || _a === void 0 ? void 0 : _a.showSelector();\n    }\n};\nPostEditWidgetManager = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IBulkEditService)\n], PostEditWidgetManager);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { localize } from '../../../../nls.js';\nconst IEditorCancellationTokens = createDecorator('IEditorCancelService');\nconst ctxCancellableOperation = new RawContextKey('cancellableOperation', false, localize('cancellableOperation', 'Whether the editor runs a cancellable operation, e.g. like \\'Peek References\\''));\nregisterSingleton(IEditorCancellationTokens, class {\n    constructor() {\n        this._tokens = new WeakMap();\n    }\n    add(editor, cts) {\n        let data = this._tokens.get(editor);\n        if (!data) {\n            data = editor.invokeWithinContext(accessor => {\n                const key = ctxCancellableOperation.bindTo(accessor.get(IContextKeyService));\n                const tokens = new LinkedList();\n                return { key, tokens };\n            });\n            this._tokens.set(editor, data);\n        }\n        let removeFn;\n        data.key.set(true);\n        removeFn = data.tokens.push(cts);\n        return () => {\n            // remove w/o cancellation\n            if (removeFn) {\n                removeFn();\n                data.key.set(!data.tokens.isEmpty());\n                removeFn = undefined;\n            }\n        };\n    }\n    cancel(editor) {\n        const data = this._tokens.get(editor);\n        if (!data) {\n            return;\n        }\n        // remove with cancellation\n        const cts = data.tokens.pop();\n        if (cts) {\n            cts.cancel();\n            data.key.set(!data.tokens.isEmpty());\n        }\n    }\n}, 1 /* InstantiationType.Delayed */);\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n    constructor(editor, parent) {\n        super(parent);\n        this.editor = editor;\n        this._unregister = editor.invokeWithinContext(accessor => accessor.get(IEditorCancellationTokens).add(editor, this));\n    }\n    dispose() {\n        this._unregister();\n        super.dispose();\n    }\n}\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.cancelOperation',\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 9 /* KeyCode.Escape */\n            },\n            precondition: ctxCancellableOperation\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        accessor.get(IEditorCancellationTokens).cancel(editor);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n    constructor(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & 1 /* CodeEditorStateFlag.Value */) !== 0) {\n            const model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        else {\n            this.modelVersionId = null;\n        }\n        if ((this.flags & 4 /* CodeEditorStateFlag.Position */) !== 0) {\n            this.position = editor.getPosition();\n        }\n        else {\n            this.position = null;\n        }\n        if ((this.flags & 2 /* CodeEditorStateFlag.Selection */) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        else {\n            this.selection = null;\n        }\n        if ((this.flags & 8 /* CodeEditorStateFlag.Scroll */) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n        else {\n            this.scrollLeft = -1;\n            this.scrollTop = -1;\n        }\n    }\n    _equals(other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        const state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    }\n    validate(editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    }\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n    constructor(editor, flags, range, parent) {\n        super(editor, parent);\n        this._listener = new DisposableStore();\n        if (flags & 4 /* CodeEditorStateFlag.Position */) {\n            this._listener.add(editor.onDidChangeCursorPosition(e => {\n                if (!range || !Range.containsPosition(range, e.position)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 2 /* CodeEditorStateFlag.Selection */) {\n            this._listener.add(editor.onDidChangeCursorSelection(e => {\n                if (!range || !Range.containsRange(range, e.selection)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 8 /* CodeEditorStateFlag.Scroll */) {\n            this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n        }\n        if (flags & 1 /* CodeEditorStateFlag.Value */) {\n            this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n            this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n        }\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n    constructor(model, parent) {\n        super(parent);\n        this._listener = model.onDidChangeContent(() => this.cancel());\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { MinimapPosition, OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport class FindDecorations {\n    constructor(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    dispose() {\n        this._editor.removeDecorations(this._allDecorations());\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    reset() {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    getCount() {\n        return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n    getFindScope() {\n        if (this._findScopeDecorationIds[0]) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n        }\n        return null;\n    }\n    getFindScopes() {\n        if (this._findScopeDecorationIds.length) {\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\n            if (scopes.length) {\n                return scopes;\n            }\n        }\n        return null;\n    }\n    getStartPosition() {\n        return this._startPosition;\n    }\n    setStartPosition(newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    }\n    _getDecorationIndex(decorationId) {\n        const index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    }\n    getDecorationRangeAt(index) {\n        const decorationId = index < this._decorations.length ? this._decorations[index] : null;\n        if (decorationId) {\n            return this._editor.getModel().getDecorationRange(decorationId);\n        }\n        return null;\n    }\n    getCurrentMatchesPosition(desiredRange) {\n        const candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (const candidate of candidates) {\n            const candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n        return 0;\n    }\n    setCurrentFindMatch(nextMatch) {\n        let newCurrentDecorationId = null;\n        let matchPosition = 0;\n        if (nextMatch) {\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\n                const range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations((changeAccessor) => {\n                if (this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n                    this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        const lineBeforeEnd = rng.endLineNumber - 1;\n                        const lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    }\n    set(findMatches, findScopes) {\n        this._editor.changeDecorations((accessor) => {\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            const newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                const lineCount = this._editor.getModel().getLineCount();\n                const height = this._editor.getLayoutInfo().height;\n                const approxPixelsPerLine = height / lineCount;\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (let i = 1, len = findMatches.length; i < len; i++) {\n                    const range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            const newFindMatchesDecorations = new Array(findMatches.length);\n            for (let i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\n                this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (this._findScopeDecorationIds.length) {\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n                this._findScopeDecorationIds = [];\n            }\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n            }\n        });\n    }\n    matchBeforePosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n    matchAfterPosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n    _allDecorations() {\n        let result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationIds.length) {\n            result.push(...this._findScopeDecorationIds);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    }\n}\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'current-find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 13,\n    className: 'currentFindMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 10,\n    className: 'findMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-no-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'findMatch',\n    showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-only-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n    description: 'find-range-highlight',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'rangeHighlight',\n    isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n    description: 'find-scope',\n    className: 'findScope',\n    isWholeLine: true\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport class ReplaceAllCommand {\n    constructor(editorSelection, ranges, replaceStrings) {\n        this._editorSelection = editorSelection;\n        this._ranges = ranges;\n        this._replaceStrings = replaceStrings;\n        this._trackedEditorSelectionId = null;\n    }\n    getEditOperations(model, builder) {\n        if (this._ranges.length > 0) {\n            // Collect all edit operations\n            const ops = [];\n            for (let i = 0; i < this._ranges.length; i++) {\n                ops.push({\n                    range: this._ranges[i],\n                    text: this._replaceStrings[i]\n                });\n            }\n            // Sort them in ascending order by range starts\n            ops.sort((o1, o2) => {\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\n            });\n            // Merge operations that touch each other\n            const resultOps = [];\n            let previousOp = ops[0];\n            for (let i = 1; i < ops.length; i++) {\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n                    // These operations are one after another and can be merged\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\n                    previousOp.text = previousOp.text + ops[i].text;\n                }\n                else {\n                    resultOps.push(previousOp);\n                    previousOp = ops[i];\n                }\n            }\n            resultOps.push(previousOp);\n            for (const op of resultOps) {\n                builder.addEditOperation(op.range, op.text);\n            }\n        }\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../../base/common/search.js';\n/**\n * Assigned when the replace pattern is entirely static.\n */\nclass StaticValueReplacePattern {\n    constructor(staticValue) {\n        this.staticValue = staticValue;\n        this.kind = 0 /* ReplacePatternKind.StaticValue */;\n    }\n}\n/**\n * Assigned when the replace pattern has replacement patterns.\n */\nclass DynamicPiecesReplacePattern {\n    constructor(pieces) {\n        this.pieces = pieces;\n        this.kind = 1 /* ReplacePatternKind.DynamicPieces */;\n    }\n}\nexport class ReplacePattern {\n    static fromStaticValue(value) {\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\n    }\n    get hasReplacementPatterns() {\n        return (this._state.kind === 1 /* ReplacePatternKind.DynamicPieces */);\n    }\n    constructor(pieces) {\n        if (!pieces || pieces.length === 0) {\n            this._state = new StaticValueReplacePattern('');\n        }\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n        }\n        else {\n            this._state = new DynamicPiecesReplacePattern(pieces);\n        }\n    }\n    buildReplaceString(matches, preserveCase) {\n        if (this._state.kind === 0 /* ReplacePatternKind.StaticValue */) {\n            if (preserveCase) {\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n            }\n            else {\n                return this._state.staticValue;\n            }\n        }\n        let result = '';\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\n            const piece = this._state.pieces[i];\n            if (piece.staticValue !== null) {\n                // static value ReplacePiece\n                result += piece.staticValue;\n                continue;\n            }\n            // match index ReplacePiece\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\n                const repl = [];\n                const lenOps = piece.caseOps.length;\n                let opIdx = 0;\n                for (let idx = 0, len = match.length; idx < len; idx++) {\n                    if (opIdx >= lenOps) {\n                        repl.push(match.slice(idx));\n                        break;\n                    }\n                    switch (piece.caseOps[opIdx]) {\n                        case 'U':\n                            repl.push(match[idx].toUpperCase());\n                            break;\n                        case 'u':\n                            repl.push(match[idx].toUpperCase());\n                            opIdx++;\n                            break;\n                        case 'L':\n                            repl.push(match[idx].toLowerCase());\n                            break;\n                        case 'l':\n                            repl.push(match[idx].toLowerCase());\n                            opIdx++;\n                            break;\n                        default:\n                            repl.push(match[idx]);\n                    }\n                }\n                match = repl.join('');\n            }\n            result += match;\n        }\n        return result;\n    }\n    static _substitute(matchIndex, matches) {\n        if (matches === null) {\n            return '';\n        }\n        if (matchIndex === 0) {\n            return matches[0];\n        }\n        let remainder = '';\n        while (matchIndex > 0) {\n            if (matchIndex < matches.length) {\n                // A match can be undefined\n                const match = (matches[matchIndex] || '');\n                return match + remainder;\n            }\n            remainder = String(matchIndex % 10) + remainder;\n            matchIndex = Math.floor(matchIndex / 10);\n        }\n        return '$' + remainder;\n    }\n}\n/**\n * A replace piece can either be a static string or an index to a specific match.\n */\nexport class ReplacePiece {\n    static staticValue(value) {\n        return new ReplacePiece(value, -1, null);\n    }\n    static caseOps(index, caseOps) {\n        return new ReplacePiece(null, index, caseOps);\n    }\n    constructor(staticValue, matchIndex, caseOps) {\n        this.staticValue = staticValue;\n        this.matchIndex = matchIndex;\n        if (!caseOps || caseOps.length === 0) {\n            this.caseOps = null;\n        }\n        else {\n            this.caseOps = caseOps.slice(0);\n        }\n    }\n}\nclass ReplacePieceBuilder {\n    constructor(source) {\n        this._source = source;\n        this._lastCharIndex = 0;\n        this._result = [];\n        this._resultLen = 0;\n        this._currentStaticPiece = '';\n    }\n    emitUnchanged(toCharIndex) {\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n        this._lastCharIndex = toCharIndex;\n    }\n    emitStatic(value, toCharIndex) {\n        this._emitStatic(value);\n        this._lastCharIndex = toCharIndex;\n    }\n    _emitStatic(value) {\n        if (value.length === 0) {\n            return;\n        }\n        this._currentStaticPiece += value;\n    }\n    emitMatchIndex(index, toCharIndex, caseOps) {\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\n        this._lastCharIndex = toCharIndex;\n    }\n    finalize() {\n        this.emitUnchanged(this._source.length);\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        return new ReplacePattern(this._result);\n    }\n}\n/**\n * \\n\t\t\t=> inserts a LF\n * \\t\t\t\t=> inserts a TAB\n * \\\\\t\t\t=> inserts a \"\\\".\n * \\u\t\t\t=> upper-cases one character in a match.\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\n * \\l\t\t\t=> lower-cases one character in a match.\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\n * $$\t\t\t=> inserts a \"$\".\n * $& and $0\t=> inserts the matched substring.\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\n * everything else stays untouched\n *\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n */\nexport function parseReplaceString(replaceString) {\n    if (!replaceString || replaceString.length === 0) {\n        return new ReplacePattern(null);\n    }\n    const caseOps = [];\n    const result = new ReplacePieceBuilder(replaceString);\n    for (let i = 0, len = replaceString.length; i < len; i++) {\n        const chCode = replaceString.charCodeAt(i);\n        if (chCode === 92 /* CharCode.Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            // let replaceWithCharacter: string | null = null;\n            switch (nextChCode) {\n                case 92 /* CharCode.Backslash */:\n                    // \\\\ => inserts a \"\\\"\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\\\', i + 1);\n                    break;\n                case 110 /* CharCode.n */:\n                    // \\n => inserts a LF\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\n', i + 1);\n                    break;\n                case 116 /* CharCode.t */:\n                    // \\t => inserts a TAB\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\t', i + 1);\n                    break;\n                // Case modification of string replacements, patterned after Boost, but only applied\n                // to the replacement text, not subsequent content.\n                case 117 /* CharCode.u */:\n                // \\u => upper-cases one character.\n                case 85 /* CharCode.U */:\n                // \\U => upper-cases ALL following characters.\n                case 108 /* CharCode.l */:\n                // \\l => lower-cases one character.\n                case 76 /* CharCode.L */:\n                    // \\L => lower-cases ALL following characters.\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('', i + 1);\n                    caseOps.push(String.fromCharCode(nextChCode));\n                    break;\n            }\n            continue;\n        }\n        if (chCode === 36 /* CharCode.DollarSign */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a $\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            if (nextChCode === 36 /* CharCode.DollarSign */) {\n                // $$ => inserts a \"$\"\n                result.emitUnchanged(i - 1);\n                result.emitStatic('$', i + 1);\n                continue;\n            }\n            if (nextChCode === 48 /* CharCode.Digit0 */ || nextChCode === 38 /* CharCode.Ampersand */) {\n                // $& and $0 => inserts the matched substring.\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(0, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n            if (49 /* CharCode.Digit1 */ <= nextChCode && nextChCode <= 57 /* CharCode.Digit9 */) {\n                // $n\n                let matchIndex = nextChCode - 48 /* CharCode.Digit0 */;\n                // peek next char to probe for $nn\n                if (i + 1 < len) {\n                    const nextNextChCode = replaceString.charCodeAt(i + 1);\n                    if (48 /* CharCode.Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* CharCode.Digit9 */) {\n                        // $nn\n                        // move to next char\n                        i++;\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* CharCode.Digit0 */);\n                        result.emitUnchanged(i - 2);\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                        caseOps.length = 0;\n                        continue;\n                    }\n                }\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n        }\n    }\n    return result.finalize();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstInSorted } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport const ToggleCaseSensitiveKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */ }\n};\nexport const ToggleWholeWordKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */ }\n};\nexport const ToggleRegexKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */ }\n};\nexport const ToggleSearchScopeKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */ }\n};\nexport const TogglePreserveCaseKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */ }\n};\nexport const FIND_IDS = {\n    StartFindAction: 'actions.find',\n    StartFindWithSelection: 'actions.findWithSelection',\n    StartFindWithArgs: 'editor.actions.findWithArgs',\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n    GoToMatchFindAction: 'editor.action.goToMatchFindAction',\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n    CloseFindWidgetCommand: 'closeFindWidget',\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\n    ToggleRegexCommand: 'toggleFindRegex',\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\n    TogglePreserveCaseCommand: 'togglePreserveCase',\n    ReplaceOneAction: 'editor.action.replaceOne',\n    ReplaceAllAction: 'editor.action.replaceAll',\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\nexport class FindModelBoundToEditorModel {\n    constructor(editor, state) {\n        this._toDispose = new DisposableStore();\n        this._editor = editor;\n        this._state = state;\n        this._isDisposed = false;\n        this._startSearchingTimer = new TimeoutTimer();\n        this._decorations = new FindDecorations(editor);\n        this._toDispose.add(this._decorations);\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n        this._toDispose.add(this._updateDecorationsScheduler);\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */\n                || e.reason === 5 /* CursorChangeReason.Undo */\n                || e.reason === 6 /* CursorChangeReason.Redo */) {\n                this._decorations.setStartPosition(this._editor.getPosition());\n            }\n        }));\n        this._ignoreModelContentChanged = false;\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (this._ignoreModelContentChanged) {\n                return;\n            }\n            if (e.isFlush) {\n                // a model.setValue() was called\n                this._decorations.reset();\n            }\n            this._decorations.setStartPosition(this._editor.getPosition());\n            this._updateDecorationsScheduler.schedule();\n        }));\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this.research(false, this._state.searchScope);\n    }\n    dispose() {\n        this._isDisposed = true;\n        dispose(this._startSearchingTimer);\n        this._toDispose.dispose();\n    }\n    _onStateChanged(e) {\n        if (this._isDisposed) {\n            // The find model is disposed during a find state changed event\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            // The find model will be disposed momentarily\n            return;\n        }\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n            const model = this._editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                this._startSearchingTimer.cancel();\n                this._startSearchingTimer.setIfNotSet(() => {\n                    if (e.searchScope) {\n                        this.research(e.moveCursor, this._state.searchScope);\n                    }\n                    else {\n                        this.research(e.moveCursor);\n                    }\n                }, RESEARCH_DELAY);\n            }\n            else {\n                if (e.searchScope) {\n                    this.research(e.moveCursor, this._state.searchScope);\n                }\n                else {\n                    this.research(e.moveCursor);\n                }\n            }\n        }\n    }\n    static _getSearchRange(model, findScope) {\n        // If we have set now or before a find scope, use it for computing the search range\n        if (findScope) {\n            return findScope;\n        }\n        return model.getFullModelRange();\n    }\n    research(moveCursor, newFindScope) {\n        let findScopes = null;\n        if (typeof newFindScope !== 'undefined') {\n            if (newFindScope !== null) {\n                if (!Array.isArray(newFindScope)) {\n                    findScopes = [newFindScope];\n                }\n                else {\n                    findScopes = newFindScope;\n                }\n            }\n        }\n        else {\n            findScopes = this._decorations.getFindScopes();\n        }\n        if (findScopes !== null) {\n            findScopes = findScopes.map(findScope => {\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\n                    let endLineNumber = findScope.endLineNumber;\n                    if (findScope.endColumn === 1) {\n                        endLineNumber = endLineNumber - 1;\n                    }\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n                }\n                return findScope;\n            });\n        }\n        const findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n        this._decorations.set(findMatches, findScopes);\n        const editorSelection = this._editor.getSelection();\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\n            // current selection is not on top of a match\n            // try to find its nearest result from the top of the document\n            const matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n        }\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n        if (moveCursor && this._editor.getOption(39 /* EditorOption.find */).cursorMoveOnType) {\n            this._moveToNextMatch(this._decorations.getStartPosition());\n        }\n    }\n    _hasMatches() {\n        return (this._state.matchesCount > 0);\n    }\n    _cannotFind() {\n        if (!this._hasMatches()) {\n            const findScope = this._decorations.getFindScope();\n            if (findScope) {\n                // Reveal the selection so user is reminded that 'selection find' is on.\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* ScrollType.Smooth */);\n            }\n            return true;\n        }\n        return false;\n    }\n    _setCurrentFindMatch(match) {\n        const matchesPosition = this._decorations.setCurrentFindMatch(match);\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n        this._editor.setSelection(match);\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* ScrollType.Smooth */);\n    }\n    _prevSearchPosition(before) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === 1) {\n            if (lineNumber === 1) {\n                lineNumber = model.getLineCount();\n            }\n            else {\n                lineNumber--;\n            }\n            column = model.getLineMaxColumn(lineNumber);\n        }\n        else {\n            column--;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToPrevMatch(before, isRecursed = false) {\n        if (!this._state.canNavigateBack()) {\n            // we are beyond the first matched find result\n            // instead of doing nothing, we should refocus the first item\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n                before = this._prevSearchPosition(before);\n                prevMatchRange = this._decorations.matchBeforePosition(before);\n            }\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._cannotFind()) {\n            return;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(before)) {\n            before = searchRange.getEndPosition();\n        }\n        // ...|...(----)...\n        if (before.isBefore(searchRange.getStartPosition())) {\n            before = searchRange.getEndPosition();\n        }\n        const { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, false);\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._prevSearchPosition(position);\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, false);\n        }\n        if (!prevMatch) {\n            // there is precisely one match and selection is on top of it\n            return;\n        }\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n        }\n        this._setCurrentFindMatch(prevMatch.range);\n    }\n    moveToPrevMatch() {\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n    _nextSearchPosition(after) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n            if (lineNumber === model.getLineCount()) {\n                lineNumber = 1;\n            }\n            else {\n                lineNumber++;\n            }\n            column = 1;\n        }\n        else {\n            column++;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToNextMatch(after) {\n        if (!this._state.canNavigateForward()) {\n            // we are beyond the last matched find result\n            // instead of doing nothing, we should refocus the last item\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n                // Looks like we're stuck at this position, unacceptable!\n                after = this._nextSearchPosition(after);\n                nextMatchRange = this._decorations.matchAfterPosition(after);\n            }\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        const nextMatch = this._getNextMatch(after, false, true);\n        if (nextMatch) {\n            this._setCurrentFindMatch(nextMatch.range);\n        }\n    }\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\n        if (this._cannotFind()) {\n            return null;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(after)) {\n            after = searchRange.getStartPosition();\n        }\n        // ...|...(----)...\n        if (after.isBefore(searchRange.getStartPosition())) {\n            after = searchRange.getStartPosition();\n        }\n        const { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, captureMatches);\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._nextSearchPosition(position);\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, captureMatches);\n        }\n        if (!nextMatch) {\n            // there is precisely one match and selection is on top of it\n            return null;\n        }\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n        }\n        return nextMatch;\n    }\n    moveToNextMatch() {\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n    _moveToMatch(index) {\n        const decorationRange = this._decorations.getDecorationRangeAt(index);\n        if (decorationRange) {\n            this._setCurrentFindMatch(decorationRange);\n        }\n    }\n    moveToMatch(index) {\n        this._moveToMatch(index);\n    }\n    _getReplacePattern() {\n        if (this._state.isRegex) {\n            return parseReplaceString(this._state.replaceString);\n        }\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n    replace() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const replacePattern = this._getReplacePattern();\n        const selection = this._editor.getSelection();\n        const nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n        if (nextMatch) {\n            if (selection.equalsRange(nextMatch.range)) {\n                // selection sits on a find match => replace it!\n                const replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n                const command = new ReplaceCommand(selection, replaceString);\n                this._executeEditorCommand('replace', command);\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n                this.research(true);\n            }\n            else {\n                this._decorations.setStartPosition(this._editor.getPosition());\n                this._setCurrentFindMatch(nextMatch.range);\n            }\n        }\n    }\n    _findMatches(findScopes, captureMatches, limitResultCount) {\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n    replaceAll() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n            this._largeReplaceAll();\n        }\n        else {\n            this._regularReplaceAll(findScopes);\n        }\n        this.research(false);\n    }\n    _largeReplaceAll() {\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null);\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return;\n        }\n        let searchRegex = searchData.regex;\n        if (!searchRegex.multiline) {\n            let mod = 'mu';\n            if (searchRegex.ignoreCase) {\n                mod += 'i';\n            }\n            if (searchRegex.global) {\n                mod += 'g';\n            }\n            searchRegex = new RegExp(searchRegex.source, mod);\n        }\n        const model = this._editor.getModel();\n        const modelText = model.getValue(1 /* EndOfLinePreference.LF */);\n        const fullModelRange = model.getFullModelRange();\n        const replacePattern = this._getReplacePattern();\n        let resultText;\n        const preserveCase = this._state.preserveCase;\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\n            resultText = modelText.replace(searchRegex, function () {\n                return replacePattern.buildReplaceString(arguments, preserveCase);\n            });\n        }\n        else {\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n        }\n        const command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n        this._executeEditorCommand('replaceAll', command);\n    }\n    _regularReplaceAll(findScopes) {\n        const replacePattern = this._getReplacePattern();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        const replaceStrings = [];\n        for (let i = 0, len = matches.length; i < len; i++) {\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n        }\n        const command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n        this._executeEditorCommand('replaceAll', command);\n    }\n    selectAllMatches() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n        // If one of the ranges is the editor selection, then maintain it as primary\n        const editorSelection = this._editor.getSelection();\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const sel = selections[i];\n            if (sel.equalsRange(editorSelection)) {\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n                break;\n            }\n        }\n        this._editor.setSelections(selections);\n    }\n    _executeEditorCommand(source, command) {\n        try {\n            this._ignoreModelContentChanged = true;\n            this._editor.pushUndoStop();\n            this._editor.executeCommand(source, command);\n            this._editor.pushUndoStop();\n        }\n        finally {\n            this._ignoreModelContentChanged = false;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport './findOptionsWidget.css';\nimport { CaseSensitiveToggle, RegexToggle, WholeWordsToggle } from '../../../../base/browser/ui/findinput/findInputToggles.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { FIND_IDS } from './findModel.js';\nimport { asCssVariable, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nexport class FindOptionsWidget extends Widget {\n    constructor(editor, state, keybindingService) {\n        super();\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\n        this._isVisible = false;\n        this._editor = editor;\n        this._state = state;\n        this._keybindingService = keybindingService;\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'findOptionsWidget';\n        this._domNode.style.display = 'none';\n        this._domNode.style.top = '10px';\n        this._domNode.style.zIndex = '12';\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        const toggleStyles = {\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n        };\n        this.caseSensitive = this._register(new CaseSensitiveToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand), isChecked: this._state.matchCase }, toggleStyles)));\n        this._domNode.appendChild(this.caseSensitive.domNode);\n        this._register(this.caseSensitive.onChange(() => {\n            this._state.change({\n                matchCase: this.caseSensitive.checked\n            }, false);\n        }));\n        this.wholeWords = this._register(new WholeWordsToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand), isChecked: this._state.wholeWord }, toggleStyles)));\n        this._domNode.appendChild(this.wholeWords.domNode);\n        this._register(this.wholeWords.onChange(() => {\n            this._state.change({\n                wholeWord: this.wholeWords.checked\n            }, false);\n        }));\n        this.regex = this._register(new RegexToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand), isChecked: this._state.isRegex }, toggleStyles)));\n        this._domNode.appendChild(this.regex.domNode);\n        this._register(this.regex.onChange(() => {\n            this._state.change({\n                isRegex: this.regex.checked\n            }, false);\n        }));\n        this._editor.addOverlayWidget(this);\n        this._register(this._state.onFindReplaceStateChange((e) => {\n            let somethingChanged = false;\n            if (e.isRegex) {\n                this.regex.checked = this._state.isRegex;\n                somethingChanged = true;\n            }\n            if (e.wholeWord) {\n                this.wholeWords.checked = this._state.wholeWord;\n                somethingChanged = true;\n            }\n            if (e.matchCase) {\n                this.caseSensitive.checked = this._state.matchCase;\n                somethingChanged = true;\n            }\n            if (!this._state.isRevealed && somethingChanged) {\n                this._revealTemporarily();\n            }\n        }));\n        this._register(dom.addDisposableListener(this._domNode, dom.EventType.MOUSE_LEAVE, (e) => this._onMouseLeave()));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\n    }\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindOptionsWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n        };\n    }\n    highlightFindOptions() {\n        this._revealTemporarily();\n    }\n    _revealTemporarily() {\n        this._show();\n        this._hideSoon.schedule();\n    }\n    _onMouseLeave() {\n        this._hideSoon.schedule();\n    }\n    _onMouseOver() {\n        this._hideSoon.cancel();\n    }\n    _show() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        this._domNode.style.display = 'block';\n    }\n    _hide() {\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._domNode.style.display = 'none';\n    }\n}\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n    if (override === 1 /* FindOptionOverride.True */) {\n        return true;\n    }\n    if (override === 2 /* FindOptionOverride.False */) {\n        return false;\n    }\n    return value;\n}\nexport class FindReplaceState extends Disposable {\n    get searchString() { return this._searchString; }\n    get replaceString() { return this._replaceString; }\n    get isRevealed() { return this._isRevealed; }\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\n    get actualIsRegex() { return this._isRegex; }\n    get actualWholeWord() { return this._wholeWord; }\n    get actualMatchCase() { return this._matchCase; }\n    get actualPreserveCase() { return this._preserveCase; }\n    get searchScope() { return this._searchScope; }\n    get matchesPosition() { return this._matchesPosition; }\n    get matchesCount() { return this._matchesCount; }\n    get currentMatch() { return this._currentMatch; }\n    constructor() {\n        super();\n        this._onFindReplaceStateChange = this._register(new Emitter());\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n        this._searchString = '';\n        this._replaceString = '';\n        this._isRevealed = false;\n        this._isReplaceRevealed = false;\n        this._isRegex = false;\n        this._isRegexOverride = 0 /* FindOptionOverride.NotSet */;\n        this._wholeWord = false;\n        this._wholeWordOverride = 0 /* FindOptionOverride.NotSet */;\n        this._matchCase = false;\n        this._matchCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._preserveCase = false;\n        this._preserveCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._searchScope = null;\n        this._matchesPosition = 0;\n        this._matchesCount = 0;\n        this._currentMatch = null;\n        this._loop = true;\n        this._isSearching = false;\n        this._filters = null;\n    }\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n        const changeEvent = {\n            moveCursor: false,\n            updateHistory: false,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        if (matchesCount === 0) {\n            matchesPosition = 0;\n        }\n        if (matchesPosition > matchesCount) {\n            matchesPosition = matchesCount;\n        }\n        if (this._matchesPosition !== matchesPosition) {\n            this._matchesPosition = matchesPosition;\n            changeEvent.matchesPosition = true;\n            somethingChanged = true;\n        }\n        if (this._matchesCount !== matchesCount) {\n            this._matchesCount = matchesCount;\n            changeEvent.matchesCount = true;\n            somethingChanged = true;\n        }\n        if (typeof currentMatch !== 'undefined') {\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n                this._currentMatch = currentMatch;\n                changeEvent.currentMatch = true;\n                somethingChanged = true;\n            }\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    change(newState, moveCursor, updateHistory = true) {\n        var _a;\n        const changeEvent = {\n            moveCursor: moveCursor,\n            updateHistory: updateHistory,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        const oldEffectiveIsRegex = this.isRegex;\n        const oldEffectiveWholeWords = this.wholeWord;\n        const oldEffectiveMatchCase = this.matchCase;\n        const oldEffectivePreserveCase = this.preserveCase;\n        if (typeof newState.searchString !== 'undefined') {\n            if (this._searchString !== newState.searchString) {\n                this._searchString = newState.searchString;\n                changeEvent.searchString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.replaceString !== 'undefined') {\n            if (this._replaceString !== newState.replaceString) {\n                this._replaceString = newState.replaceString;\n                changeEvent.replaceString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRevealed !== 'undefined') {\n            if (this._isRevealed !== newState.isRevealed) {\n                this._isRevealed = newState.isRevealed;\n                changeEvent.isRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n                this._isReplaceRevealed = newState.isReplaceRevealed;\n                changeEvent.isReplaceRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRegex !== 'undefined') {\n            this._isRegex = newState.isRegex;\n        }\n        if (typeof newState.wholeWord !== 'undefined') {\n            this._wholeWord = newState.wholeWord;\n        }\n        if (typeof newState.matchCase !== 'undefined') {\n            this._matchCase = newState.matchCase;\n        }\n        if (typeof newState.preserveCase !== 'undefined') {\n            this._preserveCase = newState.preserveCase;\n        }\n        if (typeof newState.searchScope !== 'undefined') {\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\n                var _a;\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\n                });\n            }))) {\n                this._searchScope = newState.searchScope;\n                changeEvent.searchScope = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.loop !== 'undefined') {\n            if (this._loop !== newState.loop) {\n                this._loop = newState.loop;\n                changeEvent.loop = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isSearching !== 'undefined') {\n            if (this._isSearching !== newState.isSearching) {\n                this._isSearching = newState.isSearching;\n                changeEvent.isSearching = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.filters !== 'undefined') {\n            if (this._filters) {\n                this._filters.update(newState.filters);\n            }\n            else {\n                this._filters = newState.filters;\n            }\n            changeEvent.filters = true;\n            somethingChanged = true;\n        }\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* FindOptionOverride.NotSet */);\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* FindOptionOverride.NotSet */);\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        if (oldEffectiveIsRegex !== this.isRegex) {\n            somethingChanged = true;\n            changeEvent.isRegex = true;\n        }\n        if (oldEffectiveWholeWords !== this.wholeWord) {\n            somethingChanged = true;\n            changeEvent.wholeWord = true;\n        }\n        if (oldEffectiveMatchCase !== this.matchCase) {\n            somethingChanged = true;\n            changeEvent.matchCase = true;\n        }\n        if (oldEffectivePreserveCase !== this.preserveCase) {\n            somethingChanged = true;\n            changeEvent.preserveCase = true;\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    canNavigateBack() {\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\n    }\n    canNavigateForward() {\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\n    }\n    canNavigateInLoop() {\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { asCssVariable, contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetForeground, editorWidgetResizeBorder, errorForeground, focusBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, toolbarHoverBackground, widgetBorder, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n        super();\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(88 /* EditorOption.readOnly */)) {\n                if (this._codeEditor.getOption(88 /* EditorOption.readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(140 /* EditorOption.layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(39 /* EditorOption.find */)) {\n                const supportLoop = this._codeEditor.getOption(39 /* EditorOption.find */).loop;\n                this._state.change({ loop: supportLoop }, false);\n                const addExtraSpaceOnTop = this._codeEditor.getOption(39 /* EditorOption.find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n            if (this._isVisible) {\n                const globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        })));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(39 /* EditorOption.find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(88 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            const showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        if (this._matchesCount.firstChild) {\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\n        }\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        const selection = this._codeEditor.getSelection();\n        const isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        const isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        const findInputIsNonEmpty = (this._state.searchString.length > 0);\n        const matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        const canReplace = !this._codeEditor.getOption(88 /* EditorOption.readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(39 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(39 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(39 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                const scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(81 /* EditorOption.padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!dom.isInDOM(this._domNode)) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            const widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        this._findInput.layout({ collapsedFindWidget, narrowFindWidget, reducedFindWidget });\n        if (this._resized) {\n            const findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            const selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showCommonFindToggles: true,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.NextMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        const findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Toggle({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false,\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    const selections = this._codeEditor.getSelections();\n                    selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter(element => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* KeyCode.Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }));\n        actionsContainer.appendChild(this._closeBtn.domNode);\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }));\n        const replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* Orientation.VERTICAL */, size: 2 });\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            const width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n    }\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n    constructor(opts) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.title = this._opts.label;\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            var _a, _b;\n            if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            (_b = (_a = this._opts).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    addBackgroundColorRule('.find-widget', widgetBackground);\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const widgetBorderColor = theme.getColor(widgetBorder);\n    if (widgetBorderColor) {\n        collector.addRule(`.monaco-editor .find-widget { border-left: 1px solid ${widgetBorderColor}; border-right: 1px solid ${widgetBorderColor}; border-bottom: 1px solid ${widgetBorderColor}; }`);\n    }\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\n    if (findMatchBorder) {\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const foreground = theme.getColor(editorWidgetForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\n    }\n    const error = theme.getColor(errorForeground);\n    if (error) {\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\n    }\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n    if (resizeBorderBackground) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\n    }\n    else {\n        const border = theme.getColor(editorWidgetBorder);\n        if (border) {\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\n        }\n    }\n    // Action bars\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n    if (toolbarHoverBackgroundColor) {\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\n    }\n    // This rule is used to override the outline color for synthetic-focus find input.\n    const focusOutline = theme.getColor(focusBorder);\n    if (focusOutline) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nexport let CommonFindController = class CommonFindController extends Disposable {\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController.ID);\n    }\n    constructor(editor, contextKeyService, storageService, clipboardService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            const shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(39 /* EditorOption.find */).loop\n                });\n            }\n        }));\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                const selections = this._editor.getSelections();\n                selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter(element => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    _start(opts, newState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.disposeModel();\n            if (!this._editor.hasModel()) {\n                // cannot do anything with an editor that doesn't have a model...\n                return;\n            }\n            const stateChanges = Object.assign(Object.assign({}, newState), { isRevealed: true });\n            if (opts.seedSearchStringFromSelection === 'single') {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n                if (selectionSearchString) {\n                    if (this._state.isRegex) {\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                    }\n                    else {\n                        stateChanges.searchString = selectionSearchString;\n                    }\n                }\n            }\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n                const selectionSearchString = yield this.getGlobalBufferTerm();\n                if (!this._editor.hasModel()) {\n                    // the editor has lost its model in the meantime\n                    return;\n                }\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            // Overwrite isReplaceRevealed\n            if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n                stateChanges.isReplaceRevealed = true;\n            }\n            else if (!this._findWidgetVisible.get()) {\n                stateChanges.isReplaceRevealed = false;\n            }\n            if (opts.updateSearchScope) {\n                const currentSelections = this._editor.getSelections();\n                if (currentSelections.some(selection => !selection.isEmpty())) {\n                    stateChanges.searchScope = currentSelections;\n                }\n            }\n            stateChanges.loop = opts.loop;\n            this._state.change(stateChanges, false);\n            if (!this._model) {\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n            }\n        });\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    goToMatch(index) {\n        if (this._model) {\n            this._model.moveToMatch(index);\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        if (this._model) {\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    getGlobalBufferTerm() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._editor.getOption(39 /* EditorOption.find */).globalFindClipboard\n                && this._editor.hasModel()\n                && !this._editor.getModel().isTooLargeForSyncing()) {\n                return this._clipboardService.readFindText();\n            }\n            return '';\n        });\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(39 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService)\n], CommonFindController);\nexport let FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\n        super(editor, _contextKeyService, _storageService, clipboardService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._notificationService = _notificationService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    _start(opts, newState) {\n        const _super = Object.create(null, {\n            _start: { get: () => super._start }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._widget) {\n                this._createFindWidget();\n            }\n            const selection = this._editor.getSelection();\n            let updateSearchScope = false;\n            switch (this._editor.getOption(39 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    updateSearchScope = true;\n                    break;\n                case 'never':\n                    updateSearchScope = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    updateSearchScope = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n            yield _super._start.call(this, opts, newState);\n            if (this._widget) {\n                if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                    this._widget.focusReplaceInput();\n                }\n                else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                    this._widget.focusFindInput();\n                }\n            }\n        });\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService)\n], FindController);\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(39 /* EditorOption.find */).globalFindClipboard,\n        shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(39 /* EditorOption.find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    regex: { type: 'boolean' },\n                    regexOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.isRegexOverride', 'Overrides \"Use Regular Expression\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    wholeWord: { type: 'boolean' },\n                    wholeWordOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.wholeWordOverride', 'Overrides \"Match Whole Word\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    matchCase: { type: 'boolean' },\n                    matchCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.matchCaseOverride', 'Overrides \"Math Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    preserveCase: { type: 'boolean' },\n                    preserveCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.preserveCaseOverride', 'Overrides \"Preserve Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            description: findArgDescription\n        });\n    }\n    run(accessor, editor, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                const newState = args ? {\n                    searchString: args.searchString,\n                    replaceString: args.replaceString,\n                    isReplaceRevealed: args.replaceString !== undefined,\n                    isRegex: args.isRegex,\n                    // isRegexOverride: args.regexOverride,\n                    wholeWord: args.matchWholeWord,\n                    // wholeWordOverride: args.wholeWordOverride,\n                    matchCase: args.isCaseSensitive,\n                    // matchCaseOverride: args.matchCaseOverride,\n                    preserveCase: args.preserveCase,\n                    // preserveCaseOverride: args.preserveCaseOverride,\n                } : {};\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                    shouldAnimate: true,\n                    updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                    loop: editor.getOption(39 /* EditorOption.find */).loop\n                }, newState);\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */,\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'multiple',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(39 /* EditorOption.find */).loop\n                });\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller && !this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(39 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */, secondary: [61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */, secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.GoToMatchFindAction,\n            label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n            alias: 'Go to Match...',\n            precondition: CONTEXT_FIND_WIDGET_VISIBLE\n        });\n        this._highlightDecorations = [];\n    }\n    run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const matchesCount = controller.getState().matchesCount;\n        if (matchesCount < 1) {\n            const notificationService = accessor.get(INotificationService);\n            notificationService.notify({\n                severity: Severity.Warning,\n                message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n            });\n            return;\n        }\n        const quickInputService = accessor.get(IQuickInputService);\n        const inputBox = quickInputService.createInputBox();\n        inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n        const toFindMatchIndex = (value) => {\n            const index = parseInt(value);\n            if (isNaN(index)) {\n                return undefined;\n            }\n            const matchCount = controller.getState().matchesCount;\n            if (index > 0 && index <= matchCount) {\n                return index - 1; // zero based\n            }\n            else if (index < 0 && index >= -matchCount) {\n                return matchCount + index;\n            }\n            return undefined;\n        };\n        const updatePickerAndEditor = (value) => {\n            const index = toFindMatchIndex(value);\n            if (typeof index === 'number') {\n                // valid\n                inputBox.validationMessage = undefined;\n                controller.goToMatch(index);\n                const currentMatch = controller.getState().currentMatch;\n                if (currentMatch) {\n                    this.addDecorations(editor, currentMatch);\n                }\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n                this.clearDecorations(editor);\n            }\n        };\n        inputBox.onDidChangeValue(value => {\n            updatePickerAndEditor(value);\n        });\n        inputBox.onDidAccept(() => {\n            const index = toFindMatchIndex(inputBox.value);\n            if (typeof index === 'number') {\n                controller.goToMatch(index);\n                inputBox.hide();\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n            }\n        });\n        inputBox.onDidHide(() => {\n            this.clearDecorations(editor);\n            inputBox.dispose();\n        });\n        inputBox.show();\n    }\n    clearDecorations(editor) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n        });\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ]);\n        });\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (!controller) {\n                return;\n            }\n            const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n            if (selectionSearchString) {\n                controller.setSearchString(selectionSearchString);\n            }\n            if (!this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(39 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */ },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(88 /* EditorOption.readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(39 /* EditorOption.find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\n"],"names":["DragAndDropCommand","constructor","selection","targetPosition","copy","this","targetSelection","getEditOperations","model","builder","text","getValueInRange","addEditOperation","Range","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","Selection","endLineNumber","startLineNumber","endColumn","startColumn","computeCursorState","helper","hasTriggerModifier","e","isMacintosh","altKey","ctrlKey","DragAndDropController","Disposable","editor","super","_editor","_dndDecorationIds","createDecorationsCollection","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","onDidBlurEditorText","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","possibleSelections","getSelections","filter","position","length","event","showAt","_hitContent","_hitMargin","newCursorPosition","Position","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","pushUndoStop","executeCommand","ID","set","range","options","_DECORATION_OPTIONS","revealPosition","clear","type","dispose","ModelDecorationOptions","register","description","className","registerEditorContribution","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","CommandsRegistry","registerCommand","accessor","_len","arguments","args","Array","_key","resource","assertType","URI","isUri","outlineService","get","IOutlineModelService","modelService","ITextModelService","reference","createModelReference","getOrCreate","object","textEditorModel","CancellationToken","None","getTopLevelSymbols","__decorate","decorators","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","TreeElement","remove","_a","parent","children","delete","id","findId","candidate","container","candidateId","concat","name","undefined","empty","element","size","OutlineElement","symbol","Map","OutlineGroup","label","order","OutlineModel","create","registry","textModel","token","cts","CancellationTokenSource","uri","provider","ordered","promises","index","group","displayName","provideDocumentSymbols","info","_makeOutlineElement","err","onUnexpectedExternalError","_groups","listener","onDidChange","newProvider","cancel","all","isCancellationRequested","_compact","finally","res","childInfo","count","Iterable","first","values","child","roots","push","sort","a","b","compareRangesUsingStarts","asListOfDocumentSymbols","bucket","_flattenDocumentSymbols","compare","entries","overrideContainerLabel","entry","kind","tags","detail","containerName","selectionRange","createDecorator","OutlineModelService","_languageFeaturesService","debounces","_disposables","DisposableStore","_cache","LRUCache","_debounceInformation","for","documentSymbolProvider","min","add","onModelRemoved","data","versionId","getVersionId","source","promiseCnt","promise","now","Date","outlineModel","update","catch","_err","onCancellationRequested","ILanguageFeaturesService","ILanguageFeatureDebounceService","IModelService","registerSingleton","changePasteTypeCommandId","pasteWidgetVisibleCtx","RawContextKey","localize","vscodeClipboardMime","CopyPasteController","getContribution","instantiationService","_bulkEditService","_clipboardService","_quickInputService","_progressService","getContainerDomNode","addDisposableListener","handleCopy","handlePaste","_pasteProgressManager","InlineProgressManager","_postPasteWidgetManager","createInstance","PostEditWidgetManager","changePasteType","tryShowSelector","pasteAs","preferredId","focus","_pasteAsActionContext","document","execCommand","isPasteAsEnabled","enabled","_b","clipboardData","hasTextFocus","getModel","selections","enableEmptySelectionClipboard","ranges","wasFromEmptySelection","isEmpty","getLineLength","toCopy","_getViewModel","getPlainTextToCopy","platform","defaultPastePayload","multicursorText","isArray","pasteOnNewLine","mode","providers","documentPasteEditProvider","x","prepareDocumentPaste","setCopyMetadata","dataTransfer","toVSDataTransfer","providerCopyMimeTypes","flatMap","copyMimeTypes","handle","generateUuid","createCancelablePromise","results","coalesce","console","error","reverse","mime","replace","_currentCopyOperation","dataTransferPromise","_currentPasteOperation","metadata","fetchCopyMetadata","toExternalVSDataTransfer","allPotentialMimeTypes","types","Mimes","uriList","allProviders","pasteMimeTypes","some","matchesMimeType","preventDefault","stopImmediatePropagation","showPasteAsPick","doPasteInline","p","hasModel","tokenSource","EditorStateCancellationTokenSource","mergeInDataFromCopy","supportedProviders","isSupportedPasteProvider","applyDefaultPasteHandler","providerEdits","getPasteEdits","canShowWidget","showPasteSelector","applyEditAndShowIfNeeded","activeEditIndex","allEdits","showWhile","pickedEdit","find","edit","selected","pick","placeHolder","combinedWorkspaceEdit","edits","ResourceTextEdit","insertText","insertAsSnippet","snippet","additionalEdit","createCombinedWorkspaceEdit","withProgress","location","title","setData","JSON","stringify","rawMetadata","getData","parse","toMergeDataTransfer","has","resources","readResources","append","createStringDataTransferItem","UriList","raceCancellation","provideDocumentPasteEdits","call","priority","_c","textDataTransfer","asString","payload","trigger","Boolean","matches","IInstantiationService","IBulkEditService","IClipboardService","IQuickInputService","IProgressService","registerEditorFeature","DefaultPasteProvidersFeature","registerEditorCommand","EditorCommand","precondition","kbOpts","weight","primary","runEditorCommand","_accessor","_args","registerEditorAction","EditorAction","nls","alias","schema","properties","run","builtInLabel","SimplePasteAndDropProvider","_model","_ranges","getEdit","provideDocumentOnDropEdits","_position","DefaultTextProvider","dropMimeTypes","_token","textEntry","PathProvider","extractUriList","uriCount","_ref","originalText","scheme","Schemas","file","fsPath","join","RelativePathProvider","_workspaceContextService","relativeUris","_ref2","root","getWorkspaceFolder","relativePath","urlListEntry","strUriList","IWorkspaceContextService","DefaultDropProvidersFeature","languageFeaturesService","workspaceContextService","documentOnDropEditProvider","changeDropTypeCommandId","dropWidgetVisibleCtx","DropIntoEditorController","_treeViewsDragAndDropService","treeItemsTransfer","LocalSelectionTransfer","getInstance","_dropProgressManager","_postDropWidgetManager","onDropIntoEditor","changeDropType","dragEvent","_currentOperation","setPosition","ourDataTransfer","extractDataTransferData","getDropEdits","showDropSelector","fromPositions","VSDataTransfer","hasData","DraggedTreeItemsIdentifier","prototype","treeDataTransfer","removeDragOperationTransfer","identifier","ITreeViewsDnDService","PostEditWidget","typeId","visibleContext","showCommand","onSelectNewEdit","_contextMenuService","contextKeyService","_keybindingService","allowEditorOverflow","suppressMouseDown","bindTo","toDisposable","reset","addContentWidget","layoutContentWidget","removeContentWidget","onDidChangeCursorPosition","Event","runAndSubscribe","onDidUpdateKeybindings","_updateButtonTitle","binding","lookupKeybinding","getLabel","button","domNode","dom","$","Button","supportIcons","CLICK","showSelector","getId","baseId","getDomNode","getPosition","preference","showContextMenu","getAnchor","pos","left","width","y","top","height","getActions","toAction","checked","IContextMenuService","IContextKeyService","IKeybindingService","_id","_visibleContext","_showCommand","_instantiationService","_currentWidget","MutableDisposable","any","onDidChangeModel","onDidChangeModelContent","primaryRange","editTrackingDecoration","deltaDecorations","stickiness","editResult","editRange","getDecorationRange","isApplied","show","newEditIndex","undo","onDidSelectEdit","IEditorCancellationTokens","ctxCancellableOperation","_tokens","WeakMap","removeFn","invokeWithinContext","tokens","LinkedList","pop","EditorKeybindingCancellationTokenSource","_unregister","EditorState","flags","modelVersionId","strings","toString","scrollLeft","getScrollLeft","scrollTop","getScrollTop","_equals","other","state","equalsRange","validate","_listener","onDidChangeCursorSelection","containsRange","onDidScrollChange","_","TextModelCancellationTokenSource","onDidChangeContent","FindDecorations","_decorations","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","removeDecorations","_allDecorations","getCount","getFindScope","getFindScopes","scopes","findScopeDecorationId","setStartPosition","newStartPosition","setCurrentFindMatch","_getDecorationIndex","decorationId","indexOf","getDecorationRangeAt","getCurrentMatchesPosition","desiredRange","candidates","getDecorationsInRange","candidateOpts","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","nextMatch","newCurrentDecorationId","matchPosition","len","changeDecorations","changeAccessor","changeDecorationOptions","removeDecoration","rng","lineBeforeEnd","lineBeforeEndMaxColumn","getLineMaxColumn","addDecoration","_RANGE_HIGHLIGHT_DECORATION","findMatches","findScopes","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","lineCount","getLineCount","approxPixelsPerLine","getLayoutInfo","mergeLinesDelta","Math","max","ceil","prevStartLineNumber","prevEndLineNumber","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","forEach","findScope","_FIND_SCOPE_DECORATION","matchBeforePosition","matchAfterPosition","zIndex","showIfCollapsed","overviewRuler","color","themeColorFromId","overviewRulerFindMatchForeground","OverviewRulerLane","Center","minimap","minimapFindMatch","MinimapPosition","Inline","isWholeLine","ReplaceAllCommand","editorSelection","replaceStrings","_editorSelection","_replaceStrings","_trackedEditorSelectionId","ops","o1","o2","resultOps","previousOp","plusRange","op","trackSelection","getTrackedSelection","StaticValueReplacePattern","staticValue","DynamicPiecesReplacePattern","pieces","ReplacePattern","fromStaticValue","ReplacePiece","hasReplacementPatterns","_state","buildReplaceString","preserveCase","buildReplaceStringWithCasePreserved","piece","match","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","idx","slice","toUpperCase","toLowerCase","remainder","String","floor","ReplacePieceBuilder","_source","_lastCharIndex","_result","_resultLen","_currentStaticPiece","emitUnchanged","toCharIndex","_emitStatic","substring","emitStatic","emitMatchIndex","finalize","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_FIND_INPUT_FOCUSED","toNegated","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","TogglePreserveCaseKeybinding","FIND_IDS","MATCHES_LIMIT","FindModelBoundToEditorModel","_toDispose","_isDisposed","_startSearchingTimer","TimeoutTimer","_updateDecorationsScheduler","RunOnceScheduler","research","reason","_ignoreModelContentChanged","isFlush","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","setIfNotSet","moveCursor","_getSearchRange","getFullModelRange","newFindScope","_findMatches","currentMatchesPosition","matchAfterSelection","findFirstInSorted","changeMatchInfo","cursorMoveOnType","_moveToNextMatch","_hasMatches","matchesCount","_cannotFind","revealRangeInCenterIfOutsideViewport","_setCurrentFindMatch","matchesPosition","setSelection","_prevSearchPosition","before","isUsingLineStops","_moveToPrevMatch","isRecursed","canNavigateBack","nextMatchRange","prevMatchRange","searchRange","isBefore","prevMatch","findPreviousMatch","moveToPrevMatch","_nextSearchPosition","after","canNavigateForward","_getNextMatch","captureMatches","forceMove","findNextMatch","moveToNextMatch","_moveToMatch","decorationRange","moveToMatch","_getReplacePattern","replaceString","chCode","charCodeAt","nextChCode","nextNextChCode","fromCharCode","parseReplaceString","replacePattern","command","ReplaceCommand","_executeEditorCommand","limitResultCount","searchRanges","scope","replaceAll","_largeReplaceAll","_regularReplaceAll","searchData","SearchParams","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","modelText","getValue","fullModelRange","resultText","ReplaceCommandThatPreservesSelection","m","selectAllMatches","FindOptionsWidget","Widget","keybindingService","_hideSoon","_hide","_isVisible","_domNode","createElement","style","display","setAttribute","toggleStyles","inputActiveOptionBorder","asCssVariable","inputActiveOptionForeground","inputActiveOptionBackground","caseSensitive","CaseSensitiveToggle","assign","appendTitle","_keybindingLabelFor","isChecked","appendChild","onChange","change","wholeWords","WholeWordsToggle","RegexToggle","addOverlayWidget","somethingChanged","isRevealed","_revealTemporarily","MOUSE_LEAVE","_onMouseLeave","_onMouseOver","actionId","kb","removeOverlayWidget","highlightFindOptions","_show","effectiveOptionValue","override","FindReplaceState","_searchString","_replaceString","_isRevealed","_isReplaceRevealed","_isRegexOverride","_isRegex","_wholeWordOverride","_wholeWord","_matchCaseOverride","_matchCase","_preserveCaseOverride","_preserveCase","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","_searchScope","_matchesPosition","_matchesCount","currentMatch","_currentMatch","_onFindReplaceStateChange","Emitter","_loop","_isSearching","_filters","changeEvent","updateHistory","loop","isSearching","filters","fire","newState","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","every","newSearchScope","existingSearchScope","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","findSelectionIcon","registerIcon","Codicon","findCollapsedIcon","chevronRight","findExpandedIcon","chevronDown","findReplaceIcon","findReplaceAllIcon","findPreviousMatchIcon","arrowUp","findNextMatchIcon","arrowDown","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","MAX_MATCHES_COUNT_WIDTH","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","FindWidgetViewZone","afterLineNumber","heightInPx","stopPropagationForMultiLineUpwards","textarea","isMultiline","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","FindWidget","codeEditor","controller","contextViewProvider","themeService","storageService","notificationService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","Delayer","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","updateAccessibilitySupport","supportLoop","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","_updateToggleSelectionFindButton","onDidFocusEditorWidget","globalBufferTerm","getGlobalBufferTerm","select","_findInputFocused","_findFocusTracker","inputElement","onDidFocus","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","_viewZoneId","scrollTopChanged","_layoutViewZone","setTimeout","setValue","_reveal","_tryUpdateHeight","setRegex","setWholeWords","setCaseSensitive","setPreserveCase","_toggleSelectionFind","showRedOutline","classList","toggle","_updateMatchesCount","_delayedUpdateHistory","_updateHistory","bind","onUnexpectedError","addToHistory","minWidth","firstChild","removeChild","createTextNode","alertFn","_getAriaLabel","clientWidth","ariaLabel","lineContent","getLineContent","isSelection","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","clearTimeout","autoFindInSelection","isSelectionMultipleLine","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","editorCoords","startCoords","getScrolledVisiblePosition","startLeft","startTop","leftOfFindWidget","endCoords","focusTheEditor","clearMessage","targetScrollTop","viewZone","changeViewZones","_getHeight","addZone","setScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","layoutInfo","contentWidth","contains","editorWidth","minimapWidth","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","maxWidth","findInputWidth","totalheight","totalHeight","focusFindInput","focusReplaceInput","setEndPosition","_onFindInputMouseDown","middleButton","_onFindInputKeyDown","dispatchEvent","insertAtCursor","focusOnCaseSensitive","querySelector","_onReplaceInputKeyDown","store","getVerticalSashLeft","_sash","ContextScopedFindInput","PART_WIDTH","placeholder","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","validation","getRegex","content","message","flexibleHeight","flexibleWidth","flexibleMaxHeight","showCommonFindToggles","showHistoryHint","showHistoryKeybindingHint","inputBoxStyles","defaultInputBoxStyles","defaultToggleStyles","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","SimpleButton","icon","onTrigger","assertIsDefined","getAction","findPart","actionsContainer","Toggle","widgetClose","isEnabled","ContextScopedReplaceInput","appendPreserveCaseLabel","history","getPreserveCase","onPreserveCaseKeyDown","replacePart","replaceActionsContainer","_resizeSash","Sash","orientation","originalWidth","onDidStart","evt","startX","currentX","parseFloat","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","_opts","ThemeIcon","asClassName","tabIndex","onclick","onkeydown","expanded","asClassNameArray","registerThemingParticipant","theme","collector","addBackgroundColorRule","selector","addRule","getColor","editorFindMatchHighlight","editorFindMatch","editorFindRangeHighlight","editorWidgetBackground","widgetShadowColor","widgetShadow","widgetBorderColor","widgetBorder","findMatchHighlightBorder","editorFindMatchHighlightBorder","isHighContrast","findMatchBorder","editorFindMatchBorder","findRangeHighlightBorder","editorFindRangeHighlightBorder","hcBorder","contrastBorder","foreground","editorWidgetForeground","errorForeground","resizeBorderBackground","editorWidgetResizeBorder","border","editorWidgetBorder","toolbarHoverBackgroundColor","toolbarHoverBackground","focusOutline","focusBorder","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","seedSearchStringFromNonEmptySelection","wordAtPosition","getConfiguredWordAtPosition","word","getValueLengthInRange","CommonFindController","clipboardService","_findWidgetVisible","loadQueryState","shouldRestartFind","disposeModel","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","saveQueryState","setGlobalBufferTerm","isFindInputFocused","getState","closeFindWidget","toggleCaseSensitive","toggleWholeWords","toggleRegex","togglePreserveCase","toggleSearchScope","setSearchString","stateChanges","selectionSearchString","currentSelections","start","goToMatch","globalFindClipboard","readFindText","writeFindText","IStorageService","FindController","_contextViewService","_themeService","_widget","_findOptionsWidget","_super","_createFindWidget","ignoreWhenVisible","IContextViewService","IThemeService","INotificationService","StartFindAction","registerMultiEditorAction","MultiEditorAction","ContextKeyExpr","or","EditorContextKeys","kbExpr","menuOpts","menuId","MenuId","MenubarEditMenu","comment","addImplementation","findArgDescription","regexOverride","findInSelection","StartFindWithArgsAction","matchWholeWord","isCaseSensitive","StartFindWithSelectionAction","MatchFindAction","_run","NextMatchFindAction","secondary","and","PreviousMatchFindAction","MoveToMatchFindAction","_highlightDecorations","notify","severity","Severity","Warning","createInputBox","toFindMatchIndex","parseInt","isNaN","matchCount","updatePickerAndEditor","validationMessage","addDecorations","clearDecorations","onDidChangeValue","onDidAccept","hide","onDidHide","overviewRulerRangeHighlight","Full","SelectionMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","currentSelection","findInputFocused","FindCommand","bindToContribution","handler","not","win","linux"],"sourceRoot":""}