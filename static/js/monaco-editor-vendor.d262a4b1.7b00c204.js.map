{"version":3,"file":"static/js/monaco-editor-vendor.d262a4b1.7b00c204.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/nls.js","../../node_modules/monaco-editor/esm/vs/platform/accessibility/browser/accessibilityService.js","../../node_modules/monaco-editor/esm/vs/platform/accessibility/common/accessibility.js","../../node_modules/monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js","../../node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionList.js","../../node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionWidget.js","../../node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js","../../node_modules/monaco-editor/esm/vs/platform/action/common/action.js","../../node_modules/monaco-editor/esm/vs/platform/actions/browser/toolbar.js","../../node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js","../../node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js","../../node_modules/monaco-editor/esm/vs/platform/audioCues/browser/audioCueService.js","../../node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js","../../node_modules/monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js","../../node_modules/monaco-editor/esm/vs/platform/commands/common/commands.js","../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration.js","../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js","../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js","../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurations.js","../../node_modules/monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService.js","../../node_modules/monaco-editor/esm/vs/platform/contextkey/common/scanner.js","../../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js","../../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js","../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js","../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuService.js","../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextView.js","../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextViewService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nlet isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nconst DEFAULT_TAG = 'i-default';\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nfunction findLanguageForModule(config, name) {\n    let result = config[name];\n    if (result) {\n        return result;\n    }\n    result = config['*'];\n    if (result) {\n        return result;\n    }\n    return null;\n}\nfunction endWithSlash(path) {\n    if (path.charAt(path.length - 1) === '/') {\n        return path;\n    }\n    return path + '/';\n}\nfunction getMessagesFromTranslationsService(translationServiceUrl, language, name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + 'vscode/' + endWithSlash(name);\n        const res = yield fetch(url);\n        if (res.ok) {\n            const messages = yield res.json();\n            return messages;\n        }\n        throw new Error(`${res.status} - ${res.statusText}`);\n    });\n}\nfunction createScopedLocalize(scope) {\n    return function (idx, defaultValue) {\n        const restArgs = Array.prototype.slice.call(arguments, 2);\n        return _format(scope[idx], restArgs);\n    };\n}\nexport function localize(data, message, ...args) {\n    return _format(message, args);\n}\nexport function getConfiguredDefaultLocale(_) {\n    // This returns undefined because this implementation isn't used and is overwritten by the loader\n    // when loaded.\n    return undefined;\n}\nexport function setPseudoTranslation(value) {\n    isPseudo = value;\n}\n/**\n * Invoked in a built product at run-time\n */\nexport function create(key, data) {\n    var _a;\n    return {\n        localize: createScopedLocalize(data[key]),\n        getConfiguredDefaultLocale: (_a = data.getConfiguredDefaultLocale) !== null && _a !== void 0 ? _a : ((_) => undefined)\n    };\n}\n/**\n * Invoked by the loader at run-time\n */\nexport function load(name, req, load, config) {\n    var _a;\n    const pluginConfig = (_a = config['vs/nls']) !== null && _a !== void 0 ? _a : {};\n    if (!name || name.length === 0) {\n        return load({\n            localize: localize,\n            getConfiguredDefaultLocale: () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; }\n        });\n    }\n    const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n    const useDefaultLanguage = language === null || language === DEFAULT_TAG;\n    let suffix = '.nls';\n    if (!useDefaultLanguage) {\n        suffix = suffix + '.' + language;\n    }\n    const messagesLoaded = (messages) => {\n        if (Array.isArray(messages)) {\n            messages.localize = createScopedLocalize(messages);\n        }\n        else {\n            messages.localize = createScopedLocalize(messages[name]);\n        }\n        messages.getConfiguredDefaultLocale = () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; };\n        load(messages);\n    };\n    if (typeof pluginConfig.loadBundle === 'function') {\n        pluginConfig.loadBundle(name, language, (err, messages) => {\n            // We have an error. Load the English default strings to not fail\n            if (err) {\n                req([name + '.nls'], messagesLoaded);\n            }\n            else {\n                messagesLoaded(messages);\n            }\n        });\n    }\n    else if (pluginConfig.translationServiceUrl && !useDefaultLanguage) {\n        (() => __awaiter(this, void 0, void 0, function* () {\n            var _b;\n            try {\n                const messages = yield getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);\n                return messagesLoaded(messages);\n            }\n            catch (err) {\n                // Language is already as generic as it gets, so require default messages\n                if (!language.includes('-')) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n                try {\n                    // Since there is a dash, the language configured is a specific sub-language of the same generic language.\n                    // Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a\n                    // Swiss German (de-CH), so try to load the generic German (de) messages instead.\n                    const genericLanguage = language.split('-')[0];\n                    const messages = yield getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);\n                    // We got some messages, so we configure the configuration to use the generic language for this session.\n                    (_b = pluginConfig.availableLanguages) !== null && _b !== void 0 ? _b : (pluginConfig.availableLanguages = {});\n                    pluginConfig.availableLanguages['*'] = genericLanguage;\n                    return messagesLoaded(messages);\n                }\n                catch (err) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n            }\n        }))();\n    }\n    else {\n        req([name + suffix], messagesLoaded, (err) => {\n            if (suffix === '.nls') {\n                console.error('Failed trying to load default language strings', err);\n                return;\n            }\n            console.error(`Failed to load message bundle for language ${language}. Falling back to the default language:`, err);\n            req([name + '.nls'], messagesLoaded);\n        });\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../common/accessibility.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nexport let AccessibilityService = class AccessibilityService extends Disposable {\n    constructor(_contextKeyService, _layoutService, _configurationService) {\n        super();\n        this._contextKeyService = _contextKeyService;\n        this._layoutService = _layoutService;\n        this._configurationService = _configurationService;\n        this._accessibilitySupport = 0 /* AccessibilitySupport.Unknown */;\n        this._onDidChangeScreenReaderOptimized = new Emitter();\n        this._onDidChangeReducedMotion = new Emitter();\n        this._accessibilityModeEnabledContext = CONTEXT_ACCESSIBILITY_MODE_ENABLED.bindTo(this._contextKeyService);\n        const updateContextKey = () => this._accessibilityModeEnabledContext.set(this.isScreenReaderOptimized());\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor.accessibilitySupport')) {\n                updateContextKey();\n                this._onDidChangeScreenReaderOptimized.fire();\n            }\n            if (e.affectsConfiguration('workbench.reduceMotion')) {\n                this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        updateContextKey();\n        this._register(this.onDidChangeScreenReaderOptimized(() => updateContextKey()));\n        const reduceMotionMatcher = window.matchMedia(`(prefers-reduced-motion: reduce)`);\n        this._systemMotionReduced = reduceMotionMatcher.matches;\n        this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n        this.initReducedMotionListeners(reduceMotionMatcher);\n    }\n    initReducedMotionListeners(reduceMotionMatcher) {\n        if (!this._layoutService.hasContainer) {\n            // we can't use `ILayoutService.container` because the application\n            // doesn't have a single container\n            return;\n        }\n        this._register(addDisposableListener(reduceMotionMatcher, 'change', () => {\n            this._systemMotionReduced = reduceMotionMatcher.matches;\n            if (this._configMotionReduced === 'auto') {\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        const updateRootClasses = () => {\n            const reduce = this.isMotionReduced();\n            this._layoutService.container.classList.toggle('reduce-motion', reduce);\n            this._layoutService.container.classList.toggle('enable-motion', !reduce);\n        };\n        updateRootClasses();\n        this._register(this.onDidChangeReducedMotion(() => updateRootClasses()));\n    }\n    get onDidChangeScreenReaderOptimized() {\n        return this._onDidChangeScreenReaderOptimized.event;\n    }\n    isScreenReaderOptimized() {\n        const config = this._configurationService.getValue('editor.accessibilitySupport');\n        return config === 'on' || (config === 'auto' && this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */);\n    }\n    get onDidChangeReducedMotion() {\n        return this._onDidChangeReducedMotion.event;\n    }\n    isMotionReduced() {\n        const config = this._configMotionReduced;\n        return config === 'on' || (config === 'auto' && this._systemMotionReduced);\n    }\n    getAccessibilitySupport() {\n        return this._accessibilitySupport;\n    }\n};\nAccessibilityService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ILayoutService),\n    __param(2, IConfigurationService)\n], AccessibilityService);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilityService = createDecorator('accessibilityService');\nexport const CONTEXT_ACCESSIBILITY_MODE_ENABLED = new RawContextKey('accessibilityModeEnabled', false);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nexport const Categories = Object.freeze({\n    View: { value: localize('view', \"View\"), original: 'View' },\n    Help: { value: localize('help', \"Help\"), original: 'Help' },\n    Test: { value: localize('test', \"Test\"), original: 'Test' },\n    File: { value: localize('file', \"File\"), original: 'File' },\n    Preferences: { value: localize('preferences', \"Preferences\"), original: 'Preferences' },\n    Developer: { value: localize({ key: 'developer', comment: ['A developer on Code itself or someone diagnosing issues in Code'] }, \"Developer\"), original: 'Developer' }\n});\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './actionWidget.css';\nimport { localize } from '../../../nls.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { defaultListStyles } from '../../theme/browser/defaultStyles.js';\nimport { asCssVariable } from '../../theme/common/colorRegistry.js';\nexport const acceptSelectedActionCommand = 'acceptSelectedCodeAction';\nexport const previewSelectedActionCommand = 'previewSelectedCodeAction';\nclass HeaderRenderer {\n    get templateId() { return \"header\" /* ActionListItemKind.Header */; }\n    renderTemplate(container) {\n        container.classList.add('group-header');\n        const text = document.createElement('span');\n        container.append(text);\n        return { container, text };\n    }\n    renderElement(element, _index, templateData) {\n        var _a, _b;\n        templateData.text.textContent = (_b = (_a = element.group) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : '';\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n}\nlet ActionItemRenderer = class ActionItemRenderer {\n    get templateId() { return \"action\" /* ActionListItemKind.Action */; }\n    constructor(_supportsPreview, _keybindingService) {\n        this._supportsPreview = _supportsPreview;\n        this._keybindingService = _keybindingService;\n    }\n    renderTemplate(container) {\n        container.classList.add(this.templateId);\n        const icon = document.createElement('div');\n        icon.className = 'icon';\n        container.append(icon);\n        const text = document.createElement('span');\n        text.className = 'title';\n        container.append(text);\n        const keybinding = new KeybindingLabel(container, OS);\n        return { container, icon, text, keybinding };\n    }\n    renderElement(element, _index, data) {\n        var _a, _b, _c;\n        if ((_a = element.group) === null || _a === void 0 ? void 0 : _a.icon) {\n            data.icon.className = ThemeIcon.asClassName(element.group.icon);\n            if (element.group.icon.color) {\n                data.icon.style.color = asCssVariable(element.group.icon.color.id);\n            }\n        }\n        else {\n            data.icon.className = ThemeIcon.asClassName(Codicon.lightBulb);\n            data.icon.style.color = 'var(--vscode-editorLightBulb-foreground)';\n        }\n        if (!element.item || !element.label) {\n            return;\n        }\n        data.text.textContent = stripNewlines(element.label);\n        data.keybinding.set(element.keybinding);\n        dom.setVisibility(!!element.keybinding, data.keybinding.element);\n        const actionTitle = (_b = this._keybindingService.lookupKeybinding(acceptSelectedActionCommand)) === null || _b === void 0 ? void 0 : _b.getLabel();\n        const previewTitle = (_c = this._keybindingService.lookupKeybinding(previewSelectedActionCommand)) === null || _c === void 0 ? void 0 : _c.getLabel();\n        data.container.classList.toggle('option-disabled', element.disabled);\n        if (element.disabled) {\n            data.container.title = element.label;\n        }\n        else if (actionTitle && previewTitle) {\n            if (this._supportsPreview) {\n                data.container.title = localize({ key: 'label-preview', comment: ['placeholders are keybindings, e.g \"F2 to apply, Shift+F2 to preview\"'] }, \"{0} to apply, {1} to preview\", actionTitle, previewTitle);\n            }\n            else {\n                data.container.title = localize({ key: 'label', comment: ['placeholder is a keybinding, e.g \"F2 to apply\"'] }, \"{0} to apply\", actionTitle);\n            }\n        }\n        else {\n            data.container.title = '';\n        }\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n};\nActionItemRenderer = __decorate([\n    __param(1, IKeybindingService)\n], ActionItemRenderer);\nclass AcceptSelectedEvent extends UIEvent {\n    constructor() { super('acceptSelectedAction'); }\n}\nclass PreviewSelectedEvent extends UIEvent {\n    constructor() { super('previewSelectedAction'); }\n}\nexport let ActionList = class ActionList extends Disposable {\n    constructor(user, preview, items, _delegate, _contextViewService, _keybindingService) {\n        super();\n        this._delegate = _delegate;\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._actionLineHeight = 24;\n        this._headerLineHeight = 26;\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('actionList');\n        const virtualDelegate = {\n            getHeight: element => element.kind === \"header\" /* ActionListItemKind.Header */ ? this._headerLineHeight : this._actionLineHeight,\n            getTemplateId: element => element.kind\n        };\n        this._list = this._register(new List(user, this.domNode, virtualDelegate, [\n            new ActionItemRenderer(preview, this._keybindingService),\n            new HeaderRenderer(),\n        ], {\n            keyboardSupport: false,\n            accessibilityProvider: {\n                getAriaLabel: element => {\n                    if (element.kind === \"action\" /* ActionListItemKind.Action */) {\n                        let label = element.label ? stripNewlines(element === null || element === void 0 ? void 0 : element.label) : '';\n                        if (element.disabled) {\n                            label = localize({ key: 'customQuickFixWidget.labels', comment: [`Action widget labels for accessibility.`] }, \"{0}, Disabled Reason: {1}\", label, element.disabled);\n                        }\n                        return label;\n                    }\n                    return null;\n                },\n                getWidgetAriaLabel: () => localize({ key: 'customQuickFixWidget', comment: [`An action widget option`] }, \"Action Widget\"),\n                getRole: (e) => e.kind === \"action\" /* ActionListItemKind.Action */ ? 'option' : 'separator',\n                getWidgetRole: () => 'listbox'\n            },\n        }));\n        this._list.style(defaultListStyles);\n        this._register(this._list.onMouseClick(e => this.onListClick(e)));\n        this._register(this._list.onMouseOver(e => this.onListHover(e)));\n        this._register(this._list.onDidChangeFocus(() => this._list.domFocus()));\n        this._register(this._list.onDidChangeSelection(e => this.onListSelection(e)));\n        this._allMenuItems = items;\n        this._list.splice(0, this._list.length, this._allMenuItems);\n        if (this._list.length) {\n            this.focusNext();\n        }\n    }\n    focusCondition(element) {\n        return !element.disabled && element.kind === \"action\" /* ActionListItemKind.Action */;\n    }\n    hide(didCancel) {\n        this._delegate.onHide(didCancel);\n        this._contextViewService.hideContextView();\n    }\n    layout(minWidth) {\n        // Updating list height, depending on how many separators and headers there are.\n        const numHeaders = this._allMenuItems.filter(item => item.kind === 'header').length;\n        const itemsHeight = this._allMenuItems.length * this._actionLineHeight;\n        const heightWithHeaders = itemsHeight + numHeaders * this._headerLineHeight - numHeaders * this._actionLineHeight;\n        this._list.layout(heightWithHeaders);\n        // For finding width dynamically (not using resize observer)\n        const itemWidths = this._allMenuItems.map((_, index) => {\n            const element = document.getElementById(this._list.getElementID(index));\n            if (element) {\n                element.style.width = 'auto';\n                const width = element.getBoundingClientRect().width;\n                element.style.width = '';\n                return width;\n            }\n            return 0;\n        });\n        // resize observer - can be used in the future since list widget supports dynamic height but not width\n        const width = Math.max(...itemWidths, minWidth);\n        const maxVhPrecentage = 0.7;\n        const height = Math.min(heightWithHeaders, document.body.clientHeight * maxVhPrecentage);\n        this._list.layout(height, width);\n        this.domNode.style.height = `${height}px`;\n        this._list.domFocus();\n        return width;\n    }\n    focusPrevious() {\n        this._list.focusPrevious(1, true, undefined, this.focusCondition);\n    }\n    focusNext() {\n        this._list.focusNext(1, true, undefined, this.focusCondition);\n    }\n    acceptSelected(preview) {\n        const focused = this._list.getFocus();\n        if (focused.length === 0) {\n            return;\n        }\n        const focusIndex = focused[0];\n        const element = this._list.element(focusIndex);\n        if (!this.focusCondition(element)) {\n            return;\n        }\n        const event = preview ? new PreviewSelectedEvent() : new AcceptSelectedEvent();\n        this._list.setSelection([focusIndex], event);\n    }\n    onListSelection(e) {\n        if (!e.elements.length) {\n            return;\n        }\n        const element = e.elements[0];\n        if (element.item && this.focusCondition(element)) {\n            this._delegate.onSelect(element.item, e.browserEvent instanceof PreviewSelectedEvent);\n        }\n        else {\n            this._list.setSelection([]);\n        }\n    }\n    onListHover(e) {\n        this._list.setFocus(typeof e.index === 'number' ? [e.index] : []);\n    }\n    onListClick(e) {\n        if (e.element && this.focusCondition(e.element)) {\n            this._list.setFocus([]);\n        }\n    }\n};\nActionList = __decorate([\n    __param(4, IContextViewService),\n    __param(5, IKeybindingService)\n], ActionList);\nfunction stripNewlines(str) {\n    return str.replace(/\\r\\n|\\r|\\n/g, ' ');\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport './actionWidget.css';\nimport { localize } from '../../../nls.js';\nimport { acceptSelectedActionCommand, ActionList, previewSelectedActionCommand } from './actionList.js';\nimport { Action2, registerAction2 } from '../../actions/common/actions.js';\nimport { IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nconst ActionWidgetContextKeys = {\n    Visible: new RawContextKey('codeActionMenuVisible', false, localize('codeActionMenuVisible', \"Whether the action widget list is visible\"))\n};\nexport const IActionWidgetService = createDecorator('actionWidgetService');\nlet ActionWidgetService = class ActionWidgetService extends Disposable {\n    get isVisible() {\n        return ActionWidgetContextKeys.Visible.getValue(this._contextKeyService) || false;\n    }\n    constructor(_contextViewService, _contextKeyService, _instantiationService) {\n        super();\n        this._contextViewService = _contextViewService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._list = this._register(new MutableDisposable());\n    }\n    show(user, supportsPreview, items, delegate, anchor, container, actionBarActions) {\n        const visibleContext = ActionWidgetContextKeys.Visible.bindTo(this._contextKeyService);\n        const list = this._instantiationService.createInstance(ActionList, user, supportsPreview, items, delegate);\n        this._contextViewService.showContextView({\n            getAnchor: () => anchor,\n            render: (container) => {\n                visibleContext.set(true);\n                return this._renderWidget(container, list, actionBarActions !== null && actionBarActions !== void 0 ? actionBarActions : []);\n            },\n            onHide: (didCancel) => {\n                visibleContext.reset();\n                this._onWidgetClosed(didCancel);\n            },\n        }, container, false);\n    }\n    acceptSelected(preview) {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.acceptSelected(preview);\n    }\n    focusPrevious() {\n        var _a, _b;\n        (_b = (_a = this._list) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.focusPrevious();\n    }\n    focusNext() {\n        var _a, _b;\n        (_b = (_a = this._list) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.focusNext();\n    }\n    hide() {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.hide();\n        this._list.clear();\n    }\n    _renderWidget(element, list, actionBarActions) {\n        var _a;\n        const widget = document.createElement('div');\n        widget.classList.add('action-widget');\n        element.appendChild(widget);\n        this._list.value = list;\n        if (this._list.value) {\n            widget.appendChild(this._list.value.domNode);\n        }\n        else {\n            throw new Error('List has no value');\n        }\n        const renderDisposables = new DisposableStore();\n        // Invisible div to block mouse interaction in the rest of the UI\n        const menuBlock = document.createElement('div');\n        const block = element.appendChild(menuBlock);\n        block.classList.add('context-view-block');\n        renderDisposables.add(dom.addDisposableListener(block, dom.EventType.MOUSE_DOWN, e => e.stopPropagation()));\n        // Invisible div to block mouse interaction with the menu\n        const pointerBlockDiv = document.createElement('div');\n        const pointerBlock = element.appendChild(pointerBlockDiv);\n        pointerBlock.classList.add('context-view-pointerBlock');\n        // Removes block on click INSIDE widget or ANY mouse movement\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.POINTER_MOVE, () => pointerBlock.remove()));\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.MOUSE_DOWN, () => pointerBlock.remove()));\n        // Action bar\n        let actionBarWidth = 0;\n        if (actionBarActions.length) {\n            const actionBar = this._createActionBar('.action-widget-action-bar', actionBarActions);\n            if (actionBar) {\n                widget.appendChild(actionBar.getContainer().parentElement);\n                renderDisposables.add(actionBar);\n                actionBarWidth = actionBar.getContainer().offsetWidth;\n            }\n        }\n        const width = (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.layout(actionBarWidth);\n        widget.style.width = `${width}px`;\n        const focusTracker = renderDisposables.add(dom.trackFocus(element));\n        renderDisposables.add(focusTracker.onDidBlur(() => this.hide()));\n        return renderDisposables;\n    }\n    _createActionBar(className, actions) {\n        if (!actions.length) {\n            return undefined;\n        }\n        const container = dom.$(className);\n        const actionBar = new ActionBar(container);\n        actionBar.push(actions, { icon: false, label: true });\n        return actionBar;\n    }\n    _onWidgetClosed(didCancel) {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.hide(didCancel);\n    }\n};\nActionWidgetService = __decorate([\n    __param(0, IContextViewService),\n    __param(1, IContextKeyService),\n    __param(2, IInstantiationService)\n], ActionWidgetService);\nregisterSingleton(IActionWidgetService, ActionWidgetService, 1 /* InstantiationType.Delayed */);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 1000;\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'hideCodeActionWidget',\n            title: {\n                value: localize('hideCodeActionWidget.title', \"Hide action widget\"),\n                original: 'Hide action widget'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 9 /* KeyCode.Escape */,\n                secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n            },\n        });\n    }\n    run(accessor) {\n        accessor.get(IActionWidgetService).hide();\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectPrevCodeAction',\n            title: {\n                value: localize('selectPrevCodeAction.title', \"Select previous action\"),\n                original: 'Select previous action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 16 /* KeyCode.UpArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] },\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusPrevious();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectNextCodeAction',\n            title: {\n                value: localize('selectNextCodeAction.title', \"Select next action\"),\n                original: 'Select next action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 18 /* KeyCode.DownArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusNext();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: acceptSelectedActionCommand,\n            title: {\n                value: localize('acceptSelected.title', \"Accept selected action\"),\n                original: 'Accept selected action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 3 /* KeyCode.Enter */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */],\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: previewSelectedActionCommand,\n            title: {\n                value: localize('previewSelected.title', \"Preview selected action\"),\n                original: 'Preview selected action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected(true);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { combinedDisposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nexport function createAndFillInContextMenuActions(menu, options, target, primaryGroup) {\n    const groups = menu.getActions(options);\n    const modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n    const useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n    fillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\n    const groups = menu.getActions(options);\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\n    fillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\n    let primaryBucket;\n    let secondaryBucket;\n    if (Array.isArray(target)) {\n        primaryBucket = target;\n        secondaryBucket = target;\n    }\n    else {\n        primaryBucket = target.primary;\n        secondaryBucket = target.secondary;\n    }\n    const submenuInfo = new Set();\n    for (const [group, actions] of groups) {\n        let target;\n        if (isPrimaryAction(group)) {\n            target = primaryBucket;\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\n                target.push(new Separator());\n            }\n        }\n        else {\n            target = secondaryBucket;\n            if (target.length > 0) {\n                target.push(new Separator());\n            }\n        }\n        for (let action of actions) {\n            if (useAlternativeActions) {\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\n            }\n            const newLen = target.push(action);\n            // keep submenu info for later inlining\n            if (action instanceof SubmenuAction) {\n                submenuInfo.add({ group, action, index: newLen - 1 });\n            }\n        }\n    }\n    // ask the outside if submenu should be inlined or not. only ask when\n    // there would be enough space\n    for (const { group, action, index } of submenuInfo) {\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n        // inlining submenus with length 0 or 1 is easy,\n        // larger submenus need to be checked with the overall limit\n        const submenuActions = action.actions;\n        if (submenuActions.length <= 1 && shouldInlineSubmenu(action, group, target.length)) {\n            target.splice(index, 1, ...submenuActions);\n        }\n    }\n}\nexport let MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n    constructor(action, options, _keybindingService, _notificationService, _contextKeyService, _themeService, _contextMenuService) {\n        super(undefined, action, { icon: !!(action.class || action.item.icon), label: !action.class && !action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable, keybinding: options === null || options === void 0 ? void 0 : options.keybinding, hoverDelegate: options === null || options === void 0 ? void 0 : options.hoverDelegate });\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextKeyService = _contextKeyService;\n        this._themeService = _themeService;\n        this._contextMenuService = _contextMenuService;\n        this._wantsAltCommand = false;\n        this._itemClassDispose = this._register(new MutableDisposable());\n        this._altKey = ModifierKeyEmitter.getInstance();\n    }\n    get _menuItemAction() {\n        return this._action;\n    }\n    get _commandAction() {\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n    }\n    onClick(event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            event.preventDefault();\n            event.stopPropagation();\n            try {\n                yield this.actionRunner.run(this._commandAction, this._context);\n            }\n            catch (err) {\n                this._notificationService.error(err);\n            }\n        });\n    }\n    render(container) {\n        super.render(container);\n        container.classList.add('menu-entry');\n        if (this.options.icon) {\n            this._updateItemClass(this._menuItemAction.item);\n        }\n        let mouseOver = false;\n        let alternativeKeyDown = this._altKey.keyStatus.altKey || ((isWindows || isLinux) && this._altKey.keyStatus.shiftKey);\n        const updateAltState = () => {\n            var _a;\n            const wantsAltCommand = mouseOver && alternativeKeyDown && !!((_a = this._commandAction.alt) === null || _a === void 0 ? void 0 : _a.enabled);\n            if (wantsAltCommand !== this._wantsAltCommand) {\n                this._wantsAltCommand = wantsAltCommand;\n                this.updateLabel();\n                this.updateTooltip();\n                this.updateClass();\n            }\n        };\n        if (this._menuItemAction.alt) {\n            this._register(this._altKey.event(value => {\n                alternativeKeyDown = value.altKey || ((isWindows || isLinux) && value.shiftKey);\n                updateAltState();\n            }));\n        }\n        this._register(addDisposableListener(container, 'mouseleave', _ => {\n            mouseOver = false;\n            updateAltState();\n        }));\n        this._register(addDisposableListener(container, 'mouseenter', _ => {\n            mouseOver = true;\n            updateAltState();\n        }));\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this._commandAction.label;\n        }\n    }\n    getTooltip() {\n        var _a;\n        const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n        const keybindingLabel = keybinding && keybinding.getLabel();\n        const tooltip = this._commandAction.tooltip || this._commandAction.label;\n        let title = keybindingLabel\n            ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n            : tooltip;\n        if (!this._wantsAltCommand && ((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled)) {\n            const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n            const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n            const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n            const altTitleSection = altKeybindingLabel\n                ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n                : altTooltip;\n            title = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n        }\n        return title;\n    }\n    updateClass() {\n        if (this.options.icon) {\n            if (this._commandAction !== this._menuItemAction) {\n                if (this._menuItemAction.alt) {\n                    this._updateItemClass(this._menuItemAction.alt.item);\n                }\n            }\n            else {\n                this._updateItemClass(this._menuItemAction.item);\n            }\n        }\n    }\n    _updateItemClass(item) {\n        this._itemClassDispose.value = undefined;\n        const { element, label } = this;\n        if (!element || !label) {\n            return;\n        }\n        const icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n        if (!icon) {\n            return;\n        }\n        if (ThemeIcon.isThemeIcon(icon)) {\n            // theme icons\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\n            label.classList.add(...iconClasses);\n            this._itemClassDispose.value = toDisposable(() => {\n                label.classList.remove(...iconClasses);\n            });\n        }\n        else {\n            // icon path/url\n            label.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                ? asCSSUrl(icon.dark)\n                : asCSSUrl(icon.light));\n            label.classList.add('icon');\n            this._itemClassDispose.value = combinedDisposable(toDisposable(() => {\n                label.style.backgroundImage = '';\n                label.classList.remove('icon');\n            }), this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                this.updateClass();\n            }));\n        }\n    }\n};\nMenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextKeyService),\n    __param(5, IThemeService),\n    __param(6, IContextMenuService)\n], MenuEntryActionViewItem);\nexport let SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n    constructor(action, options, _keybindingService, _contextMenuService, _themeService) {\n        var _a, _b, _c;\n        const dropdownOptions = Object.assign(Object.assign({}, options), { menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : false, classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined), keybindingProvider: (_c = options === null || options === void 0 ? void 0 : options.keybindingProvider) !== null && _c !== void 0 ? _c : (action => _keybindingService.lookupKeybinding(action.id)) });\n        super(action, { getActions: () => action.actions }, _contextMenuService, dropdownOptions);\n        this._keybindingService = _keybindingService;\n        this._contextMenuService = _contextMenuService;\n        this._themeService = _themeService;\n    }\n    render(container) {\n        super.render(container);\n        assertType(this.element);\n        container.classList.add('menu-entry');\n        const action = this._action;\n        const { icon } = action.item;\n        if (icon && !ThemeIcon.isThemeIcon(icon)) {\n            this.element.classList.add('icon');\n            const setBackgroundImage = () => {\n                if (this.element) {\n                    this.element.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                        ? asCSSUrl(icon.dark)\n                        : asCSSUrl(icon.light));\n                }\n            };\n            setBackgroundImage();\n            this._register(this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                setBackgroundImage();\n            }));\n        }\n    }\n};\nSubmenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, IContextMenuService),\n    __param(4, IThemeService)\n], SubmenuEntryActionViewItem);\nexport let DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\n        var _a, _b, _c;\n        super(null, submenuAction);\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextMenuService = _contextMenuService;\n        this._menuService = _menuService;\n        this._instaService = _instaService;\n        this._storageService = _storageService;\n        this._container = null;\n        this._options = options;\n        this._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n        // determine default action\n        let defaultAction;\n        const defaultActionId = (options === null || options === void 0 ? void 0 : options.persistLastActionId) ? _storageService.get(this._storageKey, 1 /* StorageScope.WORKSPACE */) : undefined;\n        if (defaultActionId) {\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n        }\n        if (!defaultAction) {\n            defaultAction = submenuAction.actions[0];\n        }\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, { keybinding: this._getDefaultActionKeybindingLabel(defaultAction) });\n        const dropdownOptions = Object.assign(Object.assign({ keybindingProvider: action => this._keybindingService.lookupKeybinding(action.id) }, options), { menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true, classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ['codicon', 'codicon-chevron-down'], actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new ActionRunner() });\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n        this._dropdown.actionRunner.onDidRun((e) => {\n            if (e.action instanceof MenuItemAction) {\n                this.update(e.action);\n            }\n        });\n    }\n    update(lastAction) {\n        var _a;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.persistLastActionId) {\n            this._storageService.store(this._storageKey, lastAction.id, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        this._defaultAction.dispose();\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, { keybinding: this._getDefaultActionKeybindingLabel(lastAction) });\n        this._defaultAction.actionRunner = new class extends ActionRunner {\n            runAction(action, context) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    yield action.run(undefined);\n                });\n            }\n        }();\n        if (this._container) {\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\n        }\n    }\n    _getDefaultActionKeybindingLabel(defaultAction) {\n        var _a;\n        let defaultActionKeybinding;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.renderKeybindingWithDefaultActionLabel) {\n            const kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n            if (kb) {\n                defaultActionKeybinding = `(${kb.getLabel()})`;\n            }\n        }\n        return defaultActionKeybinding;\n    }\n    setActionContext(newContext) {\n        super.setActionContext(newContext);\n        this._defaultAction.setActionContext(newContext);\n        this._dropdown.setActionContext(newContext);\n    }\n    render(container) {\n        this._container = container;\n        super.render(this._container);\n        this._container.classList.add('monaco-dropdown-with-default');\n        const primaryContainer = $('.action-container');\n        this._defaultAction.render(append(this._container, primaryContainer));\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(17 /* KeyCode.RightArrow */)) {\n                this._defaultAction.element.tabIndex = -1;\n                this._dropdown.focus();\n                event.stopPropagation();\n            }\n        }));\n        const dropdownContainer = $('.dropdown-action-container');\n        this._dropdown.render(append(this._container, dropdownContainer));\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\n            var _a;\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(15 /* KeyCode.LeftArrow */)) {\n                this._defaultAction.element.tabIndex = 0;\n                this._dropdown.setFocusable(false);\n                (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\n                event.stopPropagation();\n            }\n        }));\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this._dropdown.focus();\n        }\n        else {\n            this._defaultAction.element.tabIndex = 0;\n            this._defaultAction.element.focus();\n        }\n    }\n    blur() {\n        this._defaultAction.element.tabIndex = -1;\n        this._dropdown.blur();\n        this._container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this._defaultAction.element.tabIndex = 0;\n        }\n        else {\n            this._defaultAction.element.tabIndex = -1;\n            this._dropdown.setFocusable(false);\n        }\n    }\n    dispose() {\n        this._defaultAction.dispose();\n        this._dropdown.dispose();\n        super.dispose();\n    }\n};\nDropdownWithDefaultActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextMenuService),\n    __param(5, IMenuService),\n    __param(6, IInstantiationService),\n    __param(7, IStorageService)\n], DropdownWithDefaultActionViewItem);\nlet SubmenuEntrySelectActionViewItem = class SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n    constructor(action, contextViewService) {\n        super(null, action, action.actions.map(a => ({\n            text: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n            isDisabled: !a.enabled,\n        })), 0, contextViewService, defaultSelectBoxStyles, { ariaLabel: action.tooltip, optionsAsChildren: true });\n        this.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n    }\n    render(container) {\n        super.render(container);\n        container.style.borderColor = asCssVariable(selectBorder);\n    }\n    runAction(option, index) {\n        const action = this.action.actions[index];\n        if (action) {\n            this.actionRunner.run(action);\n        }\n    }\n};\nSubmenuEntrySelectActionViewItem = __decorate([\n    __param(1, IContextViewService)\n], SubmenuEntrySelectActionViewItem);\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService, action, options) {\n    if (action instanceof MenuItemAction) {\n        return instaService.createInstance(MenuEntryActionViewItem, action, options);\n    }\n    else if (action instanceof SubmenuItemAction) {\n        if (action.item.isSelection) {\n            return instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n        }\n        else {\n            if (action.item.rememberDefaultAction) {\n                return instaService.createInstance(DropdownWithDefaultActionViewItem, action, Object.assign(Object.assign({}, options), { persistLastActionId: true }));\n            }\n            else {\n                return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n            }\n        }\n    }\n    else {\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isICommandActionToggleInfo(thing) {\n    return thing ? thing.condition !== undefined : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { ToolBar } from '../../../base/browser/ui/toolbar/toolbar.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { coalesceInPlace } from '../../../base/common/arrays.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n/**\n * The `WorkbenchToolBar` does\n * - support hiding of menu items\n * - lookup keybindings for each actions automatically\n * - send `workbenchActionExecuted`-events for each action\n *\n * See {@link MenuWorkbenchToolBar} for a toolbar that is backed by a menu.\n */\nexport let WorkbenchToolBar = class WorkbenchToolBar extends ToolBar {\n    constructor(container, _options, _menuService, _contextKeyService, _contextMenuService, keybindingService, telemetryService) {\n        super(container, _contextMenuService, Object.assign(Object.assign({ \n            // defaults\n            getKeyBinding: (action) => { var _a; return (_a = keybindingService.lookupKeybinding(action.id)) !== null && _a !== void 0 ? _a : undefined; } }, _options), { \n            // mandatory (overide options)\n            allowContextMenu: true }));\n        this._options = _options;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._contextMenuService = _contextMenuService;\n        this._sessionDisposables = this._store.add(new DisposableStore());\n        // telemetry logic\n        if (_options === null || _options === void 0 ? void 0 : _options.telemetrySource) {\n            this._store.add(this.actionBar.onDidRun(e => telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: _options.telemetrySource })));\n        }\n    }\n    setActions(_primary, _secondary = [], menuIds) {\n        var _a, _b, _c;\n        this._sessionDisposables.clear();\n        const primary = _primary.slice();\n        const secondary = _secondary.slice();\n        const toggleActions = [];\n        let toggleActionsCheckedCount = 0;\n        const extraSecondary = [];\n        let someAreHidden = false;\n        // unless disabled, move all hidden items to secondary group or ignore them\n        if (((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) !== -1 /* HiddenItemStrategy.NoHide */) {\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!(action instanceof MenuItemAction) && !(action instanceof SubmenuItemAction)) {\n                    // console.warn(`Action ${action.id}/${action.label} is not a MenuItemAction`);\n                    continue;\n                }\n                if (!action.hideActions) {\n                    continue;\n                }\n                // collect all toggle actions\n                toggleActions.push(action.hideActions.toggle);\n                if (action.hideActions.toggle.checked) {\n                    toggleActionsCheckedCount++;\n                }\n                // hidden items move into overflow or ignore\n                if (action.hideActions.isHidden) {\n                    someAreHidden = true;\n                    primary[i] = undefined;\n                    if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.hiddenItemStrategy) !== 0 /* HiddenItemStrategy.Ignore */) {\n                        extraSecondary[i] = action;\n                    }\n                }\n            }\n        }\n        // count for max\n        if (((_c = this._options) === null || _c === void 0 ? void 0 : _c.maxNumberOfItems) !== undefined) {\n            let count = 0;\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!action) {\n                    continue;\n                }\n                if (++count >= this._options.maxNumberOfItems) {\n                    primary[i] = undefined;\n                    extraSecondary[i] = action;\n                }\n            }\n        }\n        coalesceInPlace(primary);\n        coalesceInPlace(extraSecondary);\n        super.setActions(primary, Separator.join(extraSecondary, secondary));\n        // add context menu for toggle actions\n        if (toggleActions.length > 0) {\n            this._sessionDisposables.add(addDisposableListener(this.getElement(), 'contextmenu', e => {\n                var _a, _b, _c, _d;\n                const action = this.getItemAction(e.target);\n                if (!(action)) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                let noHide = false;\n                // last item cannot be hidden when using ignore strategy\n                if (toggleActionsCheckedCount === 1 && ((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) === 0 /* HiddenItemStrategy.Ignore */) {\n                    noHide = true;\n                    for (let i = 0; i < toggleActions.length; i++) {\n                        if (toggleActions[i].checked) {\n                            toggleActions[i] = toAction({\n                                id: action.id,\n                                label: action.label,\n                                checked: true,\n                                enabled: false,\n                                run() { }\n                            });\n                            break; // there is only one\n                        }\n                    }\n                }\n                // add \"hide foo\" actions\n                let hideAction;\n                if (!noHide && (action instanceof MenuItemAction || action instanceof SubmenuItemAction)) {\n                    if (!action.hideActions) {\n                        // no context menu for MenuItemAction instances that support no hiding\n                        // those are fake actions and need to be cleaned up\n                        return;\n                    }\n                    hideAction = action.hideActions.hide;\n                }\n                else {\n                    hideAction = toAction({\n                        id: 'label',\n                        label: localize('hide', \"Hide\"),\n                        enabled: false,\n                        run() { }\n                    });\n                }\n                const actions = Separator.join([hideAction], toggleActions);\n                // add \"Reset Menu\" action\n                if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.resetMenu) && !menuIds) {\n                    menuIds = [this._options.resetMenu];\n                }\n                if (someAreHidden && menuIds) {\n                    actions.push(new Separator());\n                    actions.push(toAction({\n                        id: 'resetThisMenu',\n                        label: localize('resetThisMenu', \"Reset Menu\"),\n                        run: () => this._menuService.resetHiddenStates(menuIds)\n                    }));\n                }\n                this._contextMenuService.showContextMenu({\n                    getAnchor: () => e,\n                    getActions: () => actions,\n                    // add context menu actions (iff appicable)\n                    menuId: (_c = this._options) === null || _c === void 0 ? void 0 : _c.contextMenu,\n                    menuActionOptions: Object.assign({ renderShortTitle: true }, (_d = this._options) === null || _d === void 0 ? void 0 : _d.menuOptions),\n                    contextKeyService: this._contextKeyService,\n                });\n            }));\n        }\n    }\n};\nWorkbenchToolBar = __decorate([\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, IContextMenuService),\n    __param(5, IKeybindingService),\n    __param(6, ITelemetryService)\n], WorkbenchToolBar);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n    return item.submenu !== undefined;\n}\nexport class MenuId {\n    /**\n     * Create a new `MenuId` with the unique identifier. Will throw if a menu\n     * with the identifier already exists, use `MenuId.for(ident)` or a unique\n     * identifier\n     */\n    constructor(identifier) {\n        if (MenuId._instances.has(identifier)) {\n            throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n        }\n        MenuId._instances.set(identifier, this);\n        this.id = identifier;\n    }\n}\nMenuId._instances = new Map();\nMenuId.CommandPalette = new MenuId('CommandPalette');\nMenuId.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\nMenuId.DebugCallStackContext = new MenuId('DebugCallStackContext');\nMenuId.DebugConsoleContext = new MenuId('DebugConsoleContext');\nMenuId.DebugVariablesContext = new MenuId('DebugVariablesContext');\nMenuId.DebugWatchContext = new MenuId('DebugWatchContext');\nMenuId.DebugToolBar = new MenuId('DebugToolBar');\nMenuId.DebugToolBarStop = new MenuId('DebugToolBarStop');\nMenuId.EditorContext = new MenuId('EditorContext');\nMenuId.SimpleEditorContext = new MenuId('SimpleEditorContext');\nMenuId.EditorContent = new MenuId('EditorContent');\nMenuId.EditorLineNumberContext = new MenuId('EditorLineNumberContext');\nMenuId.EditorContextCopy = new MenuId('EditorContextCopy');\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\nMenuId.EditorContextShare = new MenuId('EditorContextShare');\nMenuId.EditorTitle = new MenuId('EditorTitle');\nMenuId.EditorTitleRun = new MenuId('EditorTitleRun');\nMenuId.EditorTitleContext = new MenuId('EditorTitleContext');\nMenuId.EditorTitleContextShare = new MenuId('EditorTitleContextShare');\nMenuId.EmptyEditorGroup = new MenuId('EmptyEditorGroup');\nMenuId.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\nMenuId.EditorTabsBarContext = new MenuId('EditorTabsBarContext');\nMenuId.ExplorerContext = new MenuId('ExplorerContext');\nMenuId.ExplorerContextShare = new MenuId('ExplorerContextShare');\nMenuId.ExtensionContext = new MenuId('ExtensionContext');\nMenuId.GlobalActivity = new MenuId('GlobalActivity');\nMenuId.CommandCenter = new MenuId('CommandCenter');\nMenuId.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\nMenuId.LayoutControlMenu = new MenuId('LayoutControlMenu');\nMenuId.MenubarMainMenu = new MenuId('MenubarMainMenu');\nMenuId.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\nMenuId.MenubarDebugMenu = new MenuId('MenubarDebugMenu');\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\nMenuId.MenubarCopy = new MenuId('MenubarCopy');\nMenuId.MenubarFileMenu = new MenuId('MenubarFileMenu');\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\nMenuId.MenubarHelpMenu = new MenuId('MenubarHelpMenu');\nMenuId.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\nMenuId.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\nMenuId.PanelAlignmentMenu = new MenuId('PanelAlignmentMenu');\nMenuId.PanelPositionMenu = new MenuId('PanelPositionMenu');\nMenuId.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\nMenuId.MenubarRecentMenu = new MenuId('MenubarRecentMenu');\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\nMenuId.MenubarShare = new MenuId('MenubarShare');\nMenuId.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\nMenuId.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\nMenuId.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\nMenuId.MenubarViewMenu = new MenuId('MenubarViewMenu');\nMenuId.MenubarHomeMenu = new MenuId('MenubarHomeMenu');\nMenuId.OpenEditorsContext = new MenuId('OpenEditorsContext');\nMenuId.OpenEditorsContextShare = new MenuId('OpenEditorsContextShare');\nMenuId.ProblemsPanelContext = new MenuId('ProblemsPanelContext');\nMenuId.SCMChangeContext = new MenuId('SCMChangeContext');\nMenuId.SCMResourceContext = new MenuId('SCMResourceContext');\nMenuId.SCMResourceContextShare = new MenuId('SCMResourceContextShare');\nMenuId.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\nMenuId.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\nMenuId.SCMSourceControl = new MenuId('SCMSourceControl');\nMenuId.SCMTitle = new MenuId('SCMTitle');\nMenuId.SearchContext = new MenuId('SearchContext');\nMenuId.SearchActionMenu = new MenuId('SearchActionContext');\nMenuId.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\nMenuId.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\nMenuId.StickyScrollContext = new MenuId('StickyScrollContext');\nMenuId.TestItem = new MenuId('TestItem');\nMenuId.TestItemGutter = new MenuId('TestItemGutter');\nMenuId.TestPeekElement = new MenuId('TestPeekElement');\nMenuId.TestPeekTitle = new MenuId('TestPeekTitle');\nMenuId.TouchBarContext = new MenuId('TouchBarContext');\nMenuId.TitleBarContext = new MenuId('TitleBarContext');\nMenuId.TitleBarTitleContext = new MenuId('TitleBarTitleContext');\nMenuId.TunnelContext = new MenuId('TunnelContext');\nMenuId.TunnelPrivacy = new MenuId('TunnelPrivacy');\nMenuId.TunnelProtocol = new MenuId('TunnelProtocol');\nMenuId.TunnelPortInline = new MenuId('TunnelInline');\nMenuId.TunnelTitle = new MenuId('TunnelTitle');\nMenuId.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\nMenuId.TunnelOriginInline = new MenuId('TunnelOriginInline');\nMenuId.ViewItemContext = new MenuId('ViewItemContext');\nMenuId.ViewContainerTitle = new MenuId('ViewContainerTitle');\nMenuId.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\nMenuId.ViewTitle = new MenuId('ViewTitle');\nMenuId.ViewTitleContext = new MenuId('ViewTitleContext');\nMenuId.CommentEditorActions = new MenuId('CommentEditorActions');\nMenuId.CommentThreadTitle = new MenuId('CommentThreadTitle');\nMenuId.CommentThreadActions = new MenuId('CommentThreadActions');\nMenuId.CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions');\nMenuId.CommentThreadTitleContext = new MenuId('CommentThreadTitleContext');\nMenuId.CommentThreadCommentContext = new MenuId('CommentThreadCommentContext');\nMenuId.CommentTitle = new MenuId('CommentTitle');\nMenuId.CommentActions = new MenuId('CommentActions');\nMenuId.InteractiveToolbar = new MenuId('InteractiveToolbar');\nMenuId.InteractiveCellTitle = new MenuId('InteractiveCellTitle');\nMenuId.InteractiveCellDelete = new MenuId('InteractiveCellDelete');\nMenuId.InteractiveCellExecute = new MenuId('InteractiveCellExecute');\nMenuId.InteractiveInputExecute = new MenuId('InteractiveInputExecute');\nMenuId.NotebookToolbar = new MenuId('NotebookToolbar');\nMenuId.NotebookCellTitle = new MenuId('NotebookCellTitle');\nMenuId.NotebookCellDelete = new MenuId('NotebookCellDelete');\nMenuId.NotebookCellInsert = new MenuId('NotebookCellInsert');\nMenuId.NotebookCellBetween = new MenuId('NotebookCellBetween');\nMenuId.NotebookCellListTop = new MenuId('NotebookCellTop');\nMenuId.NotebookCellExecute = new MenuId('NotebookCellExecute');\nMenuId.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\nMenuId.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\nMenuId.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\nMenuId.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\nMenuId.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\nMenuId.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\nMenuId.NotebookKernelSource = new MenuId('NotebookKernelSource');\nMenuId.BulkEditTitle = new MenuId('BulkEditTitle');\nMenuId.BulkEditContext = new MenuId('BulkEditContext');\nMenuId.TimelineItemContext = new MenuId('TimelineItemContext');\nMenuId.TimelineTitle = new MenuId('TimelineTitle');\nMenuId.TimelineTitleContext = new MenuId('TimelineTitleContext');\nMenuId.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\nMenuId.AccountsContext = new MenuId('AccountsContext');\nMenuId.PanelTitle = new MenuId('PanelTitle');\nMenuId.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\nMenuId.TerminalInstanceContext = new MenuId('TerminalInstanceContext');\nMenuId.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\nMenuId.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\nMenuId.TerminalTabContext = new MenuId('TerminalTabContext');\nMenuId.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\nMenuId.TerminalInlineTabContext = new MenuId('TerminalInlineTabContext');\nMenuId.WebviewContext = new MenuId('WebviewContext');\nMenuId.InlineCompletionsActions = new MenuId('InlineCompletionsActions');\nMenuId.NewFile = new MenuId('NewFile');\nMenuId.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\nMenuId.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\nMenuId.MergeBaseToolbar = new MenuId('MergeBaseToolbar');\nMenuId.MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar');\nMenuId.InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar');\nMenuId.ChatContext = new MenuId('ChatContext');\nMenuId.ChatCodeBlock = new MenuId('ChatCodeblock');\nMenuId.ChatMessageTitle = new MenuId('ChatMessageTitle');\nMenuId.ChatExecute = new MenuId('ChatExecute');\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n    static for(id) {\n        let value = this._all.get(id);\n        if (!value) {\n            value = new MenuRegistryChangeEvent(id);\n            this._all.set(id, value);\n        }\n        return value;\n    }\n    static merge(events) {\n        const ids = new Set();\n        for (const item of events) {\n            if (item instanceof MenuRegistryChangeEvent) {\n                ids.add(item.id);\n            }\n        }\n        return ids;\n    }\n    constructor(id) {\n        this.id = id;\n        this.has = candidate => candidate === id;\n    }\n}\nMenuRegistryChangeEvent._all = new Map();\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new MicrotaskEmitter({\n            merge: MenuRegistryChangeEvent.merge\n        });\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n    }\n    addCommand(command) {\n        this._commands.set(command.id, command);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n        return toDisposable(() => {\n            if (this._commands.delete(command.id)) {\n                this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        let list = this._menuItems.get(id);\n        if (!list) {\n            list = new LinkedList();\n            this._menuItems.set(id, list);\n        }\n        const rm = list.push(item);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        return toDisposable(rm);\n    }\n    appendMenuItems(items) {\n        const result = new DisposableStore();\n        for (const { id, item } of items) {\n            result.add(this.appendMenuItem(id, item));\n        }\n        return result;\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, hideActions, actions) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n        this.item = item;\n        this.hideActions = hideActions;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nexport let MenuItemAction = class MenuItemAction {\n    static label(action, options) {\n        return (options === null || options === void 0 ? void 0 : options.renderShortTitle) && action.shortTitle\n            ? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n            : (typeof action.title === 'string' ? action.title : action.title.value);\n    }\n    constructor(item, alt, options, hideActions, contextKeyService, _commandService) {\n        var _a, _b;\n        this.hideActions = hideActions;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = MenuItemAction.label(item, options);\n        this.tooltip = (_b = (typeof item.tooltip === 'string' ? item.tooltip : (_a = item.tooltip) === null || _a === void 0 ? void 0 : _a.value)) !== null && _b !== void 0 ? _b : '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        let icon;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n                icon = toggled.icon;\n            }\n            if (toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        if (!icon) {\n            icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction(alt, undefined, options, hideActions, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        this.class = icon && ThemeIcon.asClassName(icon);\n    }\n    run(...args) {\n        var _a, _b;\n        let runArgs = [];\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = __decorate([\n    __param(4, IContextKeyService),\n    __param(5, ICommandService)\n], MenuItemAction);\nexport class Action2 {\n    constructor(desc) {\n        this.desc = desc;\n    }\n}\nexport function registerAction2(ctor) {\n    const disposables = new DisposableStore();\n    const action = new ctor();\n    const _a = action.desc, { f1, menu, keybinding, description } = _a, command = __rest(_a, [\"f1\", \"menu\", \"keybinding\", \"description\"]);\n    // command\n    disposables.add(CommandsRegistry.registerCommand({\n        id: command.id,\n        handler: (accessor, ...args) => action.run(accessor, ...args),\n        description: description,\n    }));\n    // menu\n    if (Array.isArray(menu)) {\n        for (const item of menu) {\n            disposables.add(MenuRegistry.appendMenuItem(item.id, Object.assign({ command: Object.assign(Object.assign({}, command), { precondition: item.precondition === null ? undefined : command.precondition }) }, item)));\n        }\n    }\n    else if (menu) {\n        disposables.add(MenuRegistry.appendMenuItem(menu.id, Object.assign({ command: Object.assign(Object.assign({}, command), { precondition: menu.precondition === null ? undefined : command.precondition }) }, menu)));\n    }\n    if (f1) {\n        disposables.add(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n        disposables.add(MenuRegistry.addCommand(command));\n    }\n    // keybinding\n    if (Array.isArray(keybinding)) {\n        for (const item of keybinding) {\n            disposables.add(KeybindingsRegistry.registerKeybindingRule(Object.assign(Object.assign({}, item), { id: command.id, when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when })));\n        }\n    }\n    else if (keybinding) {\n        disposables.add(KeybindingsRegistry.registerKeybindingRule(Object.assign(Object.assign({}, keybinding), { id: command.id, when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when })));\n    }\n    return disposables;\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { DebounceEmitter, Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIMenuItem, isISubmenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nexport let MenuService = class MenuService {\n    constructor(_commandService, storageService) {\n        this._commandService = _commandService;\n        this._hiddenStates = new PersistedMenuHideState(storageService);\n    }\n    createMenu(id, contextKeyService, options) {\n        return new MenuImpl(id, this._hiddenStates, Object.assign({ emitEventsForSubmenuChanges: false, eventDebounceDelay: 50 }, options), this._commandService, contextKeyService);\n    }\n    resetHiddenStates(ids) {\n        this._hiddenStates.reset(ids);\n    }\n};\nMenuService = __decorate([\n    __param(0, ICommandService),\n    __param(1, IStorageService)\n], MenuService);\nlet PersistedMenuHideState = class PersistedMenuHideState {\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._ignoreChangeEvent = false;\n        this._hiddenByDefaultCache = new Map();\n        try {\n            const raw = _storageService.get(PersistedMenuHideState._key, 0 /* StorageScope.PROFILE */, '{}');\n            this._data = JSON.parse(raw);\n        }\n        catch (err) {\n            this._data = Object.create(null);\n        }\n        this._disposables.add(_storageService.onDidChangeValue(e => {\n            if (e.key !== PersistedMenuHideState._key) {\n                return;\n            }\n            if (!this._ignoreChangeEvent) {\n                try {\n                    const raw = _storageService.get(PersistedMenuHideState._key, 0 /* StorageScope.PROFILE */, '{}');\n                    this._data = JSON.parse(raw);\n                }\n                catch (err) {\n                    console.log('FAILED to read storage after UPDATE', err);\n                }\n            }\n            this._onDidChange.fire();\n        }));\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposables.dispose();\n    }\n    _isHiddenByDefault(menu, commandId) {\n        var _a;\n        return (_a = this._hiddenByDefaultCache.get(`${menu.id}/${commandId}`)) !== null && _a !== void 0 ? _a : false;\n    }\n    setDefaultState(menu, commandId, hidden) {\n        this._hiddenByDefaultCache.set(`${menu.id}/${commandId}`, hidden);\n    }\n    isHidden(menu, commandId) {\n        var _a, _b;\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        const state = (_b = (_a = this._data[menu.id]) === null || _a === void 0 ? void 0 : _a.includes(commandId)) !== null && _b !== void 0 ? _b : false;\n        return hiddenByDefault ? !state : state;\n    }\n    updateHidden(menu, commandId, hidden) {\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        if (hiddenByDefault) {\n            hidden = !hidden;\n        }\n        const entries = this._data[menu.id];\n        if (!hidden) {\n            // remove and cleanup\n            if (entries) {\n                const idx = entries.indexOf(commandId);\n                if (idx >= 0) {\n                    removeFastWithoutKeepingOrder(entries, idx);\n                }\n                if (entries.length === 0) {\n                    delete this._data[menu.id];\n                }\n            }\n        }\n        else {\n            // add unless already added\n            if (!entries) {\n                this._data[menu.id] = [commandId];\n            }\n            else {\n                const idx = entries.indexOf(commandId);\n                if (idx < 0) {\n                    entries.push(commandId);\n                }\n            }\n        }\n        this._persist();\n    }\n    reset(menus) {\n        if (menus === undefined) {\n            // reset all\n            this._data = Object.create(null);\n            this._persist();\n        }\n        else {\n            // reset only for a specific menu\n            for (const { id } of menus) {\n                if (this._data[id]) {\n                    delete this._data[id];\n                }\n            }\n            this._persist();\n        }\n    }\n    _persist() {\n        try {\n            this._ignoreChangeEvent = true;\n            const raw = JSON.stringify(this._data);\n            this._storageService.store(PersistedMenuHideState._key, raw, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n};\nPersistedMenuHideState._key = 'menu.hiddenCommands';\nPersistedMenuHideState = __decorate([\n    __param(0, IStorageService)\n], PersistedMenuHideState);\nlet MenuInfo = class MenuInfo {\n    constructor(_id, _hiddenStates, _collectContextKeysForSubmenus, _commandService, _contextKeyService) {\n        this._id = _id;\n        this._hiddenStates = _hiddenStates;\n        this._collectContextKeysForSubmenus = _collectContextKeysForSubmenus;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._menuGroups = [];\n        this._structureContextKeys = new Set();\n        this._preconditionContextKeys = new Set();\n        this._toggledContextKeys = new Set();\n        this.refresh();\n    }\n    get structureContextKeys() {\n        return this._structureContextKeys;\n    }\n    get preconditionContextKeys() {\n        return this._preconditionContextKeys;\n    }\n    get toggledContextKeys() {\n        return this._toggledContextKeys;\n    }\n    refresh() {\n        // reset\n        this._menuGroups.length = 0;\n        this._structureContextKeys.clear();\n        this._preconditionContextKeys.clear();\n        this._toggledContextKeys.clear();\n        const menuItems = MenuRegistry.getMenuItems(this._id);\n        let group;\n        menuItems.sort(MenuInfo._compareMenuItems);\n        for (const item of menuItems) {\n            // group by groupId\n            const groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys for eventing\n            this._collectContextKeys(item);\n        }\n    }\n    _collectContextKeys(item) {\n        MenuInfo._fillInKbExprKeys(item.when, this._structureContextKeys);\n        if (isIMenuItem(item)) {\n            // keep precondition keys for event if applicable\n            if (item.command.precondition) {\n                MenuInfo._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (item.command.toggled) {\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\n                MenuInfo._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n            }\n        }\n        else if (this._collectContextKeysForSubmenus) {\n            // recursively collect context keys from submenus so that this\n            // menu fires events when context key changes affect submenus\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\n        }\n    }\n    createActionGroups(options) {\n        const result = [];\n        for (const group of this._menuGroups) {\n            const [id, items] = group;\n            const activeActions = [];\n            for (const item of items) {\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    const isMenuItem = isIMenuItem(item);\n                    if (isMenuItem) {\n                        this._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n                    }\n                    const menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n                    if (isMenuItem) {\n                        // MenuItemAction\n                        activeActions.push(new MenuItemAction(item.command, item.alt, options, menuHide, this._contextKeyService, this._commandService));\n                    }\n                    else {\n                        // SubmenuItemAction\n                        const groups = new MenuInfo(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._contextKeyService).createActionGroups(options);\n                        const submenuActions = Separator.join(...groups.map(g => g[1]));\n                        if (submenuActions.length > 0) {\n                            activeActions.push(new SubmenuItemAction(item, menuHide, submenuActions));\n                        }\n                    }\n                }\n            }\n            if (activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n        }\n        return result;\n    }\n    static _fillInKbExprKeys(exp, set) {\n        if (exp) {\n            for (const key of exp.keys()) {\n                set.add(key);\n            }\n        }\n    }\n    static _compareMenuItems(a, b) {\n        const aGroup = a.group;\n        const bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            const value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        const aPrio = a.order || 0;\n        const bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        return MenuInfo._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n    static _compareTitles(a, b) {\n        const aStr = typeof a === 'string' ? a : a.original;\n        const bStr = typeof b === 'string' ? b : b.original;\n        return aStr.localeCompare(bStr);\n    }\n};\nMenuInfo = __decorate([\n    __param(3, ICommandService),\n    __param(4, IContextKeyService)\n], MenuInfo);\nlet MenuImpl = class MenuImpl {\n    constructor(id, hiddenStates, options, commandService, contextKeyService) {\n        this._disposables = new DisposableStore();\n        this._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, contextKeyService);\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n        // This usually happen while code and extensions are loaded and affects the over\n        // structure of the menu\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\n            this._menuInfo.refresh();\n            this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: true, isToggleChange: true });\n        }, options.eventDebounceDelay);\n        this._disposables.add(rebuildMenuSoon);\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n            if (e.has(id)) {\n                rebuildMenuSoon.schedule();\n            }\n        }));\n        // When context keys or storage state changes we need to check if the menu also has changed. However,\n        // we only do that when someone listens on this menu because (1) these events are\n        // firing often and (2) menu are often leaked\n        const lazyListener = this._disposables.add(new DisposableStore());\n        const merge = (events) => {\n            let isStructuralChange = false;\n            let isEnablementChange = false;\n            let isToggleChange = false;\n            for (const item of events) {\n                isStructuralChange = isStructuralChange || item.isStructuralChange;\n                isEnablementChange = isEnablementChange || item.isEnablementChange;\n                isToggleChange = isToggleChange || item.isToggleChange;\n                if (isStructuralChange && isEnablementChange && isToggleChange) {\n                    // everything is TRUE, no need to continue iterating\n                    break;\n                }\n            }\n            return { menu: this, isStructuralChange, isEnablementChange, isToggleChange };\n        };\n        const startLazyListener = () => {\n            lazyListener.add(contextKeyService.onDidChangeContext(e => {\n                const isStructuralChange = e.affectsSome(this._menuInfo.structureContextKeys);\n                const isEnablementChange = e.affectsSome(this._menuInfo.preconditionContextKeys);\n                const isToggleChange = e.affectsSome(this._menuInfo.toggledContextKeys);\n                if (isStructuralChange || isEnablementChange || isToggleChange) {\n                    this._onDidChange.fire({ menu: this, isStructuralChange, isEnablementChange, isToggleChange });\n                }\n            }));\n            lazyListener.add(hiddenStates.onDidChange(e => {\n                this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: false, isToggleChange: false });\n            }));\n        };\n        this._onDidChange = new DebounceEmitter({\n            // start/stop context key listener\n            onWillAddFirstListener: startLazyListener,\n            onDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n            delay: options.eventDebounceDelay,\n            merge\n        });\n        this.onDidChange = this._onDidChange.event;\n    }\n    getActions(options) {\n        return this._menuInfo.createActionGroups(options);\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n    }\n};\nMenuImpl = __decorate([\n    __param(3, ICommandService),\n    __param(4, IContextKeyService)\n], MenuImpl);\nfunction createMenuHide(menu, command, states) {\n    const id = isISubmenuItem(command) ? command.submenu.id : command.id;\n    const title = typeof command.title === 'string' ? command.title : command.title.value;\n    const hide = toAction({\n        id: `hide/${menu.id}/${id}`,\n        label: localize('hide.label', 'Hide \\'{0}\\'', title),\n        run() { states.updateHidden(menu, id, true); }\n    });\n    const toggle = toAction({\n        id: `toggle/${menu.id}/${id}`,\n        label: title,\n        get checked() { return !states.isHidden(menu, id); },\n        run() { states.updateHidden(menu, id, !!this.checked); }\n    });\n    return {\n        hide,\n        toggle,\n        get isHidden() { return !toggle.checked; },\n    };\n}\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nexport const IAudioCueService = createDecorator('audioCue');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n    static register(options) {\n        const sound = new Sound(options.fileName);\n        return sound;\n    }\n    constructor(fileName) {\n        this.fileName = fileName;\n    }\n}\nSound.error = Sound.register({ fileName: 'error.mp3' });\nSound.warning = Sound.register({ fileName: 'warning.mp3' });\nSound.foldedArea = Sound.register({ fileName: 'foldedAreas.mp3' });\nSound.break = Sound.register({ fileName: 'break.mp3' });\nSound.quickFixes = Sound.register({ fileName: 'quickFixes.mp3' });\nSound.taskCompleted = Sound.register({ fileName: 'taskCompleted.mp3' });\nSound.taskFailed = Sound.register({ fileName: 'taskFailed.mp3' });\nSound.terminalBell = Sound.register({ fileName: 'terminalBell.mp3' });\nSound.diffLineInserted = Sound.register({ fileName: 'diffLineInserted.mp3' });\nSound.diffLineDeleted = Sound.register({ fileName: 'diffLineDeleted.mp3' });\nSound.diffLineModified = Sound.register({ fileName: 'diffLineModified.mp3' });\nexport class AudioCue {\n    static register(options) {\n        const audioCue = new AudioCue(options.sound, options.name, options.settingsKey);\n        AudioCue._audioCues.add(audioCue);\n        return audioCue;\n    }\n    constructor(sound, name, settingsKey) {\n        this.sound = sound;\n        this.name = name;\n        this.settingsKey = settingsKey;\n    }\n}\nAudioCue._audioCues = new Set();\nAudioCue.error = AudioCue.register({\n    name: localize('audioCues.lineHasError.name', 'Error on Line'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.lineHasError',\n});\nAudioCue.warning = AudioCue.register({\n    name: localize('audioCues.lineHasWarning.name', 'Warning on Line'),\n    sound: Sound.warning,\n    settingsKey: 'audioCues.lineHasWarning',\n});\nAudioCue.foldedArea = AudioCue.register({\n    name: localize('audioCues.lineHasFoldedArea.name', 'Folded Area on Line'),\n    sound: Sound.foldedArea,\n    settingsKey: 'audioCues.lineHasFoldedArea',\n});\nAudioCue.break = AudioCue.register({\n    name: localize('audioCues.lineHasBreakpoint.name', 'Breakpoint on Line'),\n    sound: Sound.break,\n    settingsKey: 'audioCues.lineHasBreakpoint',\n});\nAudioCue.inlineSuggestion = AudioCue.register({\n    name: localize('audioCues.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n    sound: Sound.quickFixes,\n    settingsKey: 'audioCues.lineHasInlineSuggestion',\n});\nAudioCue.terminalQuickFix = AudioCue.register({\n    name: localize('audioCues.terminalQuickFix.name', 'Terminal Quick Fix'),\n    sound: Sound.quickFixes,\n    settingsKey: 'audioCues.terminalQuickFix',\n});\nAudioCue.onDebugBreak = AudioCue.register({\n    name: localize('audioCues.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n    sound: Sound.break,\n    settingsKey: 'audioCues.onDebugBreak',\n});\nAudioCue.noInlayHints = AudioCue.register({\n    name: localize('audioCues.noInlayHints', 'No Inlay Hints on Line'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.noInlayHints'\n});\nAudioCue.taskCompleted = AudioCue.register({\n    name: localize('audioCues.taskCompleted', 'Task Completed'),\n    sound: Sound.taskCompleted,\n    settingsKey: 'audioCues.taskCompleted'\n});\nAudioCue.taskFailed = AudioCue.register({\n    name: localize('audioCues.taskFailed', 'Task Failed'),\n    sound: Sound.taskFailed,\n    settingsKey: 'audioCues.taskFailed'\n});\nAudioCue.terminalCommandFailed = AudioCue.register({\n    name: localize('audioCues.terminalCommandFailed', 'Terminal Command Failed'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.terminalCommandFailed'\n});\nAudioCue.terminalBell = AudioCue.register({\n    name: localize('audioCues.terminalBell', 'Terminal Bell'),\n    sound: Sound.terminalBell,\n    settingsKey: 'audioCues.terminalBell'\n});\nAudioCue.notebookCellCompleted = AudioCue.register({\n    name: localize('audioCues.notebookCellCompleted', 'Notebook Cell Completed'),\n    sound: Sound.taskCompleted,\n    settingsKey: 'audioCues.notebookCellCompleted'\n});\nAudioCue.notebookCellFailed = AudioCue.register({\n    name: localize('audioCues.notebookCellFailed', 'Notebook Cell Failed'),\n    sound: Sound.taskFailed,\n    settingsKey: 'audioCues.notebookCellFailed'\n});\nAudioCue.diffLineInserted = AudioCue.register({\n    name: localize('audioCues.diffLineInserted', 'Diff Line Inserted'),\n    sound: Sound.diffLineInserted,\n    settingsKey: 'audioCues.diffLineInserted'\n});\nAudioCue.diffLineDeleted = AudioCue.register({\n    name: localize('audioCues.diffLineDeleted', 'Diff Line Deleted'),\n    sound: Sound.diffLineDeleted,\n    settingsKey: 'audioCues.diffLineDeleted'\n});\nAudioCue.diffLineModified = AudioCue.register({\n    name: localize('audioCues.diffLineModified', 'Diff Line Modified'),\n    sound: Sound.diffLineModified,\n    settingsKey: 'audioCues.diffLineModified'\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener } from '../../../base/browser/dom.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\nexport let BrowserClipboardService = class BrowserClipboardService extends Disposable {\n    constructor(layoutService, logService) {\n        super();\n        this.layoutService = layoutService;\n        this.logService = logService;\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n        this.resources = [];\n        if (isSafari || isWebkitWebView) {\n            this.installWebKitWriteTextWorkaround();\n        }\n    }\n    // In Safari, it has the following note:\n    //\n    // \"The request to write to the clipboard must be triggered during a user gesture.\n    // A call to clipboard.write or clipboard.writeText outside the scope of a user\n    // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n    // rejection of the promise returned by the API call.\"\n    // From: https://webkit.org/blog/10855/async-clipboard-api/\n    //\n    // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n    // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n    //\n    // This function sets up some handlers to work around that behavior.\n    installWebKitWriteTextWorkaround() {\n        const handler = () => {\n            const currentWritePromise = new DeferredPromise();\n            // Cancel the previous promise since we just created a new one in response to this new event\n            if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n                this.webKitPendingClipboardWritePromise.cancel();\n            }\n            this.webKitPendingClipboardWritePromise = currentWritePromise;\n            // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n            // This allows us to pass in a Promise that will either be cancelled by another event or\n            // resolved with the contents of the first call to this.writeText.\n            // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n            navigator.clipboard.write([new ClipboardItem({\n                    'text/plain': currentWritePromise.p,\n                })]).catch((err) => __awaiter(this, void 0, void 0, function* () {\n                if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n                    this.logService.error(err);\n                }\n            }));\n        };\n        if (this.layoutService.hasContainer) {\n            this._register(addDisposableListener(this.layoutService.container, 'click', handler));\n            this._register(addDisposableListener(this.layoutService.container, 'keydown', handler));\n        }\n    }\n    writeText(text, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                this.mapTextToType.set(type, text);\n                return;\n            }\n            if (this.webKitPendingClipboardWritePromise) {\n                // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n                // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n                // would throw an error because this call stack doesn't appear to originate from a user gesture.\n                return this.webKitPendingClipboardWritePromise.complete(text);\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.writeText(text);\n            }\n            catch (error) {\n                console.error(error);\n            }\n            // Fallback to textarea and execCommand solution\n            const activeElement = document.activeElement;\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\n            textArea.style.height = '1px';\n            textArea.style.width = '1px';\n            textArea.style.position = 'absolute';\n            textArea.value = text;\n            textArea.focus();\n            textArea.select();\n            document.execCommand('copy');\n            if (activeElement instanceof HTMLElement) {\n                activeElement.focus();\n            }\n            document.body.removeChild(textArea);\n            return;\n        });\n    }\n    readText(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                return this.mapTextToType.get(type) || '';\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.readText();\n            }\n            catch (error) {\n                console.error(error);\n                return '';\n            }\n        });\n    }\n    readFindText() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findText;\n        });\n    }\n    writeFindText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.findText = text;\n        });\n    }\n    readResources() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resources;\n        });\n    }\n};\nBrowserClipboardService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ILogService)\n], BrowserClipboardService);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IClipboardService = createDecorator('clipboardService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ICommandService = createDecorator('commandService');\nexport const CommandsRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._onDidRegisterCommand = new Emitter();\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n    }\n    registerCommand(idOrCommand, handler) {\n        if (!idOrCommand) {\n            throw new Error(`invalid command`);\n        }\n        if (typeof idOrCommand === 'string') {\n            if (!handler) {\n                throw new Error(`invalid command`);\n            }\n            return this.registerCommand({ id: idOrCommand, handler });\n        }\n        // add argument validation if rich command metadata is provided\n        if (idOrCommand.description) {\n            const constraints = [];\n            for (const arg of idOrCommand.description.args) {\n                constraints.push(arg.constraint);\n            }\n            const actualHandler = idOrCommand.handler;\n            idOrCommand.handler = function (accessor, ...args) {\n                validateConstraints(args, constraints);\n                return actualHandler(accessor, ...args);\n            };\n        }\n        // find a place to store the command\n        const { id } = idOrCommand;\n        let commands = this._commands.get(id);\n        if (!commands) {\n            commands = new LinkedList();\n            this._commands.set(id, commands);\n        }\n        const removeFn = commands.unshift(idOrCommand);\n        const ret = toDisposable(() => {\n            removeFn();\n            const command = this._commands.get(id);\n            if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n                this._commands.delete(id);\n            }\n        });\n        // tell the world about this command\n        this._onDidRegisterCommand.fire(id);\n        return ret;\n    }\n    registerCommandAlias(oldId, newId) {\n        return CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n    }\n    getCommand(id) {\n        const list = this._commands.get(id);\n        if (!list || list.isEmpty()) {\n            return undefined;\n        }\n        return Iterable.first(list);\n    }\n    getCommands() {\n        const result = new Map();\n        for (const key of this._commands.keys()) {\n            const command = this.getCommand(key);\n            if (command) {\n                result.set(key, command);\n            }\n        }\n        return result;\n    }\n};\nCommandsRegistry.registerCommand('noop', () => { });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (const key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        const s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\nexport function getLanguageTagSettingPlainKey(settingKey) {\n    return settingKey.replace(/[\\[\\]]/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as types from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { addToValueTree, getConfigurationValue, removeFromValueTree, toValuesTree } from './configuration.js';\nimport { Extensions, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nfunction freeze(data) {\n    return Object.isFrozen(data) ? data : objects.deepFreeze(data);\n}\nexport class ConfigurationModel {\n    constructor(_contents = {}, _keys = [], _overrides = [], raw) {\n        this._contents = _contents;\n        this._keys = _keys;\n        this._overrides = _overrides;\n        this.raw = raw;\n        this.overrideConfigurations = new Map();\n    }\n    get rawConfiguration() {\n        var _a;\n        if (!this._rawConfiguration) {\n            if ((_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) {\n                const rawConfigurationModels = this.raw.map(raw => {\n                    if (raw instanceof ConfigurationModel) {\n                        return raw;\n                    }\n                    const parser = new ConfigurationModelParser('');\n                    parser.parseRaw(raw);\n                    return parser.configurationModel;\n                });\n                this._rawConfiguration = rawConfigurationModels.reduce((previous, current) => current === previous ? current : previous.merge(current), rawConfigurationModels[0]);\n            }\n            else {\n                // raw is same as current\n                this._rawConfiguration = this;\n            }\n        }\n        return this._rawConfiguration;\n    }\n    get contents() {\n        return this._contents;\n    }\n    get overrides() {\n        return this._overrides;\n    }\n    get keys() {\n        return this._keys;\n    }\n    isEmpty() {\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n    }\n    getValue(section) {\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\n    }\n    inspect(section, overrideIdentifier) {\n        const value = this.rawConfiguration.getValue(section);\n        const override = overrideIdentifier ? this.rawConfiguration.getOverrideValue(section, overrideIdentifier) : undefined;\n        const merged = overrideIdentifier ? this.rawConfiguration.override(overrideIdentifier).getValue(section) : value;\n        return { value, override, merged };\n    }\n    getOverrideValue(section, overrideIdentifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n        return overrideContents\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\n            : undefined;\n    }\n    override(identifier) {\n        let overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n        if (!overrideConfigurationModel) {\n            overrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n            this.overrideConfigurations.set(identifier, overrideConfigurationModel);\n        }\n        return overrideConfigurationModel;\n    }\n    merge(...others) {\n        var _a, _b;\n        const contents = objects.deepClone(this.contents);\n        const overrides = objects.deepClone(this.overrides);\n        const keys = [...this.keys];\n        const raws = ((_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) ? [...this.raw] : [this];\n        for (const other of others) {\n            raws.push(...(((_b = other.raw) === null || _b === void 0 ? void 0 : _b.length) ? other.raw : [other]));\n            if (other.isEmpty()) {\n                continue;\n            }\n            this.mergeContents(contents, other.contents);\n            for (const otherOverride of other.overrides) {\n                const [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n                if (override) {\n                    this.mergeContents(override.contents, otherOverride.contents);\n                    override.keys.push(...otherOverride.keys);\n                    override.keys = arrays.distinct(override.keys);\n                }\n                else {\n                    overrides.push(objects.deepClone(otherOverride));\n                }\n            }\n            for (const key of other.keys) {\n                if (keys.indexOf(key) === -1) {\n                    keys.push(key);\n                }\n            }\n        }\n        return new ConfigurationModel(contents, keys, overrides, raws.every(raw => raw instanceof ConfigurationModel) ? undefined : raws);\n    }\n    createOverrideConfigurationModel(identifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(identifier);\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n            // If there are no valid overrides, return self\n            return this;\n        }\n        const contents = {};\n        for (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n            let contentsForKey = this.contents[key];\n            const overrideContentsForKey = overrideContents[key];\n            // If there are override contents for the key, clone and merge otherwise use base contents\n            if (overrideContentsForKey) {\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n                    contentsForKey = objects.deepClone(contentsForKey);\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\n                }\n                else {\n                    contentsForKey = overrideContentsForKey;\n                }\n            }\n            contents[key] = contentsForKey;\n        }\n        return new ConfigurationModel(contents, this.keys, this.overrides);\n    }\n    mergeContents(source, target) {\n        for (const key of Object.keys(target)) {\n            if (key in source) {\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\n                    this.mergeContents(source[key], target[key]);\n                    continue;\n                }\n            }\n            source[key] = objects.deepClone(target[key]);\n        }\n    }\n    getContentsForOverrideIdentifer(identifier) {\n        let contentsForIdentifierOnly = null;\n        let contents = null;\n        const mergeContents = (contentsToMerge) => {\n            if (contentsToMerge) {\n                if (contents) {\n                    this.mergeContents(contents, contentsToMerge);\n                }\n                else {\n                    contents = objects.deepClone(contentsToMerge);\n                }\n            }\n        };\n        for (const override of this.overrides) {\n            if (arrays.equals(override.identifiers, [identifier])) {\n                contentsForIdentifierOnly = override.contents;\n            }\n            else if (override.identifiers.includes(identifier)) {\n                mergeContents(override.contents);\n            }\n        }\n        // Merge contents of the identifier only at the end to take precedence.\n        mergeContents(contentsForIdentifierOnly);\n        return contents;\n    }\n    toJSON() {\n        return {\n            contents: this.contents,\n            overrides: this.overrides,\n            keys: this.keys\n        };\n    }\n    // Update methods\n    addValue(key, value) {\n        this.updateValue(key, value, true);\n    }\n    setValue(key, value) {\n        this.updateValue(key, value, false);\n    }\n    removeValue(key) {\n        const index = this.keys.indexOf(key);\n        if (index === -1) {\n            return;\n        }\n        this.keys.splice(index, 1);\n        removeFromValueTree(this.contents, key);\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            this.overrides.splice(this.overrides.findIndex(o => arrays.equals(o.identifiers, overrideIdentifiersFromKey(key))), 1);\n        }\n    }\n    updateValue(key, value, add) {\n        addToValueTree(this.contents, key, value, e => console.error(e));\n        add = add || this.keys.indexOf(key) === -1;\n        if (add) {\n            this.keys.push(key);\n        }\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            this.overrides.push({\n                identifiers: overrideIdentifiersFromKey(key),\n                keys: Object.keys(this.contents[key]),\n                contents: toValuesTree(this.contents[key], message => console.error(message)),\n            });\n        }\n    }\n}\nexport class ConfigurationModelParser {\n    constructor(_name) {\n        this._name = _name;\n        this._raw = null;\n        this._configurationModel = null;\n        this._restrictedConfigurations = [];\n    }\n    get configurationModel() {\n        return this._configurationModel || new ConfigurationModel();\n    }\n    parseRaw(raw, options) {\n        this._raw = raw;\n        const { contents, keys, overrides, restricted, hasExcludedProperties } = this.doParseRaw(raw, options);\n        this._configurationModel = new ConfigurationModel(contents, keys, overrides, hasExcludedProperties ? [raw] : undefined /* raw has not changed */);\n        this._restrictedConfigurations = restricted || [];\n    }\n    doParseRaw(raw, options) {\n        const configurationProperties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        const filtered = this.filter(raw, configurationProperties, true, options);\n        raw = filtered.raw;\n        const contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n        const keys = Object.keys(raw);\n        const overrides = this.toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n        return { contents, keys, overrides, restricted: filtered.restricted, hasExcludedProperties: filtered.hasExcludedProperties };\n    }\n    filter(properties, configurationProperties, filterOverriddenProperties, options) {\n        let hasExcludedProperties = false;\n        if (!(options === null || options === void 0 ? void 0 : options.scopes) && !(options === null || options === void 0 ? void 0 : options.skipRestricted)) {\n            return { raw: properties, restricted: [], hasExcludedProperties };\n        }\n        const raw = {};\n        const restricted = [];\n        for (const key in properties) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n                const result = this.filter(properties[key], configurationProperties, false, options);\n                raw[key] = result.raw;\n                hasExcludedProperties = hasExcludedProperties || result.hasExcludedProperties;\n                restricted.push(...result.restricted);\n            }\n            else {\n                const propertySchema = configurationProperties[key];\n                const scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : 3 /* ConfigurationScope.WINDOW */ : undefined;\n                if (propertySchema === null || propertySchema === void 0 ? void 0 : propertySchema.restricted) {\n                    restricted.push(key);\n                }\n                // Load unregistered configurations always.\n                if ((scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) // Check scopes\n                    && !(options.skipRestricted && (propertySchema === null || propertySchema === void 0 ? void 0 : propertySchema.restricted))) { // Check restricted\n                    raw[key] = properties[key];\n                }\n                else {\n                    hasExcludedProperties = true;\n                }\n            }\n        }\n        return { raw, restricted, hasExcludedProperties };\n    }\n    toOverrides(raw, conflictReporter) {\n        const overrides = [];\n        for (const key of Object.keys(raw)) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                const overrideRaw = {};\n                for (const keyInOverrideRaw in raw[key]) {\n                    overrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n                }\n                overrides.push({\n                    identifiers: overrideIdentifiersFromKey(key),\n                    keys: Object.keys(overrideRaw),\n                    contents: toValuesTree(overrideRaw, conflictReporter)\n                });\n            }\n        }\n        return overrides;\n    }\n}\nclass ConfigurationInspectValue {\n    constructor(key, overrides, _value, overrideIdentifiers, defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, localUserConfiguration, remoteUserConfiguration, workspaceConfiguration, folderConfigurationModel, memoryConfigurationModel) {\n        this.key = key;\n        this.overrides = overrides;\n        this._value = _value;\n        this.overrideIdentifiers = overrideIdentifiers;\n        this.defaultConfiguration = defaultConfiguration;\n        this.policyConfiguration = policyConfiguration;\n        this.applicationConfiguration = applicationConfiguration;\n        this.userConfiguration = userConfiguration;\n        this.localUserConfiguration = localUserConfiguration;\n        this.remoteUserConfiguration = remoteUserConfiguration;\n        this.workspaceConfiguration = workspaceConfiguration;\n        this.folderConfigurationModel = folderConfigurationModel;\n        this.memoryConfigurationModel = memoryConfigurationModel;\n    }\n    inspect(model, section, overrideIdentifier) {\n        const inspectValue = model.inspect(section, overrideIdentifier);\n        return {\n            get value() { return freeze(inspectValue.value); },\n            get override() { return freeze(inspectValue.override); },\n            get merged() { return freeze(inspectValue.merged); }\n        };\n    }\n    get userInspectValue() {\n        if (!this._userInspectValue) {\n            this._userInspectValue = this.inspect(this.userConfiguration, this.key, this.overrides.overrideIdentifier);\n        }\n        return this._userInspectValue;\n    }\n    get user() {\n        return this.userInspectValue.value !== undefined || this.userInspectValue.override !== undefined ? { value: this.userInspectValue.value, override: this.userInspectValue.override } : undefined;\n    }\n}\nexport class Configuration {\n    constructor(_defaultConfiguration, _policyConfiguration, _applicationConfiguration, _localUserConfiguration, _remoteUserConfiguration = new ConfigurationModel(), _workspaceConfiguration = new ConfigurationModel(), _folderConfigurations = new ResourceMap(), _memoryConfiguration = new ConfigurationModel(), _memoryConfigurationByResource = new ResourceMap()) {\n        this._defaultConfiguration = _defaultConfiguration;\n        this._policyConfiguration = _policyConfiguration;\n        this._applicationConfiguration = _applicationConfiguration;\n        this._localUserConfiguration = _localUserConfiguration;\n        this._remoteUserConfiguration = _remoteUserConfiguration;\n        this._workspaceConfiguration = _workspaceConfiguration;\n        this._folderConfigurations = _folderConfigurations;\n        this._memoryConfiguration = _memoryConfiguration;\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\n        this._workspaceConsolidatedConfiguration = null;\n        this._foldersConsolidatedConfigurations = new ResourceMap();\n        this._userConfiguration = null;\n    }\n    getValue(section, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(section, overrides, workspace);\n        return consolidateConfigurationModel.getValue(section);\n    }\n    updateValue(key, value, overrides = {}) {\n        let memoryConfiguration;\n        if (overrides.resource) {\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n            if (!memoryConfiguration) {\n                memoryConfiguration = new ConfigurationModel();\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n            }\n        }\n        else {\n            memoryConfiguration = this._memoryConfiguration;\n        }\n        if (value === undefined) {\n            memoryConfiguration.removeValue(key);\n        }\n        else {\n            memoryConfiguration.setValue(key, value);\n        }\n        if (!overrides.resource) {\n            this._workspaceConsolidatedConfiguration = null;\n        }\n    }\n    inspect(key, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(key, overrides, workspace);\n        const folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n        const memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n        const overrideIdentifiers = new Set();\n        for (const override of consolidateConfigurationModel.overrides) {\n            for (const overrideIdentifier of override.identifiers) {\n                if (consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined) {\n                    overrideIdentifiers.add(overrideIdentifier);\n                }\n            }\n        }\n        return new ConfigurationInspectValue(key, overrides, consolidateConfigurationModel.getValue(key), overrideIdentifiers.size ? [...overrideIdentifiers] : undefined, this._defaultConfiguration, this._policyConfiguration.isEmpty() ? undefined : this._policyConfiguration, this.applicationConfiguration.isEmpty() ? undefined : this.applicationConfiguration, this.userConfiguration, this.localUserConfiguration, this.remoteUserConfiguration, workspace ? this._workspaceConfiguration : undefined, folderConfigurationModel ? folderConfigurationModel : undefined, memoryConfigurationModel);\n    }\n    get applicationConfiguration() {\n        return this._applicationConfiguration;\n    }\n    get userConfiguration() {\n        if (!this._userConfiguration) {\n            this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n        }\n        return this._userConfiguration;\n    }\n    get localUserConfiguration() {\n        return this._localUserConfiguration;\n    }\n    get remoteUserConfiguration() {\n        return this._remoteUserConfiguration;\n    }\n    getConsolidatedConfigurationModel(section, overrides, workspace) {\n        let configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n        if (overrides.overrideIdentifier) {\n            configurationModel = configurationModel.override(overrides.overrideIdentifier);\n        }\n        if (!this._policyConfiguration.isEmpty() && this._policyConfiguration.getValue(section) !== undefined) {\n            configurationModel = configurationModel.merge(this._policyConfiguration);\n        }\n        return configurationModel;\n    }\n    getConsolidatedConfigurationModelForResource({ resource }, workspace) {\n        let consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n            }\n            const memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n            if (memoryConfigurationForResource) {\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n            }\n        }\n        return consolidateConfiguration;\n    }\n    getWorkspaceConsolidatedConfiguration() {\n        if (!this._workspaceConsolidatedConfiguration) {\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.applicationConfiguration, this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n        }\n        return this._workspaceConsolidatedConfiguration;\n    }\n    getFolderConsolidatedConfiguration(folder) {\n        let folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n        if (!folderConsolidatedConfiguration) {\n            const workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n            const folderConfiguration = this._folderConfigurations.get(folder);\n            if (folderConfiguration) {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n            }\n            else {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n            }\n        }\n        return folderConsolidatedConfiguration;\n    }\n    getFolderConfigurationModelForResource(resource, workspace) {\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                return this._folderConfigurations.get(root.uri);\n            }\n        }\n        return undefined;\n    }\n    toData() {\n        return {\n            defaults: {\n                contents: this._defaultConfiguration.contents,\n                overrides: this._defaultConfiguration.overrides,\n                keys: this._defaultConfiguration.keys\n            },\n            policy: {\n                contents: this._policyConfiguration.contents,\n                overrides: this._policyConfiguration.overrides,\n                keys: this._policyConfiguration.keys\n            },\n            application: {\n                contents: this.applicationConfiguration.contents,\n                overrides: this.applicationConfiguration.overrides,\n                keys: this.applicationConfiguration.keys\n            },\n            user: {\n                contents: this.userConfiguration.contents,\n                overrides: this.userConfiguration.overrides,\n                keys: this.userConfiguration.keys\n            },\n            workspace: {\n                contents: this._workspaceConfiguration.contents,\n                overrides: this._workspaceConfiguration.overrides,\n                keys: this._workspaceConfiguration.keys\n            },\n            folders: [...this._folderConfigurations.keys()].reduce((result, folder) => {\n                const { contents, overrides, keys } = this._folderConfigurations.get(folder);\n                result.push([folder, { contents, overrides, keys }]);\n                return result;\n            }, [])\n        };\n    }\n    static parse(data) {\n        const defaultConfiguration = this.parseConfigurationModel(data.defaults);\n        const policyConfiguration = this.parseConfigurationModel(data.policy);\n        const applicationConfiguration = this.parseConfigurationModel(data.application);\n        const userConfiguration = this.parseConfigurationModel(data.user);\n        const workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n        const folders = data.folders.reduce((result, value) => {\n            result.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n            return result;\n        }, new ResourceMap());\n        return new Configuration(defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap());\n    }\n    static parseConfigurationModel(model) {\n        return new ConfigurationModel(model.contents, model.keys, model.overrides);\n    }\n}\nexport class ConfigurationChangeEvent {\n    constructor(change, previous, currentConfiguraiton, currentWorkspace) {\n        this.change = change;\n        this.previous = previous;\n        this.currentConfiguraiton = currentConfiguraiton;\n        this.currentWorkspace = currentWorkspace;\n        this._marker = '\\n';\n        this._markerCode1 = this._marker.charCodeAt(0);\n        this._markerCode2 = '.'.charCodeAt(0);\n        this.affectedKeys = new Set();\n        this._previousConfiguration = undefined;\n        for (const key of change.keys) {\n            this.affectedKeys.add(key);\n        }\n        for (const [, keys] of change.overrides) {\n            for (const key of keys) {\n                this.affectedKeys.add(key);\n            }\n        }\n        // Example: '\\nfoo.bar\\nabc.def\\n'\n        this._affectsConfigStr = this._marker;\n        for (const key of this.affectedKeys) {\n            this._affectsConfigStr += key + this._marker;\n        }\n    }\n    get previousConfiguration() {\n        if (!this._previousConfiguration && this.previous) {\n            this._previousConfiguration = Configuration.parse(this.previous.data);\n        }\n        return this._previousConfiguration;\n    }\n    affectsConfiguration(section, overrides) {\n        var _a;\n        // we have one large string with all keys that have changed. we pad (marker) the section\n        // and check that either find it padded or before a segment character\n        const needle = this._marker + section;\n        const idx = this._affectsConfigStr.indexOf(needle);\n        if (idx < 0) {\n            // NOT: (marker + section)\n            return false;\n        }\n        const pos = idx + needle.length;\n        if (pos >= this._affectsConfigStr.length) {\n            return false;\n        }\n        const code = this._affectsConfigStr.charCodeAt(pos);\n        if (code !== this._markerCode1 && code !== this._markerCode2) {\n            // NOT: section + (marker | segment)\n            return false;\n        }\n        if (overrides) {\n            const value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, (_a = this.previous) === null || _a === void 0 ? void 0 : _a.workspace) : undefined;\n            const value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n            return !objects.equals(value1, value2);\n        }\n        return true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as types from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { getLanguageTagSettingPlainKey } from './configuration.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport const Extensions = {\n    Configuration: 'base.contributions.configuration'\n};\nexport const allSettings = { properties: {}, patternProperties: {} };\nexport const applicationSettings = { properties: {}, patternProperties: {} };\nexport const machineSettings = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings = { properties: {}, patternProperties: {} };\nexport const windowSettings = { properties: {}, patternProperties: {} };\nexport const resourceSettings = { properties: {}, patternProperties: {} };\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nconst contributionRegistry = Registry.as(JSONExtensions.JSONContribution);\nclass ConfigurationRegistry {\n    constructor() {\n        this.overrideIdentifiers = new Set();\n        this._onDidSchemaChange = new Emitter();\n        this._onDidUpdateConfiguration = new Emitter();\n        this.configurationDefaultsOverrides = new Map();\n        this.defaultLanguageConfigurationOverridesNode = {\n            id: 'defaultOverrides',\n            title: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n            properties: {}\n        };\n        this.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n        this.resourceLanguageSettingsSchema = {\n            properties: {},\n            patternProperties: {},\n            additionalProperties: true,\n            allowTrailingCommas: true,\n            allowComments: true\n        };\n        this.configurationProperties = {};\n        this.policyConfigurations = new Map();\n        this.excludedConfigurationProperties = {};\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this.registerOverridePropertyPatternKey();\n    }\n    registerConfiguration(configuration, validate = true) {\n        this.registerConfigurations([configuration], validate);\n    }\n    registerConfigurations(configurations, validate = true) {\n        const properties = new Set();\n        this.doRegisterConfigurations(configurations, validate, properties);\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties });\n    }\n    registerDefaultConfigurations(configurationDefaults) {\n        const properties = new Set();\n        this.doRegisterDefaultConfigurations(configurationDefaults, properties);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n    }\n    doRegisterDefaultConfigurations(configurationDefaults, bucket) {\n        var _a;\n        const overrideIdentifiers = [];\n        for (const { overrides, source } of configurationDefaults) {\n            for (const key in overrides) {\n                bucket.add(key);\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    const configurationDefaultOverride = this.configurationDefaultsOverrides.get(key);\n                    const valuesSources = (_a = configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.valuesSources) !== null && _a !== void 0 ? _a : new Map();\n                    if (source) {\n                        for (const configuration of Object.keys(overrides[key])) {\n                            valuesSources.set(configuration, source);\n                        }\n                    }\n                    const defaultValue = Object.assign(Object.assign({}, ((configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.value) || {})), overrides[key]);\n                    this.configurationDefaultsOverrides.set(key, { source, value: defaultValue, valuesSources });\n                    const plainKey = getLanguageTagSettingPlainKey(key);\n                    const property = {\n                        type: 'object',\n                        default: defaultValue,\n                        description: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for the {0} language.\", plainKey),\n                        $ref: resourceLanguageSettingsSchemaId,\n                        defaultDefaultValue: defaultValue,\n                        source: types.isString(source) ? undefined : source,\n                        defaultValueSource: source\n                    };\n                    overrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n                    this.configurationProperties[key] = property;\n                    this.defaultLanguageConfigurationOverridesNode.properties[key] = property;\n                }\n                else {\n                    this.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n                    const property = this.configurationProperties[key];\n                    if (property) {\n                        this.updatePropertyDefaultValue(key, property);\n                        this.updateSchema(key, property);\n                    }\n                }\n            }\n        }\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n    }\n    registerOverrideIdentifiers(overrideIdentifiers) {\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n        this._onDidSchemaChange.fire();\n    }\n    doRegisterOverrideIdentifiers(overrideIdentifiers) {\n        for (const overrideIdentifier of overrideIdentifiers) {\n            this.overrideIdentifiers.add(overrideIdentifier);\n        }\n        this.updateOverridePropertyPatternKey();\n    }\n    doRegisterConfigurations(configurations, validate, bucket) {\n        configurations.forEach(configuration => {\n            this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties, undefined, bucket);\n            this.configurationContributors.push(configuration);\n            this.registerJSONConfiguration(configuration);\n        });\n    }\n    validateAndRegisterProperties(configuration, validate = true, extensionInfo, restrictedProperties, scope = 3 /* ConfigurationScope.WINDOW */, bucket) {\n        var _a;\n        scope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n        const properties = configuration.properties;\n        if (properties) {\n            for (const key in properties) {\n                const property = properties[key];\n                if (validate && validateProperty(key, property)) {\n                    delete properties[key];\n                    continue;\n                }\n                property.source = extensionInfo;\n                // update default value\n                property.defaultDefaultValue = properties[key].default;\n                this.updatePropertyDefaultValue(key, property);\n                // update scope\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    property.scope = undefined; // No scope for overridable properties `[${identifier}]`\n                }\n                else {\n                    property.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n                    property.restricted = types.isUndefinedOrNull(property.restricted) ? !!(restrictedProperties === null || restrictedProperties === void 0 ? void 0 : restrictedProperties.includes(key)) : property.restricted;\n                }\n                // Add to properties maps\n                // Property is included by default if 'included' is unspecified\n                if (properties[key].hasOwnProperty('included') && !properties[key].included) {\n                    this.excludedConfigurationProperties[key] = properties[key];\n                    delete properties[key];\n                    continue;\n                }\n                else {\n                    this.configurationProperties[key] = properties[key];\n                    if ((_a = properties[key].policy) === null || _a === void 0 ? void 0 : _a.name) {\n                        this.policyConfigurations.set(properties[key].policy.name, key);\n                    }\n                }\n                if (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n                    // If not set, default deprecationMessage to the markdown source\n                    properties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n                }\n                bucket.add(key);\n            }\n        }\n        const subNodes = configuration.allOf;\n        if (subNodes) {\n            for (const node of subNodes) {\n                this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope, bucket);\n            }\n        }\n    }\n    getConfigurationProperties() {\n        return this.configurationProperties;\n    }\n    getPolicyConfigurations() {\n        return this.policyConfigurations;\n    }\n    registerJSONConfiguration(configuration) {\n        const register = (configuration) => {\n            const properties = configuration.properties;\n            if (properties) {\n                for (const key in properties) {\n                    this.updateSchema(key, properties[key]);\n                }\n            }\n            const subNodes = configuration.allOf;\n            subNodes === null || subNodes === void 0 ? void 0 : subNodes.forEach(register);\n        };\n        register(configuration);\n    }\n    updateSchema(key, property) {\n        allSettings.properties[key] = property;\n        switch (property.scope) {\n            case 1 /* ConfigurationScope.APPLICATION */:\n                applicationSettings.properties[key] = property;\n                break;\n            case 2 /* ConfigurationScope.MACHINE */:\n                machineSettings.properties[key] = property;\n                break;\n            case 6 /* ConfigurationScope.MACHINE_OVERRIDABLE */:\n                machineOverridableSettings.properties[key] = property;\n                break;\n            case 3 /* ConfigurationScope.WINDOW */:\n                windowSettings.properties[key] = property;\n                break;\n            case 4 /* ConfigurationScope.RESOURCE */:\n                resourceSettings.properties[key] = property;\n                break;\n            case 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */:\n                resourceSettings.properties[key] = property;\n                this.resourceLanguageSettingsSchema.properties[key] = property;\n                break;\n        }\n    }\n    updateOverridePropertyPatternKey() {\n        for (const overrideIdentifier of this.overrideIdentifiers.values()) {\n            const overrideIdentifierProperty = `[${overrideIdentifier}]`;\n            const resourceLanguagePropertiesSchema = {\n                type: 'object',\n                description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n                errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n                $ref: resourceLanguageSettingsSchemaId,\n            };\n            this.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n            allSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            applicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            windowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            resourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n        }\n    }\n    registerOverridePropertyPatternKey() {\n        const resourceLanguagePropertiesSchema = {\n            type: 'object',\n            description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n            errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n            $ref: resourceLanguageSettingsSchemaId,\n        };\n        allSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        applicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        windowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        resourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        this._onDidSchemaChange.fire();\n    }\n    updatePropertyDefaultValue(key, property) {\n        const configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n        let defaultValue = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.value;\n        let defaultSource = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.source;\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = property.defaultDefaultValue;\n            defaultSource = undefined;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = getDefaultValue(property.type);\n        }\n        property.default = defaultValue;\n        property.defaultValueSource = defaultSource;\n    }\n}\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\nexport function overrideIdentifiersFromKey(key) {\n    const identifiers = [];\n    if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        let matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        while (matches === null || matches === void 0 ? void 0 : matches.length) {\n            const identifier = matches[1].trim();\n            if (identifier) {\n                identifiers.push(identifier);\n            }\n            matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        }\n    }\n    return distinct(identifiers);\n}\nexport function getDefaultValue(type) {\n    const t = Array.isArray(type) ? type[0] : type;\n    switch (t) {\n        case 'boolean':\n            return false;\n        case 'integer':\n        case 'number':\n            return 0;\n        case 'string':\n            return '';\n        case 'array':\n            return [];\n        case 'object':\n            return {};\n        default:\n            return null;\n    }\n}\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\nexport function validateProperty(property, schema) {\n    var _a, _b, _c, _d;\n    if (!property.trim()) {\n        return nls.localize('config.property.empty', \"Cannot register an empty property\");\n    }\n    if (OVERRIDE_PROPERTY_REGEX.test(property)) {\n        return nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n    }\n    if (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n        return nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n    }\n    if (((_a = schema.policy) === null || _a === void 0 ? void 0 : _a.name) && configurationRegistry.getPolicyConfigurations().get((_b = schema.policy) === null || _b === void 0 ? void 0 : _b.name) !== undefined) {\n        return nls.localize('config.policy.duplicate', \"Cannot register '{0}'. The associated policy {1} is already registered with {2}.\", property, (_c = schema.policy) === null || _c === void 0 ? void 0 : _c.name, configurationRegistry.getPolicyConfigurations().get((_d = schema.policy) === null || _d === void 0 ? void 0 : _d.name));\n    }\n    return null;\n}\n","import { Disposable } from '../../../base/common/lifecycle.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfiguration extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._configurationModel = new ConfigurationModel();\n    }\n    get configurationModel() {\n        return this._configurationModel;\n    }\n    reload() {\n        this.resetConfigurationModel();\n        return this.configurationModel;\n    }\n    getConfigurationDefaultOverrides() {\n        return {};\n    }\n    resetConfigurationModel() {\n        this._configurationModel = new ConfigurationModel();\n        const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        this.updateConfigurationModel(Object.keys(properties), properties);\n    }\n    updateConfigurationModel(properties, configurationProperties) {\n        const configurationDefaultsOverrides = this.getConfigurationDefaultOverrides();\n        for (const key of properties) {\n            const defaultOverrideValue = configurationDefaultsOverrides[key];\n            const propertySchema = configurationProperties[key];\n            if (defaultOverrideValue !== undefined) {\n                this._configurationModel.addValue(key, defaultOverrideValue);\n            }\n            else if (propertySchema) {\n                this._configurationModel.addValue(key, propertySchema.default);\n            }\n            else {\n                this._configurationModel.removeValue(key);\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { PauseableEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { cloneAndChange } from '../../../base/common/objects.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey } from '../common/contextkey.js';\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\nexport class Context {\n    constructor(id, parent) {\n        this._id = id;\n        this._parent = parent;\n        this._value = Object.create(null);\n        this._value['_contextId'] = id;\n    }\n    get value() {\n        return Object.assign({}, this._value);\n    }\n    setValue(key, value) {\n        // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n        if (this._value[key] !== value) {\n            this._value[key] = value;\n            return true;\n        }\n        return false;\n    }\n    removeValue(key) {\n        // console.log('REMOVE ' + key + ' FROM ' + this._id);\n        if (key in this._value) {\n            delete this._value[key];\n            return true;\n        }\n        return false;\n    }\n    getValue(key) {\n        const ret = this._value[key];\n        if (typeof ret === 'undefined' && this._parent) {\n            return this._parent.getValue(key);\n        }\n        return ret;\n    }\n}\nclass NullContext extends Context {\n    constructor() {\n        super(-1, null);\n    }\n    setValue(key, value) {\n        return false;\n    }\n    removeValue(key) {\n        return false;\n    }\n    getValue(key) {\n        return undefined;\n    }\n}\nNullContext.INSTANCE = new NullContext();\nclass ConfigAwareContextValuesContainer extends Context {\n    constructor(id, _configurationService, emitter) {\n        super(id, null);\n        this._configurationService = _configurationService;\n        this._values = TernarySearchTree.forConfigKeys();\n        this._listener = this._configurationService.onDidChangeConfiguration(event => {\n            if (event.source === 7 /* ConfigurationTarget.DEFAULT */) {\n                // new setting, reset everything\n                const allKeys = Array.from(this._values, ([k]) => k);\n                this._values.clear();\n                emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n            }\n            else {\n                const changedKeys = [];\n                for (const configKey of event.affectedKeys) {\n                    const contextKey = `config.${configKey}`;\n                    const cachedItems = this._values.findSuperstr(contextKey);\n                    if (cachedItems !== undefined) {\n                        changedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\n                        this._values.deleteSuperstr(contextKey);\n                    }\n                    if (this._values.has(contextKey)) {\n                        changedKeys.push(contextKey);\n                        this._values.delete(contextKey);\n                    }\n                }\n                emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n            }\n        });\n    }\n    dispose() {\n        this._listener.dispose();\n    }\n    getValue(key) {\n        if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n            return super.getValue(key);\n        }\n        if (this._values.has(key)) {\n            return this._values.get(key);\n        }\n        const configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n        const configValue = this._configurationService.getValue(configKey);\n        let value = undefined;\n        switch (typeof configValue) {\n            case 'number':\n            case 'boolean':\n            case 'string':\n                value = configValue;\n                break;\n            default:\n                if (Array.isArray(configValue)) {\n                    value = JSON.stringify(configValue);\n                }\n                else {\n                    value = configValue;\n                }\n        }\n        this._values.set(key, value);\n        return value;\n    }\n    setValue(key, value) {\n        return super.setValue(key, value);\n    }\n    removeValue(key) {\n        return super.removeValue(key);\n    }\n}\nConfigAwareContextValuesContainer._keyPrefix = 'config.';\nclass ContextKey {\n    constructor(service, key, defaultValue) {\n        this._service = service;\n        this._key = key;\n        this._defaultValue = defaultValue;\n        this.reset();\n    }\n    set(value) {\n        this._service.setContext(this._key, value);\n    }\n    reset() {\n        if (typeof this._defaultValue === 'undefined') {\n            this._service.removeContext(this._key);\n        }\n        else {\n            this._service.setContext(this._key, this._defaultValue);\n        }\n    }\n    get() {\n        return this._service.getContextKeyValue(this._key);\n    }\n}\nclass SimpleContextKeyChangeEvent {\n    constructor(key) {\n        this.key = key;\n    }\n    affectsSome(keys) {\n        return keys.has(this.key);\n    }\n    allKeysContainedIn(keys) {\n        return this.affectsSome(keys);\n    }\n}\nclass ArrayContextKeyChangeEvent {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    affectsSome(keys) {\n        for (const key of this.keys) {\n            if (keys.has(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.keys.every(key => keys.has(key));\n    }\n}\nclass CompositeContextKeyChangeEvent {\n    constructor(events) {\n        this.events = events;\n    }\n    affectsSome(keys) {\n        for (const e of this.events) {\n            if (e.affectsSome(keys)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.events.every(evt => evt.allKeysContainedIn(keys));\n    }\n}\nfunction allEventKeysInContext(event, context) {\n    return event.allKeysContainedIn(new Set(Object.keys(context)));\n}\nexport class AbstractContextKeyService {\n    constructor(myContextId) {\n        this._onDidChangeContext = new PauseableEmitter({ merge: input => new CompositeContextKeyChangeEvent(input) });\n        this.onDidChangeContext = this._onDidChangeContext.event;\n        this._isDisposed = false;\n        this._myContextId = myContextId;\n    }\n    createKey(key, defaultValue) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ContextKey(this, key, defaultValue);\n    }\n    bufferChangeEvents(callback) {\n        this._onDidChangeContext.pause();\n        try {\n            callback();\n        }\n        finally {\n            this._onDidChangeContext.resume();\n        }\n    }\n    createScoped(domNode) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ScopedContextKeyService(this, domNode);\n    }\n    contextMatchesRules(rules) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        const context = this.getContextValuesContainer(this._myContextId);\n        const result = (rules ? rules.evaluate(context) : true);\n        // console.group(rules.serialize() + ' -> ' + result);\n        // rules.keys().forEach(key => { console.log(key, ctx[key]); });\n        // console.groupEnd();\n        return result;\n    }\n    getContextKeyValue(key) {\n        if (this._isDisposed) {\n            return undefined;\n        }\n        return this.getContextValuesContainer(this._myContextId).getValue(key);\n    }\n    setContext(key, value) {\n        if (this._isDisposed) {\n            return;\n        }\n        const myContext = this.getContextValuesContainer(this._myContextId);\n        if (!myContext) {\n            return;\n        }\n        if (myContext.setValue(key, value)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    removeContext(key) {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    getContext(target) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this.getContextValuesContainer(findContextAttr(target));\n    }\n}\nexport let ContextKeyService = class ContextKeyService extends AbstractContextKeyService {\n    constructor(configurationService) {\n        super(0);\n        this._contexts = new Map();\n        this._toDispose = new DisposableStore();\n        this._lastContextId = 0;\n        const myContext = new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext);\n        this._contexts.set(this._myContextId, myContext);\n        this._toDispose.add(myContext);\n        // Uncomment this to see the contexts continuously logged\n        // let lastLoggedValue: string | null = null;\n        // setInterval(() => {\n        // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n        // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n        // \tif (lastLoggedValue !== logValue) {\n        // \t\tlastLoggedValue = logValue;\n        // \t\tconsole.log(lastLoggedValue);\n        // \t}\n        // }, 2000);\n    }\n    dispose() {\n        this._onDidChangeContext.dispose();\n        this._isDisposed = true;\n        this._toDispose.dispose();\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._contexts.get(contextId) || NullContext.INSTANCE;\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ContextKeyService has been disposed`);\n        }\n        const id = (++this._lastContextId);\n        this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n        return id;\n    }\n    disposeContext(contextId) {\n        if (!this._isDisposed) {\n            this._contexts.delete(contextId);\n        }\n    }\n};\nContextKeyService = __decorate([\n    __param(0, IConfigurationService)\n], ContextKeyService);\nclass ScopedContextKeyService extends AbstractContextKeyService {\n    constructor(parent, domNode) {\n        super(parent.createChildContext());\n        this._parentChangeListener = new MutableDisposable();\n        this._parent = parent;\n        this._updateParentChangeListener();\n        this._domNode = domNode;\n        if (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            let extraInfo = '';\n            if (this._domNode.classList) {\n                extraInfo = Array.from(this._domNode.classList.values()).join(', ');\n            }\n            console.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\n        }\n        this._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\n    }\n    _updateParentChangeListener() {\n        // Forward parent events to this listener. Parent will change.\n        this._parentChangeListener.value = this._parent.onDidChangeContext(e => {\n            const thisContainer = this._parent.getContextValuesContainer(this._myContextId);\n            const thisContextValues = thisContainer.value;\n            if (!allEventKeysInContext(e, thisContextValues)) {\n                this._onDidChangeContext.fire(e);\n            }\n        });\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._onDidChangeContext.dispose();\n        this._parent.disposeContext(this._myContextId);\n        this._parentChangeListener.dispose();\n        this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n        this._isDisposed = true;\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._parent.getContextValuesContainer(contextId);\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ScopedContextKeyService has been disposed`);\n        }\n        return this._parent.createChildContext(parentContextId);\n    }\n    disposeContext(contextId) {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(contextId);\n    }\n}\nfunction findContextAttr(domNode) {\n    while (domNode) {\n        if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            const attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n            if (attr) {\n                return parseInt(attr, 10);\n            }\n            return NaN;\n        }\n        domNode = domNode.parentElement;\n    }\n    return 0;\n}\nexport function setContext(accessor, contextKey, contextValue) {\n    const contextKeyService = accessor.get(IContextKeyService);\n    contextKeyService.createKey(String(contextKey), stringifyURIs(contextValue));\n}\nfunction stringifyURIs(contextValue) {\n    return cloneAndChange(contextValue, (obj) => {\n        if (typeof obj === 'object' && obj.$mid === 1 /* MarshalledId.Uri */) {\n            return URI.revive(obj).toString();\n        }\n        if (obj instanceof URI) {\n            return obj.toString();\n        }\n        return undefined;\n    });\n}\nCommandsRegistry.registerCommand('_setContext', setContext);\nCommandsRegistry.registerCommand({\n    id: 'getContextKeyInfo',\n    handler() {\n        return [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\n    },\n    description: {\n        description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n        args: []\n    }\n});\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n    const result = [];\n    const seen = new Set();\n    for (const info of RawContextKey.all()) {\n        if (!seen.has(info.key)) {\n            seen.add(info.key);\n            result.push(info);\n        }\n    }\n    result.sort((a, b) => a.key.localeCompare(b.key));\n    console.log(JSON.stringify(result, undefined, 2));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalState } from '../../../base/common/errors.js';\nimport { localize } from '../../../nls.js';\nfunction hintDidYouMean(...meant) {\n    switch (meant.length) {\n        case 1:\n            return localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n        case 2:\n            return localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n        case 3:\n            return localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n        default: // we just don't expect that many\n            return undefined;\n    }\n}\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n    constructor() {\n        this._input = '';\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        // u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n        this.stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n    }\n    static getLexeme(token) {\n        switch (token.type) {\n            case 0 /* TokenType.LParen */:\n                return '(';\n            case 1 /* TokenType.RParen */:\n                return ')';\n            case 2 /* TokenType.Neg */:\n                return '!';\n            case 3 /* TokenType.Eq */:\n                return token.isTripleEq ? '===' : '==';\n            case 4 /* TokenType.NotEq */:\n                return token.isTripleEq ? '!==' : '!=';\n            case 5 /* TokenType.Lt */:\n                return '<';\n            case 6 /* TokenType.LtEq */:\n                return '<=';\n            case 7 /* TokenType.Gt */:\n                return '>=';\n            case 8 /* TokenType.GtEq */:\n                return '>=';\n            case 9 /* TokenType.RegexOp */:\n                return '=~';\n            case 10 /* TokenType.RegexStr */:\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                return 'true';\n            case 12 /* TokenType.False */:\n                return 'false';\n            case 13 /* TokenType.In */:\n                return 'in';\n            case 14 /* TokenType.Not */:\n                return 'not';\n            case 15 /* TokenType.And */:\n                return '&&';\n            case 16 /* TokenType.Or */:\n                return '||';\n            case 17 /* TokenType.Str */:\n                return token.lexeme;\n            case 18 /* TokenType.QuotedStr */:\n                return token.lexeme;\n            case 19 /* TokenType.Error */:\n                return token.lexeme;\n            case 20 /* TokenType.EOF */:\n                return 'EOF';\n            default:\n                throw illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n        }\n    }\n    reset(value) {\n        this._input = value;\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        return this;\n    }\n    scan() {\n        while (!this._isAtEnd()) {\n            this._start = this._current;\n            const ch = this._advance();\n            switch (ch) {\n                case 40 /* CharCode.OpenParen */:\n                    this._addToken(0 /* TokenType.LParen */);\n                    break;\n                case 41 /* CharCode.CloseParen */:\n                    this._addToken(1 /* TokenType.RParen */);\n                    break;\n                case 33 /* CharCode.ExclamationMark */:\n                    if (this._match(61 /* CharCode.Equals */)) {\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `!==`\n                        this._tokens.push({ type: 4 /* TokenType.NotEq */, offset: this._start, isTripleEq });\n                    }\n                    else {\n                        this._addToken(2 /* TokenType.Neg */);\n                    }\n                    break;\n                case 39 /* CharCode.SingleQuote */:\n                    this._quotedString();\n                    break;\n                case 47 /* CharCode.Slash */:\n                    this._regex();\n                    break;\n                case 61 /* CharCode.Equals */:\n                    if (this._match(61 /* CharCode.Equals */)) { // support `==`\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `===`\n                        this._tokens.push({ type: 3 /* TokenType.Eq */, offset: this._start, isTripleEq });\n                    }\n                    else if (this._match(126 /* CharCode.Tilde */)) {\n                        this._addToken(9 /* TokenType.RegexOp */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('==', '=~'));\n                    }\n                    break;\n                case 60 /* CharCode.LessThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 6 /* TokenType.LtEq */ : 5 /* TokenType.Lt */);\n                    break;\n                case 62 /* CharCode.GreaterThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 8 /* TokenType.GtEq */ : 7 /* TokenType.Gt */);\n                    break;\n                case 38 /* CharCode.Ampersand */:\n                    if (this._match(38 /* CharCode.Ampersand */)) {\n                        this._addToken(15 /* TokenType.And */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('&&'));\n                    }\n                    break;\n                case 124 /* CharCode.Pipe */:\n                    if (this._match(124 /* CharCode.Pipe */)) {\n                        this._addToken(16 /* TokenType.Or */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('||'));\n                    }\n                    break;\n                // TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n                case 32 /* CharCode.Space */:\n                case 13 /* CharCode.CarriageReturn */:\n                case 9 /* CharCode.Tab */:\n                case 10 /* CharCode.LineFeed */:\n                case 160 /* CharCode.NoBreakSpace */: // &nbsp\n                    break;\n                default:\n                    this._string();\n            }\n        }\n        this._start = this._current;\n        this._addToken(20 /* TokenType.EOF */);\n        return Array.from(this._tokens);\n    }\n    _match(expected) {\n        if (this._isAtEnd()) {\n            return false;\n        }\n        if (this._input.charCodeAt(this._current) !== expected) {\n            return false;\n        }\n        this._current++;\n        return true;\n    }\n    _advance() {\n        return this._input.charCodeAt(this._current++);\n    }\n    _peek() {\n        return this._isAtEnd() ? 0 /* CharCode.Null */ : this._input.charCodeAt(this._current);\n    }\n    _addToken(type) {\n        this._tokens.push({ type, offset: this._start });\n    }\n    _error(additional) {\n        const offset = this._start;\n        const lexeme = this._input.substring(this._start, this._current);\n        const errToken = { type: 19 /* TokenType.Error */, offset: this._start, lexeme };\n        this._errors.push({ offset, lexeme, additionalInfo: additional });\n        this._tokens.push(errToken);\n    }\n    _string() {\n        this.stringRe.lastIndex = this._start;\n        const match = this.stringRe.exec(this._input);\n        if (match) {\n            this._current = this._start + match[0].length;\n            const lexeme = this._input.substring(this._start, this._current);\n            const keyword = Scanner._keywords.get(lexeme);\n            if (keyword) {\n                this._addToken(keyword);\n            }\n            else {\n                this._tokens.push({ type: 17 /* TokenType.Str */, lexeme, offset: this._start });\n            }\n        }\n    }\n    // captures the lexeme without the leading and trailing '\n    _quotedString() {\n        while (this._peek() !== 39 /* CharCode.SingleQuote */ && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n            this._advance();\n        }\n        if (this._isAtEnd()) {\n            this._error(hintDidYouForgetToOpenOrCloseQuote);\n            return;\n        }\n        // consume the closing '\n        this._advance();\n        this._tokens.push({ type: 18 /* TokenType.QuotedStr */, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n    }\n    /*\n     * Lexing a regex expression: /.../[igsmyu]*\n     * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n     *\n     * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n     */\n    _regex() {\n        let p = this._current;\n        let inEscape = false;\n        let inCharacterClass = false;\n        while (true) {\n            if (p >= this._input.length) {\n                this._current = p;\n                this._error(hintDidYouForgetToEscapeSlash);\n                return;\n            }\n            const ch = this._input.charCodeAt(p);\n            if (inEscape) { // parsing an escape character\n                inEscape = false;\n            }\n            else if (ch === 47 /* CharCode.Slash */ && !inCharacterClass) { // end of regex\n                p++;\n                break;\n            }\n            else if (ch === 91 /* CharCode.OpenSquareBracket */) {\n                inCharacterClass = true;\n            }\n            else if (ch === 92 /* CharCode.Backslash */) {\n                inEscape = true;\n            }\n            else if (ch === 93 /* CharCode.CloseSquareBracket */) {\n                inCharacterClass = false;\n            }\n            p++;\n        }\n        // Consume flags // TODO@ulugbekna: use regex instead\n        while (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n            p++;\n        }\n        this._current = p;\n        const lexeme = this._input.substring(this._start, this._current);\n        this._tokens.push({ type: 10 /* TokenType.RegexStr */, lexeme, offset: this._start });\n    }\n    _isAtEnd() {\n        return this._current >= this._input.length;\n    }\n}\nScanner._regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0)));\nScanner._keywords = new Map([\n    ['not', 14 /* TokenType.Not */],\n    ['in', 13 /* TokenType.In */],\n    ['false', 12 /* TokenType.False */],\n    ['true', 11 /* TokenType.True */],\n]);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { Scanner } from './scanner.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst defaultConfig = {\n    regexParsingWithErrorRecovery: true\n};\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n    constructor(_config = defaultConfig) {\n        this._config = _config;\n        // lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n        this._scanner = new Scanner();\n        // lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n        this._tokens = [];\n        this._current = 0; // invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n        this._parsingErrors = [];\n        this._flagsGYRe = /g|y/g;\n    }\n    /**\n     * Parse a context key expression.\n     *\n     * @param input the expression to parse\n     * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n     */\n    parse(input) {\n        if (input === '') {\n            this._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n            return undefined;\n        }\n        this._tokens = this._scanner.reset(input).scan();\n        // @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n        this._current = 0;\n        this._parsingErrors = [];\n        try {\n            const expr = this._expr();\n            if (!this._isAtEnd()) {\n                const peek = this._peek();\n                const additionalInfo = peek.type === 17 /* TokenType.Str */ ? hintUnexpectedToken : undefined;\n                this._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n                throw Parser._parseError;\n            }\n            return expr;\n        }\n        catch (e) {\n            if (!(e === Parser._parseError)) {\n                throw e;\n            }\n            return undefined;\n        }\n    }\n    _expr() {\n        return this._or();\n    }\n    _or() {\n        const expr = [this._and()];\n        while (this._matchOne(16 /* TokenType.Or */)) {\n            const right = this._and();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n    }\n    _and() {\n        const expr = [this._term()];\n        while (this._matchOne(15 /* TokenType.And */)) {\n            const right = this._term();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n    }\n    _term() {\n        if (this._matchOne(2 /* TokenType.Neg */)) {\n            const peek = this._peek();\n            switch (peek.type) {\n                case 11 /* TokenType.True */:\n                    this._advance();\n                    return ContextKeyFalseExpr.INSTANCE;\n                case 12 /* TokenType.False */:\n                    this._advance();\n                    return ContextKeyTrueExpr.INSTANCE;\n                case 0 /* TokenType.LParen */: {\n                    this._advance();\n                    const expr = this._expr();\n                    this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                    return expr === null || expr === void 0 ? void 0 : expr.negate();\n                }\n                case 17 /* TokenType.Str */:\n                    this._advance();\n                    return ContextKeyNotExpr.create(peek.lexeme);\n                default:\n                    throw this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n            }\n        }\n        return this._primary();\n    }\n    _primary() {\n        const peek = this._peek();\n        switch (peek.type) {\n            case 11 /* TokenType.True */:\n                this._advance();\n                return ContextKeyExpr.true();\n            case 12 /* TokenType.False */:\n                this._advance();\n                return ContextKeyExpr.false();\n            case 0 /* TokenType.LParen */: {\n                this._advance();\n                const expr = this._expr();\n                this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                return expr;\n            }\n            case 17 /* TokenType.Str */: {\n                // KEY\n                const key = peek.lexeme;\n                this._advance();\n                // =~ regex\n                if (this._matchOne(9 /* TokenType.RegexOp */)) {\n                    // @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n                    const expr = this._peek();\n                    if (!this._config.regexParsingWithErrorRecovery) {\n                        this._advance();\n                        if (expr.type !== 10 /* TokenType.RegexStr */) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        const regexLexeme = expr.lexeme;\n                        const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                        const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                        let regexp;\n                        try {\n                            regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                        }\n                        catch (e) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        return ContextKeyRegexExpr.create(key, regexp);\n                    }\n                    switch (expr.type) {\n                        case 10 /* TokenType.RegexStr */:\n                        case 19 /* TokenType.Error */: { // also handle an ErrorToken in case of smth such as /(/file)/\n                            const lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n                            this._advance();\n                            let followingToken = this._peek();\n                            let parenBalance = 0;\n                            for (let i = 0; i < expr.lexeme.length; i++) {\n                                if (expr.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                    parenBalance++;\n                                }\n                                else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                    parenBalance--;\n                                }\n                            }\n                            while (!this._isAtEnd() && followingToken.type !== 15 /* TokenType.And */ && followingToken.type !== 16 /* TokenType.Or */) {\n                                switch (followingToken.type) {\n                                    case 0 /* TokenType.LParen */:\n                                        parenBalance++;\n                                        break;\n                                    case 1 /* TokenType.RParen */:\n                                        parenBalance--;\n                                        break;\n                                    case 10 /* TokenType.RegexStr */:\n                                    case 18 /* TokenType.QuotedStr */:\n                                        for (let i = 0; i < followingToken.lexeme.length; i++) {\n                                            if (followingToken.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                                parenBalance++;\n                                            }\n                                            else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                                parenBalance--;\n                                            }\n                                        }\n                                }\n                                if (parenBalance < 0) {\n                                    break;\n                                }\n                                lexemeReconstruction.push(Scanner.getLexeme(followingToken));\n                                this._advance();\n                                followingToken = this._peek();\n                            }\n                            const regexLexeme = lexemeReconstruction.join('');\n                            const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                            const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                            let regexp;\n                            try {\n                                regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                            }\n                            catch (e) {\n                                throw this._errExpectedButGot(`REGEX`, expr);\n                            }\n                            return ContextKeyExpr.regex(key, regexp);\n                        }\n                        case 18 /* TokenType.QuotedStr */: {\n                            const serializedValue = expr.lexeme;\n                            this._advance();\n                            // replicate old regex parsing behavior\n                            let regex = null;\n                            if (!isFalsyOrWhitespace(serializedValue)) {\n                                const start = serializedValue.indexOf('/');\n                                const end = serializedValue.lastIndexOf('/');\n                                if (start !== end && start >= 0) {\n                                    const value = serializedValue.slice(start + 1, end);\n                                    const caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n                                    try {\n                                        regex = new RegExp(value, caseIgnoreFlag);\n                                    }\n                                    catch (_e) {\n                                        throw this._errExpectedButGot(`REGEX`, expr);\n                                    }\n                                }\n                            }\n                            if (regex === null) {\n                                throw this._errExpectedButGot('REGEX', expr);\n                            }\n                            return ContextKeyRegexExpr.create(key, regex);\n                        }\n                        default:\n                            throw this._errExpectedButGot('REGEX', this._peek());\n                    }\n                }\n                // [ 'not' 'in' value ]\n                if (this._matchOne(14 /* TokenType.Not */)) {\n                    this._consume(13 /* TokenType.In */, errorNoInAfterNot);\n                    const right = this._value();\n                    return ContextKeyExpr.notIn(key, right);\n                }\n                // [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n                const maybeOp = this._peek().type;\n                switch (maybeOp) {\n                    case 3 /* TokenType.Eq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n                            return ContextKeyExpr.equals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.has(key);\n                            case 'false':\n                                return ContextKeyExpr.not(key);\n                            default:\n                                return ContextKeyExpr.equals(key, right);\n                        }\n                    }\n                    case 4 /* TokenType.NotEq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // same as above with \"foo != 'true'\"\n                            return ContextKeyExpr.notEquals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.not(key);\n                            case 'false':\n                                return ContextKeyExpr.has(key);\n                            default:\n                                return ContextKeyExpr.notEquals(key, right);\n                        }\n                    }\n                    // TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n                    // consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n                    case 5 /* TokenType.Lt */:\n                        this._advance();\n                        return ContextKeySmallerExpr.create(key, this._value());\n                    case 6 /* TokenType.LtEq */:\n                        this._advance();\n                        return ContextKeySmallerEqualsExpr.create(key, this._value());\n                    case 7 /* TokenType.Gt */:\n                        this._advance();\n                        return ContextKeyGreaterExpr.create(key, this._value());\n                    case 8 /* TokenType.GtEq */:\n                        this._advance();\n                        return ContextKeyGreaterEqualsExpr.create(key, this._value());\n                    case 13 /* TokenType.In */:\n                        this._advance();\n                        return ContextKeyExpr.in(key, this._value());\n                    default:\n                        return ContextKeyExpr.has(key);\n                }\n            }\n            case 20 /* TokenType.EOF */:\n                this._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n                throw Parser._parseError;\n            default:\n                throw this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n        }\n    }\n    _value() {\n        const token = this._peek();\n        switch (token.type) {\n            case 17 /* TokenType.Str */:\n            case 18 /* TokenType.QuotedStr */:\n                this._advance();\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                this._advance();\n                return 'true';\n            case 12 /* TokenType.False */:\n                this._advance();\n                return 'false';\n            case 13 /* TokenType.In */: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n                this._advance();\n                return 'in';\n            default:\n                // this allows \"when\": \"foo == \" which's used by existing extensions\n                // we do not call `_advance` on purpose - we don't want to eat unintended tokens\n                return '';\n        }\n    }\n    _removeFlagsGY(flags) {\n        return flags.replaceAll(this._flagsGYRe, '');\n    }\n    // careful: this can throw if current token is the initial one (ie index = 0)\n    _previous() {\n        return this._tokens[this._current - 1];\n    }\n    _matchOne(token) {\n        if (this._check(token)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    _advance() {\n        if (!this._isAtEnd()) {\n            this._current++;\n        }\n        return this._previous();\n    }\n    _consume(type, message) {\n        if (this._check(type)) {\n            return this._advance();\n        }\n        throw this._errExpectedButGot(message, this._peek());\n    }\n    _errExpectedButGot(expected, got, additionalInfo) {\n        const message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n        const offset = got.offset;\n        const lexeme = Scanner.getLexeme(got);\n        this._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n        return Parser._parseError;\n    }\n    _check(type) {\n        return this._peek().type === type;\n    }\n    _peek() {\n        return this._tokens[this._current];\n    }\n    _isAtEnd() {\n        return this._peek().type === 20 /* TokenType.EOF */;\n    }\n}\n// Note: this doesn't produce an exact syntax tree but a normalized one\n// ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\nParser._parseError = new Error();\nexport class ContextKeyExpr {\n    static false() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n    static true() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static notEquals(key, value) {\n        return ContextKeyNotEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static in(key, value) {\n        return ContextKeyInExpr.create(key, value);\n    }\n    static notIn(key, value) {\n        return ContextKeyNotInExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null, true);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static deserialize(serialized) {\n        if (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n            return undefined;\n        }\n        const expr = this._parser.parse(serialized);\n        return expr;\n    }\n}\nContextKeyExpr._parser = new Parser({ regexParsingWithErrorRecovery: false });\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    constructor() {\n        this.type = 0 /* ContextKeyExprType.False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\nexport class ContextKeyTrueExpr {\n    constructor() {\n        this.type = 1 /* ContextKeyExprType.True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\nexport class ContextKeyDefinedExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* ContextKeyExprType.Defined */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* ContextKeyExprType.Equals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* ContextKeyExprType.In */;\n        this.negated = null;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return source.includes(item);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyNotInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 11 /* ContextKeyExprType.NotIn */;\n        this._negated = ContextKeyInExpr.create(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._negated.cmp(other._negated);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._negated.equals(other._negated);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._negated.evaluate(context);\n    }\n    serialize() {\n        return `${this.key} not in '${this.valueKey}'`;\n    }\n    keys() {\n        return this._negated.keys();\n    }\n    negate() {\n        return this._negated;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* ContextKeyExprType.NotEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* ContextKeyExprType.Not */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* ContextKeyExprType.Greater */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* ContextKeyExprType.GreaterEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* ContextKeyExprType.Smaller */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* ContextKeyExprType.SmallerEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* ContextKeyExprType.Regex */;\n        this.negated = null;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.flags}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* ContextKeyExprType.NotRegex */;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        return `!(${this._actual.serialize()})`;\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nexport class ContextKeyAndExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* ContextKeyExprType.And */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* ContextKeyExprType.True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* ContextKeyExprType.False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* ContextKeyExprType.And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* ContextKeyExprType.Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve false AND expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A && !A case\n                        return ContextKeyFalseExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyOrExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* ContextKeyExprType.Or */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* ContextKeyExprType.False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* ContextKeyExprType.True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* ContextKeyExprType.Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve true OR expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A || !A case\n                        return ContextKeyTrueExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null, false));\n                    }\n                }\n                result.unshift(ContextKeyOrExpr.create(all, null, false));\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    static all() {\n        return RawContextKey._info.values();\n    }\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push(Object.assign(Object.assign({}, metaOrHide), { key }));\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nRawContextKey._info = [];\nexport const IContextKeyService = createDecorator('contextKeyService');\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (p.type === 0 /* ContextKeyExprType.False */ || q.type === 1 /* ContextKeyExprType.True */) {\n        // false implies anything\n        // anything implies true\n        return true;\n    }\n    if (p.type === 9 /* ContextKeyExprType.Or */) {\n        if (q.type === 9 /* ContextKeyExprType.Or */) {\n            // `a || b || c` can only imply something like `a || b || c || d`\n            return allElementsIncluded(p.expr, q.expr);\n        }\n        return false;\n    }\n    if (q.type === 9 /* ContextKeyExprType.Or */) {\n        for (const element of q.expr) {\n            if (implies(p, element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (p.type === 6 /* ContextKeyExprType.And */) {\n        if (q.type === 6 /* ContextKeyExprType.And */) {\n            // `a && b && c` implies `a && c`\n            return allElementsIncluded(q.expr, p.expr);\n        }\n        for (const element of p.expr) {\n            if (implies(element, q)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return p.equals(q);\n}\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p, q) {\n    let pIndex = 0;\n    let qIndex = 0;\n    while (pIndex < p.length && qIndex < q.length) {\n        const cmp = p[pIndex].cmp(q[qIndex]);\n        if (cmp < 0) {\n            // an element from `p` is missing from `q`\n            return false;\n        }\n        else if (cmp === 0) {\n            pIndex++;\n            qIndex++;\n        }\n        else {\n            qIndex++;\n        }\n    }\n    return (pIndex === p.length);\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* ContextKeyExprType.Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isIOS, isLinux, isMacintosh, isMobile, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { RawContextKey } from './contextkey.js';\nexport const IsMacContext = new RawContextKey('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\nexport const IsWebContext = new RawContextKey('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsMobileContext = new RawContextKey('isMobile', isMobile, localize('isMobile', \"Whether the platform is a mobile web browser\"));\nexport const IsDevelopmentContext = new RawContextKey('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, getActiveElement, isAncestor, isHTMLElement } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { defaultMenuStyles } from '../../theme/browser/defaultStyles.js';\nexport class ContextMenuHandler {\n    constructor(contextViewService, telemetryService, notificationService, keybindingService) {\n        this.contextViewService = contextViewService;\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.keybindingService = keybindingService;\n        this.focusToReturn = null;\n        this.lastContainer = null;\n        this.block = null;\n        this.blockDisposable = null;\n        this.options = { blockMouse: true };\n    }\n    configure(options) {\n        this.options = options;\n    }\n    showContextMenu(delegate) {\n        const actions = delegate.getActions();\n        if (!actions.length) {\n            return; // Don't render an empty context menu\n        }\n        this.focusToReturn = document.activeElement;\n        let menu;\n        const shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n        this.contextViewService.showContextView({\n            getAnchor: () => delegate.getAnchor(),\n            canRelayout: false,\n            anchorAlignment: delegate.anchorAlignment,\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\n            render: (container) => {\n                var _a;\n                this.lastContainer = container;\n                const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n                if (className) {\n                    container.className += ' ' + className;\n                }\n                // Render invisible div to block mouse interaction in the rest of the UI\n                if (this.options.blockMouse) {\n                    this.block = container.appendChild($('.context-view-block'));\n                    this.block.style.position = 'fixed';\n                    this.block.style.cursor = 'initial';\n                    this.block.style.left = '0';\n                    this.block.style.top = '0';\n                    this.block.style.width = '100%';\n                    this.block.style.height = '100%';\n                    this.block.style.zIndex = '-1';\n                    (_a = this.blockDisposable) === null || _a === void 0 ? void 0 : _a.dispose();\n                    this.blockDisposable = addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n                }\n                const menuDisposables = new DisposableStore();\n                const actionRunner = delegate.actionRunner || new ActionRunner();\n                actionRunner.onWillRun(evt => this.onActionRun(evt, !delegate.skipTelemetry), this, menuDisposables);\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n                menu = new Menu(container, actions, {\n                    actionViewItemProvider: delegate.getActionViewItem,\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n                    actionRunner,\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n                }, defaultMenuStyles);\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menuDisposables.add(addDisposableListener(window, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n                menuDisposables.add(addDisposableListener(window, EventType.MOUSE_DOWN, (e) => {\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n                    const event = new StandardMouseEvent(e);\n                    let element = event.target;\n                    // Don't do anything as we are likely creating a context menu\n                    if (event.rightButton) {\n                        return;\n                    }\n                    while (element) {\n                        if (element === container) {\n                            return;\n                        }\n                        element = element.parentElement;\n                    }\n                    this.contextViewService.hideContextView(true);\n                }));\n                return combinedDisposable(menuDisposables, menu);\n            },\n            focus: () => {\n                menu === null || menu === void 0 ? void 0 : menu.focus(!!delegate.autoSelectFirstItem);\n            },\n            onHide: (didCancel) => {\n                var _a, _b, _c;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, !!didCancel);\n                if (this.block) {\n                    this.block.remove();\n                    this.block = null;\n                }\n                (_b = this.blockDisposable) === null || _b === void 0 ? void 0 : _b.dispose();\n                this.blockDisposable = null;\n                if (!!this.lastContainer && (getActiveElement() === this.lastContainer || isAncestor(getActiveElement(), this.lastContainer))) {\n                    (_c = this.focusToReturn) === null || _c === void 0 ? void 0 : _c.focus();\n                }\n                this.lastContainer = null;\n            }\n        }, shadowRootElement, !!shadowRootElement);\n    }\n    onActionRun(e, logTelemetry) {\n        if (logTelemetry) {\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n        }\n        this.contextViewService.hideContextView(false);\n    }\n    onDidActionRun(e) {\n        if (e.error && !isCancellationError(e.error)) {\n            this.notificationService.error(e.error);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { Separator } from '../../../base/common/actions.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createAndFillInContextMenuActions } from '../../actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId } from '../../actions/common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { ContextMenuHandler } from './contextMenuHandler.js';\nimport { IContextViewService } from './contextView.js';\nexport let ContextMenuService = class ContextMenuService extends Disposable {\n    get contextMenuHandler() {\n        if (!this._contextMenuHandler) {\n            this._contextMenuHandler = new ContextMenuHandler(this.contextViewService, this.telemetryService, this.notificationService, this.keybindingService);\n        }\n        return this._contextMenuHandler;\n    }\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService) {\n        super();\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.contextViewService = contextViewService;\n        this.keybindingService = keybindingService;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this._contextMenuHandler = undefined;\n        this._onDidShowContextMenu = this._store.add(new Emitter());\n        this._onDidHideContextMenu = this._store.add(new Emitter());\n    }\n    configure(options) {\n        this.contextMenuHandler.configure(options);\n    }\n    // ContextMenu\n    showContextMenu(delegate) {\n        delegate = ContextMenuMenuDelegate.transform(delegate, this.menuService, this.contextKeyService);\n        this.contextMenuHandler.showContextMenu(Object.assign(Object.assign({}, delegate), { onHide: (didCancel) => {\n                var _a;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, didCancel);\n                this._onDidHideContextMenu.fire();\n            } }));\n        ModifierKeyEmitter.getInstance().resetKeyStatus();\n        this._onDidShowContextMenu.fire();\n    }\n};\nContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IMenuService),\n    __param(5, IContextKeyService)\n], ContextMenuService);\nexport var ContextMenuMenuDelegate;\n(function (ContextMenuMenuDelegate) {\n    function is(thing) {\n        return thing && thing.menuId instanceof MenuId;\n    }\n    function transform(delegate, menuService, globalContextKeyService) {\n        if (!is(delegate)) {\n            return delegate;\n        }\n        const { menuId, menuActionOptions, contextKeyService } = delegate;\n        return Object.assign(Object.assign({}, delegate), { getActions: () => {\n                const target = [];\n                if (menuId) {\n                    const menu = menuService.createMenu(menuId, contextKeyService !== null && contextKeyService !== void 0 ? contextKeyService : globalContextKeyService);\n                    createAndFillInContextMenuActions(menu, menuActionOptions, target);\n                    menu.dispose();\n                }\n                if (!delegate.getActions) {\n                    return target;\n                }\n                else {\n                    return Separator.join(delegate.getActions(), target);\n                }\n            } });\n    }\n    ContextMenuMenuDelegate.transform = transform;\n})(ContextMenuMenuDelegate || (ContextMenuMenuDelegate = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IContextViewService = createDecorator('contextViewService');\nexport const IContextMenuService = createDecorator('contextMenuService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ContextView } from '../../../base/browser/ui/contextview/contextview.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nexport let ContextViewService = class ContextViewService extends Disposable {\n    constructor(layoutService) {\n        super();\n        this.layoutService = layoutService;\n        this.currentViewDisposable = Disposable.None;\n        this.container = layoutService.hasContainer ? layoutService.container : null;\n        this.contextView = this._register(new ContextView(this.container, 1 /* ContextViewDOMPosition.ABSOLUTE */));\n        this.layout();\n        this._register(layoutService.onDidLayout(() => this.layout()));\n    }\n    // ContextView\n    setContainer(container, domPosition) {\n        this.contextView.setContainer(container, domPosition || 1 /* ContextViewDOMPosition.ABSOLUTE */);\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (container) {\n            if (container !== this.container || this.shadowRoot !== shadowRoot) {\n                this.container = container;\n                this.setContainer(container, shadowRoot ? 3 /* ContextViewDOMPosition.FIXED_SHADOW */ : 2 /* ContextViewDOMPosition.FIXED */);\n            }\n        }\n        else {\n            if (this.layoutService.hasContainer && this.container !== this.layoutService.container) {\n                this.container = this.layoutService.container;\n                this.setContainer(this.container, 1 /* ContextViewDOMPosition.ABSOLUTE */);\n            }\n        }\n        this.shadowRoot = shadowRoot;\n        this.contextView.show(delegate);\n        const disposable = toDisposable(() => {\n            if (this.currentViewDisposable === disposable) {\n                this.hideContextView();\n            }\n        });\n        this.currentViewDisposable = disposable;\n        return disposable;\n    }\n    getContextViewElement() {\n        return this.contextView.getViewElement();\n    }\n    layout() {\n        this.contextView.layout();\n    }\n    hideContextView(data) {\n        this.contextView.hide(data);\n    }\n};\nContextViewService = __decorate([\n    __param(0, ILayoutService)\n], ContextViewService);\n"],"names":["isPseudo","document","location","hash","indexOf","_format","message","args","result","length","replace","match","rest","index","arg","String","localize","data","_len","arguments","Array","_key","getConfiguredDefaultLocale","_","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","AccessibilityService","Disposable","constructor","_contextKeyService","_layoutService","_configurationService","super","this","_accessibilitySupport","_onDidChangeScreenReaderOptimized","Emitter","_onDidChangeReducedMotion","_accessibilityModeEnabledContext","CONTEXT_ACCESSIBILITY_MODE_ENABLED","bindTo","updateContextKey","set","isScreenReaderOptimized","_register","onDidChangeConfiguration","e","affectsConfiguration","fire","_configMotionReduced","getValue","onDidChangeScreenReaderOptimized","reduceMotionMatcher","window","matchMedia","_systemMotionReduced","matches","initReducedMotionListeners","hasContainer","addDisposableListener","updateRootClasses","reduce","isMotionReduced","container","classList","toggle","onDidChangeReducedMotion","event","config","getAccessibilitySupport","IContextKeyService","ILayoutService","IConfigurationService","IAccessibilityService","createDecorator","RawContextKey","Categories","freeze","View","value","original","Help","Test","File","Preferences","Developer","comment","acceptSelectedActionCommand","previewSelectedActionCommand","HeaderRenderer","templateId","renderTemplate","add","text","createElement","append","renderElement","element","_index","templateData","_a","_b","textContent","group","title","disposeTemplate","_templateData","ActionItemRenderer","_supportsPreview","_keybindingService","icon","className","keybinding","KeybindingLabel","OS","_c","ThemeIcon","asClassName","color","style","asCssVariable","id","Codicon","lightBulb","item","label","stripNewlines","dom","actionTitle","lookupKeybinding","getLabel","previewTitle","disabled","IKeybindingService","AcceptSelectedEvent","UIEvent","PreviewSelectedEvent","ActionList","user","preview","items","_delegate","_contextViewService","_actionLineHeight","_headerLineHeight","domNode","virtualDelegate","getHeight","kind","getTemplateId","_list","List","keyboardSupport","accessibilityProvider","getAriaLabel","getWidgetAriaLabel","getRole","getWidgetRole","defaultListStyles","onMouseClick","onListClick","onMouseOver","onListHover","onDidChangeFocus","domFocus","onDidChangeSelection","onListSelection","_allMenuItems","splice","focusNext","focusCondition","hide","didCancel","onHide","hideContextView","layout","minWidth","numHeaders","filter","heightWithHeaders","itemWidths","map","getElementById","getElementID","width","getBoundingClientRect","Math","max","height","min","body","clientHeight","concat","focusPrevious","undefined","acceptSelected","focused","getFocus","focusIndex","setSelection","elements","onSelect","browserEvent","setFocus","str","IContextViewService","ActionWidgetContextKeys","Visible","IActionWidgetService","ActionWidgetService","isVisible","_instantiationService","MutableDisposable","show","supportsPreview","delegate","anchor","actionBarActions","visibleContext","list","createInstance","showContextView","getAnchor","render","_renderWidget","reset","_onWidgetClosed","clear","widget","appendChild","Error","renderDisposables","DisposableStore","menuBlock","block","MOUSE_DOWN","stopPropagation","pointerBlockDiv","pointerBlock","POINTER_MOVE","remove","actionBarWidth","actionBar","_createActionBar","getContainer","parentElement","offsetWidth","focusTracker","onDidBlur","actions","$","ActionBar","push","IInstantiationService","registerSingleton","weight","registerAction2","Action2","precondition","primary","secondary","run","accessor","get","mac","widgetService","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","createAndFillInContextMenuActions","menu","options","primaryGroup","groups","getActions","modifierKeyEmitter","ModifierKeyEmitter","getInstance","fillInActions","keyStatus","altKey","isWindows","isLinux","shiftKey","actionGroup","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","useAlternativeActions","primaryBucket","secondaryBucket","isPrimaryAction","isArray","submenuInfo","Set","Separator","action","MenuItemAction","alt","newLen","SubmenuAction","submenuActions","MenuEntryActionViewItem","ActionViewItem","_notificationService","_themeService","_contextMenuService","class","draggable","hoverDelegate","_wantsAltCommand","_itemClassDispose","_altKey","_menuItemAction","_action","_commandAction","onClick","preventDefault","actionRunner","_context","err","error","_updateItemClass","mouseOver","alternativeKeyDown","updateAltState","wantsAltCommand","enabled","updateLabel","updateTooltip","updateClass","getTooltip","keybindingLabel","tooltip","altTooltip","altKeybinding","altKeybindingLabel","altTitleSection","UILabelProvider","modifierLabels","checked","thing","toggled","condition","isThemeIcon","iconClasses","asClassNameArray","toDisposable","backgroundImage","isDark","getColorTheme","type","asCSSUrl","dark","light","combinedDisposable","onDidColorThemeChange","INotificationService","IThemeService","IContextMenuService","SubmenuEntryActionViewItem","DropdownMenuActionViewItem","dropdownOptions","assign","menuAsChild","classNames","keybindingProvider","assertType","setBackgroundImage","DropdownWithDefaultActionViewItem","BaseActionViewItem","submenuAction","_menuService","_instaService","_storageService","defaultAction","_container","_options","_storageKey","submenu","defaultActionId","persistLastActionId","find","a","_defaultAction","_getDefaultActionKeybindingLabel","ActionRunner","_dropdown","onDidRun","update","lastAction","store","dispose","runAction","context","prepend","defaultActionKeybinding","renderKeybindingWithDefaultActionLabel","kb","setActionContext","newContext","primaryContainer","EventType","KEY_DOWN","StandardKeyboardEvent","equals","tabIndex","focus","dropdownContainer","setFocusable","fromRight","blur","focusable","IMenuService","IStorageService","SubmenuEntrySelectActionViewItem","SelectActionViewItem","contextViewService","ID","isDisabled","defaultSelectBoxStyles","ariaLabel","optionsAsChildren","select","findIndex","borderColor","selectBorder","option","createActionViewItem","instaService","SubmenuItemAction","isSelection","rememberDefaultAction","WorkbenchToolBar","ToolBar","keybindingService","telemetryService","getKeyBinding","allowContextMenu","_sessionDisposables","_store","telemetrySource","publicLog2","from","setActions","_primary","_secondary","menuIds","slice","toggleActions","toggleActionsCheckedCount","extraSecondary","someAreHidden","hiddenItemStrategy","hideActions","isHidden","maxNumberOfItems","count","coalesceInPlace","join","getElement","_d","getItemAction","hideAction","noHide","toAction","resetMenu","resetHiddenStates","showContextMenu","menuId","contextMenu","menuActionOptions","renderShortTitle","menuOptions","contextKeyService","ITelemetryService","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","isIMenuItem","command","isISubmenuItem","MenuId","identifier","_instances","has","TypeError","Map","CommandPalette","DebugBreakpointsContext","DebugCallStackContext","DebugConsoleContext","DebugVariablesContext","DebugWatchContext","DebugToolBar","DebugToolBarStop","EditorContext","SimpleEditorContext","EditorContent","EditorLineNumberContext","EditorContextCopy","EditorContextPeek","EditorContextShare","EditorTitle","EditorTitleRun","EditorTitleContext","EditorTitleContextShare","EmptyEditorGroup","EmptyEditorGroupContext","EditorTabsBarContext","ExplorerContext","ExplorerContextShare","ExtensionContext","GlobalActivity","CommandCenter","LayoutControlMenuSubmenu","LayoutControlMenu","MenubarMainMenu","MenubarAppearanceMenu","MenubarDebugMenu","MenubarEditMenu","MenubarCopy","MenubarFileMenu","MenubarGoMenu","MenubarHelpMenu","MenubarLayoutMenu","MenubarNewBreakpointMenu","PanelAlignmentMenu","PanelPositionMenu","MenubarPreferencesMenu","MenubarRecentMenu","MenubarSelectionMenu","MenubarShare","MenubarSwitchEditorMenu","MenubarSwitchGroupMenu","MenubarTerminalMenu","MenubarViewMenu","MenubarHomeMenu","OpenEditorsContext","OpenEditorsContextShare","ProblemsPanelContext","SCMChangeContext","SCMResourceContext","SCMResourceContextShare","SCMResourceFolderContext","SCMResourceGroupContext","SCMSourceControl","SCMTitle","SearchContext","SearchActionMenu","StatusBarWindowIndicatorMenu","StatusBarRemoteIndicatorMenu","StickyScrollContext","TestItem","TestItemGutter","TestPeekElement","TestPeekTitle","TouchBarContext","TitleBarContext","TitleBarTitleContext","TunnelContext","TunnelPrivacy","TunnelProtocol","TunnelPortInline","TunnelTitle","TunnelLocalAddressInline","TunnelOriginInline","ViewItemContext","ViewContainerTitle","ViewContainerTitleContext","ViewTitle","ViewTitleContext","CommentEditorActions","CommentThreadTitle","CommentThreadActions","CommentThreadAdditionalActions","CommentThreadTitleContext","CommentThreadCommentContext","CommentTitle","CommentActions","InteractiveToolbar","InteractiveCellTitle","InteractiveCellDelete","InteractiveCellExecute","InteractiveInputExecute","NotebookToolbar","NotebookCellTitle","NotebookCellDelete","NotebookCellInsert","NotebookCellBetween","NotebookCellListTop","NotebookCellExecute","NotebookCellExecutePrimary","NotebookDiffCellInputTitle","NotebookDiffCellMetadataTitle","NotebookDiffCellOutputsTitle","NotebookOutputToolbar","NotebookEditorLayoutConfigure","NotebookKernelSource","BulkEditTitle","BulkEditContext","TimelineItemContext","TimelineTitle","TimelineTitleContext","TimelineFilterSubMenu","AccountsContext","PanelTitle","AuxiliaryBarTitle","TerminalInstanceContext","TerminalEditorInstanceContext","TerminalNewDropdownContext","TerminalTabContext","TerminalTabEmptyAreaContext","TerminalInlineTabContext","WebviewContext","InlineCompletionsActions","NewFile","MergeInput1Toolbar","MergeInput2Toolbar","MergeBaseToolbar","MergeInputResultToolbar","InlineSuggestionToolbar","ChatContext","ChatCodeBlock","ChatMessageTitle","ChatExecute","MenuRegistryChangeEvent","for","_all","merge","events","ids","candidate","MenuRegistry","_commands","_menuItems","_onDidChangeMenu","MicrotaskEmitter","onDidChangeMenu","addCommand","delete","getCommand","getCommands","forEach","appendMenuItem","LinkedList","rm","appendMenuItems","getMenuItems","_appendImplicitItems","shortTitle","_commandService","contextMatchesRules","runArgs","shouldForwardArgs","executeCommand","ICommandService","ctor","disposables","f1","description","CommandsRegistry","registerCommand","handler","_len2","_key2","when","KeybindingsRegistry","registerKeybindingRule","ContextKeyExpr","and","MenuService","storageService","_hiddenStates","PersistedMenuHideState","createMenu","MenuImpl","emitEventsForSubmenuChanges","eventDebounceDelay","_disposables","_onDidChange","onDidChange","_ignoreChangeEvent","_hiddenByDefaultCache","raw","_data","JSON","parse","create","onDidChangeValue","console","log","_isHiddenByDefault","commandId","setDefaultState","hidden","hiddenByDefault","state","includes","updateHidden","entries","idx","removeFastWithoutKeepingOrder","_persist","menus","stringify","MenuInfo","_id","_collectContextKeysForSubmenus","_menuGroups","_structureContextKeys","_preconditionContextKeys","_toggledContextKeys","refresh","structureContextKeys","preconditionContextKeys","toggledContextKeys","menuItems","sort","_compareMenuItems","groupName","_collectContextKeys","_fillInKbExprKeys","toggledExpression","createActionGroups","activeActions","isMenuItem","isHiddenByDefault","menuHide","createMenuHide","g","exp","keys","b","aGroup","bGroup","localeCompare","aPrio","order","bPrio","_compareTitles","aStr","bStr","hiddenStates","commandService","_menuInfo","rebuildMenuSoon","RunOnceScheduler","isStructuralChange","isEnablementChange","isToggleChange","schedule","lazyListener","DebounceEmitter","onWillAddFirstListener","startLazyListener","onDidChangeContext","affectsSome","onDidRemoveLastListener","bind","delay","states","IAudioCueService","Sound","register","fileName","warning","foldedArea","break","quickFixes","taskCompleted","taskFailed","terminalBell","diffLineInserted","diffLineDeleted","diffLineModified","AudioCue","audioCue","sound","name","settingsKey","_audioCues","inlineSuggestion","terminalQuickFix","onDebugBreak","noInlayHints","terminalCommandFailed","notebookCellCompleted","notebookCellFailed","BrowserClipboardService","layoutService","logService","mapTextToType","findText","resources","isSafari","isWebkitWebView","installWebKitWriteTextWorkaround","currentWritePromise","DeferredPromise","webKitPendingClipboardWritePromise","isSettled","cancel","navigator","clipboard","write","ClipboardItem","catch","isRejected","writeText","complete","activeElement","textArea","position","execCommand","HTMLElement","removeChild","readText","readFindText","writeFindText","readResources","ILogService","IClipboardService","_onDidRegisterCommand","onDidRegisterCommand","idOrCommand","constraints","constraint","actualHandler","validateConstraints","commands","removeFn","unshift","ret","isEmpty","registerCommandAlias","oldId","newId","Iterable","first","toValuesTree","properties","conflictReporter","root","addToValueTree","settingsTreeRoot","segments","split","last","pop","curr","obj","removeFromValueTree","valueTree","doRemoveFromValueTree","shift","getConfigurationValue","settingPath","defaultValue","path","current","component","accessSetting","getLanguageTagSettingPlainKey","settingKey","isFrozen","objects","ConfigurationModel","_contents","_keys","_overrides","overrideConfigurations","rawConfiguration","_rawConfiguration","rawConfigurationModels","parser","ConfigurationModelParser","parseRaw","configurationModel","previous","contents","overrides","section","inspect","overrideIdentifier","override","getOverrideValue","merged","overrideContents","getContentsForOverrideIdentifer","overrideConfigurationModel","createOverrideConfigurationModel","raws","others","other","mergeContents","otherOverride","o","arrays","identifiers","every","contentsForKey","overrideContentsForKey","source","types","contentsForIdentifierOnly","contentsToMerge","toJSON","addValue","updateValue","setValue","removeValue","OVERRIDE_PROPERTY_REGEX","test","overrideIdentifiersFromKey","_name","_raw","_configurationModel","_restrictedConfigurations","restricted","hasExcludedProperties","doParseRaw","configurationProperties","Registry","as","Extensions","Configuration","getConfigurationProperties","filtered","toOverrides","filterOverriddenProperties","scopes","skipRestricted","propertySchema","scope","overrideRaw","keyInOverrideRaw","ConfigurationInspectValue","_value","overrideIdentifiers","defaultConfiguration","policyConfiguration","applicationConfiguration","userConfiguration","localUserConfiguration","remoteUserConfiguration","workspaceConfiguration","folderConfigurationModel","memoryConfigurationModel","model","inspectValue","userInspectValue","_userInspectValue","_defaultConfiguration","_policyConfiguration","_applicationConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","ResourceMap","_memoryConfiguration","_memoryConfigurationByResource","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidatedConfigurationModel","memoryConfiguration","resource","consolidateConfigurationModel","getFolderConfigurationModelForResource","size","getConsolidatedConfigurationModelForResource","_ref","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","uri","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","toData","defaults","policy","application","folders","parseConfigurationModel","URI","revive","ConfigurationChangeEvent","change","currentConfiguraiton","currentWorkspace","_marker","_markerCode1","charCodeAt","_markerCode2","affectedKeys","_previousConfiguration","_affectsConfigStr","previousConfiguration","needle","pos","code","value1","value2","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","JSONExtensions","JSONContribution","OVERRIDE_IDENTIFIER_PATTERN","OVERRIDE_IDENTIFIER_REGEX","RegExp","OVERRIDE_PROPERTY_PATTERN","exec","trim","distinct","configurationRegistry","_onDidSchemaChange","_onDidUpdateConfiguration","configurationDefaultsOverrides","defaultLanguageConfigurationOverridesNode","nls","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","allowTrailingCommas","allowComments","policyConfigurations","excludedConfigurationProperties","registerSchema","registerOverridePropertyPatternKey","registerConfiguration","configuration","validate","registerConfigurations","configurations","doRegisterConfigurations","registerDefaultConfigurations","configurationDefaults","doRegisterDefaultConfigurations","defaultsOverrides","bucket","configurationDefaultOverride","valuesSources","plainKey","property","default","$ref","defaultDefaultValue","defaultValueSource","updatePropertyDefaultValue","updateSchema","doRegisterOverrideIdentifiers","registerOverrideIdentifiers","updateOverridePropertyPatternKey","validateAndRegisterProperties","extensionInfo","restrictedProperties","registerJSONConfiguration","validateProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","allOf","node","getPolicyConfigurations","values","overrideIdentifierProperty","resourceLanguagePropertiesSchema","errorMessage","configurationdefaultOverride","defaultSource","getDefaultValue","schema","DefaultConfiguration","reload","resetConfigurationModel","getConfigurationDefaultOverrides","updateConfigurationModel","defaultOverrideValue","KEYBINDING_CONTEXT_ATTR","Context","parent","_parent","NullContext","INSTANCE","ConfigAwareContextValuesContainer","emitter","_values","TernarySearchTree","forConfigKeys","_listener","allKeys","k","ArrayContextKeyChangeEvent","changedKeys","configKey","contextKey","cachedItems","findSuperstr","_ref2","deleteSuperstr","_keyPrefix","substr","configValue","ContextKey","service","_service","_defaultValue","setContext","removeContext","getContextKeyValue","SimpleContextKeyChangeEvent","allKeysContainedIn","CompositeContextKeyChangeEvent","evt","AbstractContextKeyService","myContextId","_onDidChangeContext","PauseableEmitter","input","_isDisposed","_myContextId","createKey","bufferChangeEvents","callback","pause","resume","createScoped","ScopedContextKeyService","rules","getContextValuesContainer","evaluate","myContext","getContext","hasAttribute","attr","getAttribute","parseInt","NaN","findContextAttr","ContextKeyService","configurationService","_contexts","_toDispose","_lastContextId","contextId","createChildContext","parentContextId","disposeContext","_parentChangeListener","_updateParentChangeListener","_domNode","extraInfo","setAttribute","thisContextValues","removeAttribute","contextValue","cloneAndChange","$mid","toString","stringifyURIs","all","seen","info","hintDidYouMean","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","Scanner","_input","_start","_current","_tokens","_errors","stringRe","getLexeme","token","isTripleEq","lexeme","illegalState","scan","_isAtEnd","_advance","_addToken","_match","offset","_quotedString","_regex","_error","_string","expected","_peek","additional","substring","errToken","additionalInfo","lastIndex","keyword","_keywords","inEscape","inCharacterClass","ch","_regexFlags","CONSTANT_VALUES","isMacintosh","isWeb","isEdge","isFirefox","isChrome","defaultConfig","regexParsingWithErrorRecovery","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","Parser","_config","_scanner","_parsingErrors","_flagsGYRe","expr","_expr","peek","_parseError","_or","_and","_matchOne","right","or","_term","ContextKeyFalseExpr","ContextKeyTrueExpr","_consume","negate","ContextKeyNotExpr","_errExpectedButGot","true","false","regexLexeme","closingSlashIndex","lastIndexOf","flags","_removeFlagsGY","regexp","ContextKeyRegexExpr","lexemeReconstruction","followingToken","parenBalance","regex","serializedValue","isFalsyOrWhitespace","start","end","caseIgnoreFlag","_e","notIn","_previous","not","notEquals","ContextKeySmallerExpr","ContextKeySmallerEqualsExpr","ContextKeyGreaterExpr","ContextKeyGreaterEqualsExpr","in","replaceAll","_check","got","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyInExpr","ContextKeyNotInExpr","ContextKeyAndExpr","ContextKeyOrExpr","deserialize","serialized","_parser","expressionsAreEqualWithConstantSubstitution","aExpr","substituteConstants","bExpr","cmp","serialize","negated","constantValue","cmp1","cmp2","trueValue","valueKey","_negated","falseValue","withFloatOrStr","n","parseFloat","isNaN","thisSource","otherSource","ContextKeyNotRegexExpr","actual","_actual","eliminateConstantsInArray","arr","newArr","len","newExpr","j","extraRedundantCheck","_normalizeArr","exprArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","hasFalse","LEFT","RIGHT","left","getTerminals","_info","metaOrHide","toNegated","isEqualTo","key1","key2","implies","q","allElementsIncluded","pIndex","qIndex","IsWindowsContext","InputFocusedContextKey","isIOS","isMobile","ContextMenuHandler","notificationService","focusToReturn","lastContainer","blockDisposable","blockMouse","configure","shadowRootElement","isHTMLElement","domForShadowRoot","canRelayout","anchorAlignment","anchorAxisAlignment","getMenuClassName","cursor","top","zIndex","menuDisposables","onWillRun","onActionRun","skipTelemetry","onDidActionRun","Menu","actionViewItemProvider","getActionViewItem","getActionsContext","defaultMenuStyles","onDidCancel","BLUR","defaultPrevented","StandardMouseEvent","rightButton","autoSelectFirstItem","getActiveElement","isAncestor","logTelemetry","isCancellationError","ContextMenuService","contextMenuHandler","_contextMenuHandler","menuService","_onDidShowContextMenu","_onDidHideContextMenu","ContextMenuMenuDelegate","transform","resetKeyStatus","globalContextKeyService","ContextViewService","currentViewDisposable","None","contextView","ContextView","onDidLayout","setContainer","domPosition","shadowRoot","disposable","getContextViewElement","getViewElement"],"sourceRoot":""}